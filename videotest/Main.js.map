{
"version":3,
"file":"Main.js",
"sourceRoot":"file:///",
"sources":["C:/HaxeToolkit/haxe/std/js/_std/EReg.hx","C:/HaxeToolkit/haxe/std/js/_std/HxOverrides.hx","C:/HaxeToolkit/haxe/std/Lambda.hx","C:/HaxeToolkit/haxe/std/List.hx","C:/Development/haxe/kit-test/src/VideoTest.hx","C:/Development/haxe/kit/src/boot/ImageLoader.hx","C:/Development/haxe/kit/src/boot/TextLoader.hx","C:/Development/haxe/kit/src/boot/Assets.hx","C:/Development/haxe/kit/src/boot/Batch.hx","C:/Development/haxe/kit/src/boot/Runner.hx","C:/Development/haxe/kit/src/glee/GPU.hx","C:/Development/haxe/kit/src/glee/GPUBufferBase.hx","C:/Development/haxe/kit/src/glee/GPUCubeTexture.hx","C:/Development/haxe/kit/src/glee/GPUPorgramUtil.hx","C:/Development/haxe/kit/src/glee/GPUTexture.hx","C:/Development/haxe/kit/src/glee/GPUProgram.hx","C:/Development/haxe/kit/src/glee/macro/GPUBufferMacro.hx","C:/Development/haxe/kit/src/glmat/Mat4.hx","C:/Development/haxe/kit/src/glmat/Vec2.hx","C:/Development/haxe/kit/src/glmat/Vec3.hx","C:/Development/haxe/kit/src/glmat/Vec4.hx","C:/HaxeToolkit/haxe/std/haxe/Http.hx","C:/HaxeToolkit/haxe/std/haxe/Timer.hx","C:/HaxeToolkit/haxe/std/js/_std/haxe/ds/StringMap.hx","C:/HaxeToolkit/haxe/std/js/Boot.hx","C:/HaxeToolkit/haxe/std/js/Browser.hx","C:/HaxeToolkit/haxe/std/js/html/CanvasElement.hx","C:/Development/haxe/kit/src/jsloka/App.hx","C:/Development/haxe/kit/src/jsloka/Window.hx","C:/Development/haxe/kit/src/jsloka/asset/Loader.hx","C:/Development/haxe/kit/src/jsloka/gl/GL.hx","C:/Development/haxe/kit/src/korrigan/OrthoCamera.hx","C:/HaxeToolkit/haxe/lib/tink_core/1,0,0-rc,7/src/tink/core/Callback.hx","C:/HaxeToolkit/haxe/lib/tink_core/1,0,0-rc,7/src/tink/core/Error.hx","C:/HaxeToolkit/haxe/lib/tink_core/1,0,0-rc,7/src/tink/core/Future.hx","C:/HaxeToolkit/haxe/lib/tink_core/1,0,0-rc,7/src/tink/core/Lazy.hx","C:/HaxeToolkit/haxe/lib/tink_core/1,0,0-rc,7/src/tink/core/Outcome.hx","C:/HaxeToolkit/haxe/lib/tink_core/1,0,0-rc,7/src/tink/core/Pair.hx","C:/Development/haxe/kit/src/tri/SimpleTexturedProgram.hx","C:/Development/haxe/kit/src/glee/macro/GPUProgramMacro.hx","C:/HaxeToolkit/haxe/std/js/_std/Std.hx"],
"sourcesContent":["/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:coreApi class EReg {\n\n\tvar r : HaxeRegExp;\n\n\tpublic function new( r : String, opt : String ) : Void {\n\t\topt = opt.split(\"u\").join(\"\"); // 'u' (utf8) depends on page encoding\n\t\tthis.r = new HaxeRegExp(r, opt);\n\t}\n\n\tpublic function match( s : String ) : Bool {\n\t\tif( r.global ) r.lastIndex = 0;\n\t\tr.m = r.exec(s);\n\t\tr.s = s;\n\t\treturn (r.m != null);\n\t}\n\n\tpublic function matched( n : Int ) : String {\n\t\treturn if( r.m != null && n >= 0 && n < r.m.length ) r.m[n] else throw \"EReg::matched\";\n\t}\n\n\tpublic function matchedLeft() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn r.s.substr(0,r.m.index);\n\t}\n\n\tpublic function matchedRight() : String {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\tvar sz = r.m.index+r.m[0].length;\n\t\treturn r.s.substr(sz,r.s.length-sz);\n\t}\n\n\tpublic function matchedPos() : { pos : Int, len : Int } {\n\t\tif( r.m == null ) throw \"No string matched\";\n\t\treturn { pos : r.m.index, len : r.m[0].length };\n\t}\n\n\tpublic function matchSub( s : String, pos : Int, len : Int = -1):Bool {\n\t\treturn if (r.global) {\n\t\t\tr.lastIndex = pos;\n\t\t\tr.m = r.exec(len < 0 ? s : s.substr(0, pos + len));\n\t\t\tvar b = r.m != null;\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t}\n\t\t\tb;\n\t\t} else {\n\t\t\t// TODO: check some ^/$ related corner cases\n\t\t\tvar b = match( len < 0 ? s.substr(pos) : s.substr(pos,len) );\n\t\t\tif (b) {\n\t\t\t\tr.s = s;\n\t\t\t\tr.m.index += pos;\n\t\t\t}\n\t\t\tb;\n\t\t}\n\t}\n\n\tpublic function split( s : String ) : Array<String> {\n\t\t// we can't use directly s.split because it's ignoring the 'g' flag\n\t\tvar d = \"#__delim__#\";\n\t\treturn untyped s.replace(r,d).split(d);\n\t}\n\n\tpublic function replace( s : String, by : String ) : String {\n\t\treturn untyped s.replace(r,by);\n\t}\n\n\tpublic function map( s : String, f : EReg -> String ) : String {\n\t\tvar offset = 0;\n\t\tvar buf = new StringBuf();\n\t\tdo {\n\t\t\tif (offset >= s.length)\n\t\t\t\tbreak;\n\t\t\telse if (!matchSub(s, offset)) {\n\t\t\t\tbuf.add(s.substr(offset));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar p = matchedPos();\n\t\t\tbuf.add(s.substr(offset, p.pos - offset));\n\t\t\tbuf.add(f(this));\n\t\t\tif (p.len == 0) {\n\t\t\t\tbuf.add(s.substr(p.pos, 1));\n\t\t\t\toffset = p.pos + 1;\n\t\t\t}\n\t\t\telse\n\t\t\t\toffset = p.pos + p.len;\n\t\t} while (r.global);\n\t\tif (!r.global && offset > 0 && offset < s.length)\n\t\t\tbuf.add(s.substr(offset));\n\t\treturn buf.toString();\n\t}\n}\n\n@:native(\"RegExp\")\nprivate extern class HaxeRegExp extends js.RegExp {\n\tvar m:js.RegExp.RegExpMatch;\n\tvar s:String;\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n@:noDoc\nclass HxOverrides {\n\n\tstatic function dateStr( date :Date ) : String {\n\t\tvar m = date.getMonth() + 1;\n\t\tvar d = date.getDate();\n\t\tvar h = date.getHours();\n\t\tvar mi = date.getMinutes();\n\t\tvar s = date.getSeconds();\n\t\treturn date.getFullYear()\n\t\t\t+\"-\"+(if( m < 10 ) \"0\"+m else \"\"+m)\n\t\t\t+\"-\"+(if( d < 10 ) \"0\"+d else \"\"+d)\n\t\t\t+\" \"+(if( h < 10 ) \"0\"+h else \"\"+h)\n\t\t\t+\":\"+(if( mi < 10 ) \"0\"+mi else \"\"+mi)\n\t\t\t+\":\"+(if( s < 10 ) \"0\"+s else \"\"+s);\n\t}\n\n\tstatic function strDate( s : String ) : Date {\n\t\tswitch( s.length ) {\n\t\tcase 8: // hh:mm:ss\n\t\t\tvar k = s.split(\":\");\n\t\t\tvar d : Date = untyped __new__(Date);\n\t\t\tuntyped d[\"setTime\"](0);\n\t\t\tuntyped d[\"setUTCHours\"](k[0]);\n\t\t\tuntyped d[\"setUTCMinutes\"](k[1]);\n\t\t\tuntyped d[\"setUTCSeconds\"](k[2]);\n\t\t\treturn d;\n\t\tcase 10: // YYYY-MM-DD\n\t\t\tvar k = s.split(\"-\");\n\t\t\treturn new Date(cast k[0],cast untyped k[1] - 1,cast k[2],0,0,0);\n\t\tcase 19: // YYYY-MM-DD hh:mm:ss\n\t\t\tvar k = s.split(\" \");\n\t\t\tvar y = k[0].split(\"-\");\n\t\t\tvar t = k[1].split(\":\");\n\t\t\treturn new Date(cast y[0],cast untyped y[1] - 1,cast y[2],cast t[0],cast t[1],cast t[2]);\n\t\tdefault:\n\t\t\tthrow \"Invalid date format : \" + s;\n\t\t}\n\t}\n\n\tstatic function cca( s : String, index : Int ) : Null<Int> {\n\t\t#if mt\n\t\tvar x = (cast s).cca(index);\n\t\t#else\n\t\tvar x = (cast s).charCodeAt(index);\n\t\t#end\n\t\tif( x != x ) // fast isNaN\n\t\t\treturn untyped undefined; // isNaN will still return true\n\t\treturn x;\n\t}\n\n\tstatic function substr( s : String, pos : Int, ?len : Int ) : String {\n\t\tif( pos != null && pos != 0 && len != null && len < 0 ) return \"\";\n\t\tif( len == null ) len = s.length;\n\t\tif( pos < 0 ){\n\t\t\tpos = s.length + pos;\n\t\t\tif( pos < 0 ) pos = 0;\n\t\t}else if( len < 0 ){\n\t\t\tlen = s.length + len - pos;\n\t\t}\n\n\t\treturn (untyped s).substr(pos, len);\n\t}\n\n\tstatic function indexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i < 0) {\n\t\t\ti += len;\n\t\t\tif (i < 0) i = 0;\n\t\t}\n\t\twhile (i < len)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function lastIndexOf<T>( a : Array<T>, obj : T, i : Int) {\n\t\tvar len = a.length;\n\t\tif (i >= len)\n\t\t\ti = len - 1;\n\t\telse if (i < 0)\n\t\t\ti += len;\n\t\twhile (i >= 0)\n\t\t{\n\t\t\tif (untyped __js__(\"a[i] === obj\"))\n\t\t\t\treturn i;\n\t\t\ti--;\n\t\t}\n\t\treturn -1;\n\t}\n\n\tstatic function remove<T>( a : Array<T>, obj : T ) {\n\t\tvar i = a.indexOf(obj);\n\t\tif( i == -1 ) return false;\n\t\ta.splice(i,1);\n\t\treturn true;\n\t}\n\n\tstatic function iter<T>( a : Array<T> ) : Iterator<T> untyped {\n\t\treturn {\n\t\t\tcur : 0,\n\t\t\tarr : a,\n\t\t\thasNext : function() {\n\t\t\t\treturn __this__.cur < __this__.arr.length;\n\t\t\t},\n\t\t\tnext : function() {\n\t\t\t\treturn __this__.arr[__this__.cur++];\n\t\t\t}\n\t\t};\n\t}\n\n\tstatic function __init__() untyped {\n#if !js_es5\n\t\t__feature__('HxOverrides.indexOf', if( Array.prototype.indexOf ) __js__(\"HxOverrides\").indexOf = function(a,o,i) return Array.prototype.indexOf.call(a, o, i));\n\t\t__feature__('HxOverrides.lastIndexOf', if( Array.prototype.lastIndexOf ) __js__(\"HxOverrides\").lastIndexOf = function(a,o,i) return Array.prototype.lastIndexOf.call(a, o, i));\n#end\n\n#if mt\n\t\tif( String.prototype.cca == null ) String.prototype.cca = String.prototype.charCodeAt;\n#end\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n\tThe `Lambda` class is a collection of methods to support functional\n\tprogramming. It is ideally used with 'using Lambda' and then acts as an\n\textension to Iterable types.\n\n\tOn static platforms, working with the Iterable structure might be slower\n\tthan performing the operations directly on known types, such as Array and\n\tList.\n\n\tIf the first argument to any of the methods is null, the result is\n\tunspecified.\n**/\nclass Lambda {\n\n\t/**\n\t\tCreates an Array from Iterable `it`.\n\n\t\tIf `it` is an Array, this function returns a copy of it.\n\t**/\n\tpublic static function array<A>( it : Iterable<A> ) : Array<A> {\n\t\tvar a = new Array<A>();\n\t\tfor(i in it)\n\t\t\ta.push(i);\n\t\treturn a;\n\t}\n\n\t/**\n\t\tCreates a List form Iterable `it`.\n\n\t\tIf `it` is a List, this function returns a copy of it.\n\t**/\n\tpublic static function list<A>( it : Iterable<A> ) : List<A> {\n\t\tvar l = new List<A>();\n\t\tfor(i in it)\n\t\t\tl.add(i);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tCreates a new List by applying function `f` to all elements of `it`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function map<A,B>( it : Iterable<A>, f : A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tfor( x in it )\n\t\t\tl.add(f(x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tSimilar to map, but also passes the index of each element to `f`.\n\n\t\tThe order of elements is preserved.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function mapi<A,B>( it : Iterable<A>, f : Int -> A -> B ) : List<B> {\n\t\tvar l = new List<B>();\n\t\tvar i = 0;\n\t\tfor( x in it )\n\t\t\tl.add(f(i++,x));\n\t\treturn l;\n\t}\n\n\t/**\n\t\tTells if `it` contains `elt`.\n\n\t\tThis function returns true as soon as an element is found which is equal\n\t\tto `elt` according to the `==` operator.\n\n\t\tIf no such element is found, the result is false.\n\t**/\n\tpublic static function has<A>( it : Iterable<A>, elt : A ) : Bool {\n\t\tfor( x in it )\n\t\t\tif( x == elt )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `it` contains an element for which `f` is true.\n\n\t\tThis function returns true as soon as an element is found for which a\n\t\tcall to `f` returns true.\n\n\t\tIf no such element is found, the result is false.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function exists<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\t/**\n\t\tTells if `f` is true for all elements of `it`.\n\n\t\tThis function returns false as soon as an element is found for which a\n\t\tcall to `f` returns false.\n\n\t\tIf no such element is found, the result is true.\n\n\t\tIn particular, this function always returns true if `it` is empty.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function foreach<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tfor( x in it )\n\t\t\tif( !f(x) )\n\t\t\t\treturn false;\n\t\treturn true;\n\t}\n\n\t/**\n\t\tCalls `f` on all elements of `it`, in order.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function iter<A>( it : Iterable<A>, f : A -> Void ) {\n\t\tfor( x in it )\n\t\t\tf(x);\n\t}\n\n\t/**\n\t\tReturns a List containing those elements of `it` for which `f` returned\n\t\ttrue.\n\n\t\tIf `it` is empty, the result is the empty List even if `f` is null.\n\n\t\tOtherwise if `f` is null, the result is unspecified.\n\t**/\n\tpublic static function filter<A>( it : Iterable<A>, f : A -> Bool ) {\n\t\tvar l = new List<A>();\n\t\tfor( x in it )\n\t\t\tif( f(x) )\n\t\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n\t/**\n\t\tFunctional fold on Iterable `it`, using function `f` with start argument\n\t\t`first`.\n\n\t\tIf `it` has no elements, the result is `first`.\n\n\t\tOtherwise the first element of `it` is passed to `f` alongside `first`.\n\t\tThe result of that call is then passed to `f` with the next element of\n\t\t`it`, and so on until `it` has no more elements.\n\n\t\tIf `it` or `f` are null, the result is unspecified.\n\t**/\n\tpublic static function fold<A,B>( it : Iterable<A>, f : A -> B -> B, first : B ) : B {\n\t\tfor( x in it )\n\t\t\tfirst = f(x,first);\n\t\treturn first;\n\t}\n\n\t/**\n\t\tReturns the number of elements in `it` for which `pred` is true, or the\n\t\ttotal number of elements in `it` if `pred` is null.\n\n\t\tThis function traverses all elements.\n\t**/\n\tpublic static function count<A>( it : Iterable<A>, ?pred : A -> Bool ) {\n\t\tvar n = 0;\n\t\tif( pred == null )\n\t\t\tfor( _ in it )\n\t\t\t\tn++;\n\t\telse\n\t\t\tfor( x in it )\n\t\t\t\tif( pred(x) )\n\t\t\t\t\tn++;\n\t\treturn n;\n\t}\n\n\t/**\n\t\tTells if Iterable `it` does not contain any element.\n\t**/\n\tpublic static function empty<T>( it : Iterable<T> ) : Bool {\n\t\treturn !it.iterator().hasNext();\n\t}\n\n\t/**\n\t\tReturns the index of the first element `v` within Iterable `it`.\n\n\t\tThis function uses operator `==` to check for equality.\n\n\t\tIf `v` does not exist in `it`, the result is -1.\n\t**/\n\tpublic static function indexOf<T>( it : Iterable<T>, v : T ) : Int {\n\t\tvar i = 0;\n\t\tfor( v2 in it ) {\n\t\t\tif( v == v2 )\n\t\t\t\treturn i;\n\t\t\ti++;\n\t\t}\n\t\treturn -1;\n\t}\n\n\t/**\n\t\tReturns the first element of `it` for which `f` is true.\n\n\t\tThis function returns as soon as an element is found for which a call to\n\t\t`f` returns true.\n\n\t\tIf no such element is found, the result is null.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function find<T>( it : Iterable<T>, f : T -> Bool ) : Null<T> {\n\t\tfor( v in it ) {\n\t\t\tif(f(v)) return v;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t\tReturns a new List containing all elements of Iterable `a` followed by\n\t\tall elements of Iterable `b`.\n\n\t\tIf `a` or `b` are null, the result is unspecified.\n\t**/\n\tpublic static function concat<T>( a : Iterable<T>, b : Iterable<T> ) : List<T> {\n\t\tvar l = new List();\n\t\tfor( x in a )\n\t\t\tl.add(x);\n\t\tfor( x in b )\n\t\t\tl.add(x);\n\t\treturn l;\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n/**\n\tA linked-list of elements. The list is composed of two-elements arrays\n\tthat are chained together. It is optimized so that adding or removing an\n\telement does not imply copying the whole array content every time.\n**/\nclass List<T> {\n\n\tprivate var h : Array<Dynamic>;\n\tprivate var q : Array<Dynamic>;\n\n\t/**\n\t\tThe length of `this` List.\n\t**/\n\tpublic var length(default,null) : Int;\n\n\t/**\n\t\tCreates a new empty list.\n\t**/\n\tpublic function new() {\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tAdds element `item` at the end of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function add( item : T ) {\n\t\tvar x:Array<Dynamic> = #if neko untyped __dollar__array(item,null) #else [item] #end;\n\t\tif( h == null )\n\t\t\th = x;\n\t\telse\n\t\t\tq[1] = x;\n\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tAdds element `item` at the beginning of `this` List.\n\n\t\t`this.length` increases by 1.\n\t**/\n\tpublic function push( item : T ) {\n\t\tvar x : Array<Dynamic> = #if neko\n\t\t\tuntyped __dollar__array(item,h)\n\t\t#else\n\t\t\t[item,h]\n\t\t#end;\n\t\th = x;\n\t\tif( q == null )\n\t\t\tq = x;\n\t\tlength++;\n\t}\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function first() : Null<T> {\n\t\treturn if( h == null ) null else h[0];\n\t}\n\n\t/**\n\t\tReturns the last element of `this` List, or null if no elements exist.\n\n\t\tThis function does not modify `this` List.\n\t**/\n\tpublic function last() : Null<T> {\n\t\treturn if( q == null ) null else q[0];\n\t}\n\n\n\t/**\n\t\tReturns the first element of `this` List, or null if no elements exist.\n\n\t\tThe element is removed from `this` List.\n\t**/\n\tpublic function pop() : Null<T> {\n\t\tif( h == null )\n\t\t\treturn null;\n\t\tvar x = h[0];\n\t\th = h[1];\n\t\tif( h == null )\n\t\t\tq = null;\n\t\tlength--;\n\t\treturn x;\n\t}\n\n\t/**\n\t\tTells if `this` List is empty.\n\t**/\n\tpublic function isEmpty() : Bool {\n\t\treturn (h == null);\n\t}\n\n\t/**\n\t\tEmpties `this` List.\n\n\t\tThis function does not traverse the elements, but simply sets the\n\t\tinternal references to null and `this.length` to 0.\n\t**/\n\tpublic function clear() : Void {\n\t\th = null;\n\t\tq = null;\n\t\tlength = 0;\n\t}\n\n\t/**\n\t\tRemoves the first occurence of `v` in `this` List.\n\n\t\tIf `v` is found by checking standard equality, it is removed from `this`\n\t\tList and the function returns true.\n\n\t\tOtherwise, false is returned.\n\t**/\n\tpublic function remove( v : T ) : Bool {\n\t\tvar prev = null;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( l[0] == v ) {\n\t\t\t\tif( prev == null )\n\t\t\t\t\th = l[1];\n\t\t\t\telse\n\t\t\t\t\tprev[1] = l[1];\n\t\t\t\tif( q == l )\n\t\t\t\t\tq = prev;\n\t\t\t\tlength--;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tprev = l;\n\t\t\tl = l[1];\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t\tReturns an iterator on the elements of the list.\n\t**/\n\tpublic inline function iterator() : ListIterator<T> {\n\t\treturn new ListIterator<T>(h);\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List.\n\n\t\tThe result is enclosed in { } with the individual elements being\n\t\tseparated by a comma.\n\t**/\n\tpublic function toString() {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\ts.add(\"{\");\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(\", \");\n\t\t\ts.add(Std.string(l[0]));\n\t\t\tl = l[1];\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a string representation of `this` List, with `sep` separating\n\t\teach element.\n\t**/\n\tpublic function join(sep : String) {\n\t\tvar s = new StringBuf();\n\t\tvar first = true;\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tif( first )\n\t\t\t\tfirst = false;\n\t\t\telse\n\t\t\t\ts.add(sep);\n\t\t\ts.add(l[0]);\n\t\t\tl = l[1];\n\t\t}\n\t\treturn s.toString();\n\t}\n\n\t/**\n\t\tReturns a list filtered with `f`. The returned list will contain all\n\t\telements for which `f(x) == true`.\n\t**/\n\tpublic function filter( f : T -> Bool ) {\n\t\tvar l2 = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tif( f(v) )\n\t\t\t\tl2.add(v);\n\t\t}\n\t\treturn l2;\n\t}\n\n\t/**\n\t\tReturns a new list where all elements have been converted by the\n\t\tfunction `f`.\n\t**/\n\tpublic function map<X>(f : T -> X) : List<X> {\n\t\tvar b = new List();\n\t\tvar l = h;\n\t\twhile( l != null ) {\n\t\t\tvar v = l[0];\n\t\t\tl = l[1];\n\t\t\tb.add(f(v));\n\t\t}\n\t\treturn b;\n\t}\n\n}\n\nprivate class ListIterator<T> {\n\tvar head:Array<Dynamic>;\n\tvar val:Dynamic;\n\n\tpublic inline function new(head:Array<Dynamic>) {\n\t\tthis.head = head;\n\t\tthis.val = null;\n\t}\n\n\tpublic inline function hasNext():Bool {\n\t\treturn head != null;\n\t}\n\n\tpublic inline function next():T {\n\t\tval = head[0];\n\t\thead = head[1];\n\t\treturn val;\n\t}\n}\n","import boot.Runner;\r\nimport boot.Runnable;\r\nimport haxe.Json;\r\nimport loka.asset.Video;\r\nimport loka.asset.Loader;\r\nimport boot.Assets;\r\nimport glee.GPUBuffer;\r\nimport glee.GPUTexture;\r\n\r\nimport tri.SimpleTexturedProgram;\r\n\r\nusing glmat.Mat4;\r\nimport glmat.Vec2;\r\nimport glmat.Vec3;\r\nimport glmat.Vec4;\r\n\r\nimport loka.gl.GL;\r\nimport loka.App;\r\n\r\nimport glee.GPU;\r\nimport glee.GPUTexture;\r\n\r\nimport korrigan.OrthoCamera;\r\n\r\nclass VideoTest{\r\n\r\n\tinline static var FOCUS_WIDTH = 1200;\r\n\tinline static var FOCUS_HEIGHT = 400;\r\n\r\n\tvar gpu : GPU;\r\n\tvar loader : Loader;\r\n\r\n\tvar program : SimpleTexturedProgram;\r\n\tvar buffer  : GPUBuffer<SimpleTexturedProgram>;\r\n\r\n\tvar _camera : OrthoCamera;\r\n\r\n\tvar _texture : GPUTexture;\r\n\tvar _video : Video;\r\n\r\n\tstatic function main() : Void{\r\n\t\ttrace(\"video test\");\r\n\t\tnew VideoTest();\r\n\t}\r\n\r\n\tpublic function new( ){\r\n\t\tloader = new Loader();\r\n\t\tgpu = GPU.init({viewportType : KeepRatioUsingBorder(FOCUS_WIDTH, FOCUS_HEIGHT), viewportPosition: Center, maxHDPI:1});\r\n\t\t_camera = new OrthoCamera(gpu,FOCUS_WIDTH,FOCUS_HEIGHT);\r\n\t\tprogram = SimpleTexturedProgram.upload(gpu);\t\t\r\n\t\tbuffer = new GPUBuffer<SimpleTexturedProgram>(gpu, GL.DYNAMIC_DRAW); \r\n\r\n\t\tinitialised();\r\n\t}\r\n\r\n\tfunction initialised() : Void{\r\n\t\t_texture = GPUTexture.create(gpu);\r\n\t\t_video = cast js.Browser.document.createElement('video');\r\n\r\n\t\tif (_video.canPlayType('video/mp4').length > 0) {\r\n \t\t\t_video.src = 'loop1.mp4';\r\n\t\t\tuntyped _video.autoPlay = true;\r\n\t\t\t_video.loop = true;\r\n\t\t\tuntyped _video.oncanplay = ready;\r\n\t\t\tuntyped _video.onloadedmetadata = function () {\r\n\t\t        trace(\"loadedmetadat\");\r\n\t\t    };\r\n\t\t\t_video.play();\r\n\t\t}else{\r\n\t\t\ttrace(\"cannot play the video (mp4 not supported)\");\r\n\t\t}\r\n\r\n\r\n\r\n\t\tjs.Browser.document.addEventListener('mousemove', function(e){ \r\n\t\t    mouseX = e.clientX == null ? e.clientX : e.pageX; \r\n\t\t    mouseY = e.clientY == null ? e.clientX :  e.pageY;\r\n\t\t}, false);\r\n\t\t\r\n\t}\r\n\tvar mouseX : Int;\r\n\tvar mouseY : Int;\r\n\r\n\tfunction ready() : Void{\r\n\t\tgpu.setRenderFunction(render);   \r\n\t}\r\n\r\n\r\n\tfunction render(now : Float) {\r\n\t\t//centering\r\n\t\tvar centerX = _video.videoWidth / 2 + (mouseX - gpu.windowWidth/2) * ( _video.videoWidth / gpu.windowWidth);\r\n\t\tvar centerY = _video.videoHeight / 2 + (mouseY - gpu.windowHeight/2) * (_video.videoHeight / gpu.windowHeight);\r\n\t\tif(centerX < - FOCUS_WIDTH){\r\n\t\t\tcenterX += _video.videoWidth;\r\n\t\t}\r\n\t\tif(centerX > _video.videoWidth - FOCUS_WIDTH){\r\n\t\t\tcenterX -= _video.videoWidth;\r\n\t\t}\r\n\t\tif(centerY > (_video.videoHeight - FOCUS_HEIGHT/2)){\r\n\t\t\tcenterY = _video.videoHeight - FOCUS_HEIGHT/2;\r\n\t\t}\r\n\t\tif(centerY < FOCUS_HEIGHT/2){\r\n\t\t\tcenterY = FOCUS_HEIGHT/2;\r\n\t\t}\r\n\t\t_camera.centerOn(centerX,centerY);\r\n\r\n\t\tgpu.clearWith(0,0,0,1);\r\n\t\ttry\r\n\t\t{\r\n\t\t\t_texture.uploadVideo(_video);\r\n\t\t}\r\n\t\tcatch(e: Dynamic)\r\n\t\t{\r\n\t\t\r\n\t\t}\r\n\r\n\t\tbuffer.rewind();\r\n\t\t\r\n\r\n\t\tbuffer.write_position(-_video.videoWidth,_video.videoHeight,0);\r\n\t\tbuffer.write_texCoords(0, 1);\r\n\t\tbuffer.write_position(-_video.videoWidth,0,0);\r\n\t\tbuffer.write_texCoords(0,0);\r\n\t\tbuffer.write_position(0,0,0);\r\n\t\tbuffer.write_texCoords(1,0);\r\n\r\n\t\tbuffer.write_position(0,0,0);\r\n\t\tbuffer.write_texCoords(1,0);\r\n\t\tbuffer.write_position(0,_video.videoHeight,0);\r\n\t\tbuffer.write_texCoords(1,1);\r\n\t\tbuffer.write_position(-_video.videoWidth,_video.videoHeight,0);\r\n\t\tbuffer.write_texCoords(0,1);\r\n\r\n\r\n\t\tbuffer.write_position(0,_video.videoHeight,0);\r\n\t\tbuffer.write_texCoords(0, 1);\r\n\t\tbuffer.write_position(0,0,0);\r\n\t\tbuffer.write_texCoords(0,0);\r\n\t\tbuffer.write_position(_video.videoWidth,0,0);\r\n\t\tbuffer.write_texCoords(1,0);\r\n\r\n\t\tbuffer.write_position(_video.videoWidth,0,0);\r\n\t\tbuffer.write_texCoords(1,0);\r\n\t\tbuffer.write_position(_video.videoWidth,_video.videoHeight,0);\r\n\t\tbuffer.write_texCoords(1,1);\r\n\t\tbuffer.write_position(0,_video.videoHeight,0);\r\n\t\tbuffer.write_texCoords(0,1);\r\n\t\t\r\n  \t\tbuffer.upload();\r\n\r\n  \t\tprogram.set_viewproj(_camera.viewproj);\r\n\t\tprogram.set_tex(_texture);\r\n\t\tprogram.draw(buffer);\t\r\n\t\t\r\n\t\t\r\n\t}\r\n}","package boot;\r\n\r\nimport loka.asset.Loader;\r\nimport boot.AssetId;\r\nimport tink.core.Future;\r\nimport tink.core.Outcome;\r\nimport loka.asset.Image;\r\n\r\ntypedef ImageOutcome = Outcome<Image, String>;\r\n\r\nclass ImageLoader implements AssetLoader<Image>{\r\n\r\n\tprivate var futures : Map<AssetId,Future<ImageOutcome>>;\r\n\r\n\tpublic function new() {\r\n\t\tfutures = new Map();\r\n\t}\r\n\r\n\tpublic function load(assetId : AssetId, ?path = null) : Future<ImageOutcome>{\r\n\t\tif (path == null){\r\n\t\t\tpath = assetId;\r\n\t\t}\r\n\r\n  \t\tvar future  = futures.get(assetId);\r\n        if (future != null){\r\n            return future;\r\n        }\r\n\r\n\t\tfuture = Future.async(function (handler:ImageOutcome->Void) {\r\n\t\t\tvar loader = new Loader();\r\n\t\t\tloader.loadImage(path,\r\n\t\t\t\tfunction (data) handler(Success(data)),\r\n\t\t\t\tfunction (error) handler(Failure(error))\r\n\t\t\t\t);\r\n\t    });\r\n        \r\n\t\t\r\n        return future;\r\n\t}\r\n\r\n}","package boot;\r\n\r\nimport loka.asset.Loader;\r\nimport boot.AssetId;\r\nimport tink.core.Future;\r\nimport tink.core.Outcome;\r\n\r\n\r\ntypedef TextOutcome = Outcome<String, String>;\r\n\r\nclass TextLoader implements AssetLoader<String>{\r\n\r\n\tprivate var futures : Map<AssetId,Future<TextOutcome>>;\r\n\r\n\tpublic function new() {\r\n\t\tfutures = new Map();\r\n\t}\r\n\r\n\tpublic function load(assetId : AssetId, ?path = null) : Future<TextOutcome>{\r\n\t\tif (path == null){\r\n\t\t\tpath = assetId;\r\n\t\t}\r\n\r\n  \t\tvar future  = futures.get(assetId);\r\n        if (future != null){\r\n            return future;\r\n        }\r\n\r\n\t\tfuture = Future.async(function (handler:TextOutcome->Void) {\r\n\t\t\tvar loader = new Loader();\r\n\t\t\tloader.loadText(path,\r\n\t\t\t\tfunction (data) handler(Success(data)),\r\n\t\t\t\tfunction (error) handler(Failure(error))\r\n\t\t\t\t);\r\n\t    });\r\n        \r\n\t\t\r\n        return future;\r\n\t}\r\n\r\n}","package boot;\r\n\r\nimport boot.Assets.AssetsOutcome;\r\nimport boot.Batch.BatchOutcome;\r\nimport tink.core.Outcome;\r\nimport tink.core.Future;\r\nimport loka.asset.Image;\r\n\r\ntypedef AssetsError = {textOutcomes : Array<Outcome<String,String>>, imageOutcomes : Array<Outcome<Image,String>>};\r\ntypedef AssetsOutcome = Outcome<Assets,AssetsError>;\r\n\r\n\r\nclass Assets{\r\n\r\n\tprivate static var textLoader = new TextLoader();\r\n\tprivate static var imageLoader = new ImageLoader();\r\n\r\n\tpublic static function load(texts : Array<String>, images : Array<String>) : Future<AssetsOutcome>{\r\n\r\n\t\tvar textsFuture = Batch.load(textLoader,texts);\r\n\t\tvar imagesFuture = Batch.load(imageLoader,images);\r\n\r\n\t\treturn textsFuture.merge(imagesFuture, function(textBatch : BatchOutcome<String>, imageBatch : BatchOutcome<Image>) : AssetsOutcome{\r\n\t\t\tvar resultingTexts : Batch<String> = null;\r\n\t\t\tvar textError : Array<Outcome<String,String>> = null;\r\n\t\t\tswitch(textBatch){\r\n\t\t\t\tcase Success(texts): resultingTexts = texts;\r\n\t\t\t\tcase Failure(outcomes) : textError = outcomes;\r\n\t\t\t}\r\n\r\n\t\t\tvar resultingImages : Batch<Image> = null;\r\n\t\t\tvar imageError : Array<Outcome<Image,String>> = null;\r\n\t\t\tswitch(imageBatch){\r\n\t\t\t\tcase Success(images): resultingImages = images;\r\n\t\t\t\tcase Failure(outcomes) : imageError = outcomes;\r\n\t\t\t}\r\n\r\n\t\t\tif (resultingImages != null && resultingTexts != null){\r\n\t\t\t\treturn Success(new Assets(resultingTexts, resultingImages));\r\n\t\t\t}else{\r\n\t\t\t\treturn Failure({textOutcomes : textError, imageOutcomes : imageError});\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n\r\n\tpublic var texts(default,null) : Batch<String>;\r\n\tpublic var images(default,null) : Batch<Image>;\r\n\t//TODO other\r\n\r\n\tpublic function new(texts : Batch<String>, images : Batch<Image>){\r\n\t\tthis.texts = texts;\r\n\t\tthis.images = images;\r\n\t}\r\n\r\n}","package boot;\n\nimport boot.AssetId;\nimport tink.core.Outcome;\nimport tink.core.Future;\n\ntypedef BatchOutcome<T> = Outcome<Batch<T>, Array<Outcome<T,String>>>;\n\nprivate typedef TmpBatchOutcome<T> = Outcome<{data:T, id:AssetId},String>;\n\nclass Batch<T> implements AssetStore<T> {\n\n    inline static public function load<T>(assetLoader : AssetLoader<T>, ids : Array<AssetId>, ?paths : Array<String> = null) : Future<BatchOutcome<T>>{\n        if(paths == null){\n            paths = ids;\n        }\n\n        \n        while(paths.length < ids.length ){\n            paths.push(ids[paths.length]);\n        }\n\n        var allFutures : Array<Future<TmpBatchOutcome<T>>> = [];\n        for (i in 0...paths.length){\n            var path = paths[i];\n            var id = ids[i];\n            var future = assetLoader.load(path).map(function(o){\n                switch(o){\n                    case Success(d):return Success({data:d,id:id});\n                    case Failure(e): return Failure(e);\n                }\n            });\n            allFutures.push(future);         \n        }        \n\n        var futureForAll : Future<Array<TmpBatchOutcome<T>>> = allFutures;\n        \n        var futureTrigger : FutureTrigger<BatchOutcome<T>> = Future.trigger();\n\n        futureForAll.handle(function(outcomes : Array<Outcome<{data:T, id:AssetId},String>>){\n                var data = new Map<AssetId,T>();\n                var originalOutcomes = new Array<Outcome<T,String>>();\n                var atleastOneFailed = false;\n                for (outcome in outcomes){\n                    switch(outcome){\n                        case Success(d): \n                            data.set(d.id,d.data);\n                            originalOutcomes.push(Success(d.data));\n                        case Failure(error): \n                            atleastOneFailed = true;\n                            originalOutcomes.push(Failure(error));\n                    }\n                }\n\n                if(atleastOneFailed){\n                    futureTrigger.trigger(Failure(originalOutcomes));\n                }else{\n                    futureTrigger.trigger(Success(new Batch(data)));\n                }\n                \n            });\n\n        return futureTrigger.asFuture();\n    }\n\n\n    private var dict : Map<AssetId,T>;\n\n    public function new(items : Map<AssetId,T>) {\n        dict = new Map();\n        for (itemId in items.keys()){\n            dict.set(itemId, items[itemId]);\n        }\n    }\n\n    public function get(assetId : AssetId) : T{\n        return dict.get(assetId);\n    }\n\n    //TODO iterator\n    public function all() : Array<T>{\n        var all : Array<T> = new Array();\n        for ( t in dict){\n            all.push(t);\n        }\n        return all;\n    }\n\n}\n","package boot;\r\n\r\nimport haxe.Timer;\r\n\r\nclass Runner{\r\n\r\n\tvar runnable : Runnable;\r\n\tvar lastNow : Float;\r\n\tvar timer : Timer;\r\n\r\n\tpublic function new(runnable : Runnable){\r\n\t\tthis.runnable = runnable;\r\n\t}\r\n\r\n\tpublic function start(?fps : Int = 30):Void{\r\n\t\tlastNow = Timer.stamp();\r\n\t\tthis.runnable.start(lastNow);\r\n\t\ttimer = new Timer(Std.int(1000 / fps));\r\n\t\ttimer.run = update;\r\n\t}\r\n\r\n\tpublic function update():Void{\r\n\t\tvar now = Timer.stamp();\r\n\t\tvar delta = now - lastNow;\r\n\t\tlastNow = now;\r\n\t\trunnable.update(now,delta);\r\n\t}\r\n\r\n}","package glee;\r\n\r\nimport loka.App;\r\nimport loka.Window;\r\nimport loka.asset.Image;\r\nimport loka.gl.GL;\r\nimport glee.GPUBuffer;\r\nimport glee.GPUTexture;\r\nimport loka.Window;\r\n\r\ntypedef GPUOption = {\r\n\t?viewportType : ViewportType,\r\n\t?viewportPosition : ViewportPosition,\r\n\t?maxHDPI : Int  //TODO\r\n\t//?window : Window\r\n}\r\n\r\nenum ViewportType{\r\n\tManual;\r\n\tFixed(width : Int, height :Int); \r\n\tFill;\r\n\tFillUpToRatios(minRatio : Float, maxRatio : Float);\r\n\tKeepRatioUsingBorder(width : Int, height :Int);\r\n\tKeepRatioUsingCropping(width : Int, height :Int);\r\n\tKeepRatioUsingBorderWithoutScalingUp(width : Int, height :Int);\r\n\tKeepRatioUsingCroppingWithoutScalingUp(width : Int, height :Int);\r\n}\r\n\r\nenum ViewportPosition{\r\n\tTopLeft;\r\n\tTop;\r\n\tTopRight;\r\n\tRight;\r\n\tBottomRight;\r\n\tBottom;\r\n\tBottomLeft;\r\n\tLeft;\r\n\tCenter;\r\n}\r\n\r\nclass GPU{\r\n\t\r\n\tstatic var _gpu : GPU;\r\n\r\n\t@:allow(glee)\r\n\tprivate var gl : GL; //TODO make it private\r\n\r\n\tvar _window : Window;\r\n\tvar _option : GPUOption;\r\n\r\n\tvar _render : RenderFunction;\r\n\t\r\n\tvar _windowResizeCallback : Float->Float->Void;\r\n\tpublic var windowWidth(default,null) : Float = 0;\r\n\tpublic var windowHeight(default,null) : Float = 0;\r\n\r\n\tvar _viewportChangeCallback : Int->Int->Int->Int->Void;\r\n\tpublic var viewportX(default,null) : Int = 0;\r\n\tpublic var viewportY(default,null) : Int = 0;\r\n\tpublic var viewportWidth(default,null) : Int = 0;\r\n\tpublic var viewportHeight(default,null) : Int = 0;\t\r\n\r\n\tvar _currentProgram : GPUProgram;\r\n\r\n\tstatic inline public function init(?option : GPUOption) : GPU{\r\n\t\tif(_gpu != null){\r\n\t\t\ttrace(\"ERROR : GPU already initialised\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar window = /*option != null && option.window != null ? option.window :*/ App.initWindow();\r\n\t\tif(window == null){\r\n\t\t\ttrace(\"the window has already been initialised via App.initWindow, GPU cannot take control of the GL rendering\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn new GPU(window, option);\r\n\t} \r\n\r\n\tpublic function new(window : Window, option : GPUOption){\r\n\t\tthis._window = window;\r\n\t\t\r\n\r\n\t\tthis.gl = _window.getGL();\r\n\t\tvar defaultOption : GPUOption = {\r\n\t\t\tviewportType:Fill,\r\n\t\t\tviewportPosition:Center,\r\n\t\t\tmaxHDPI:1\r\n\t\t};\r\n\t\tif(option != null){\r\n\t\t\toption.viewportType = option.viewportType == null ? defaultOption.viewportType : option.viewportType;\r\n\t\t\toption.viewportPosition = option.viewportPosition == null ? defaultOption.viewportPosition : option.viewportPosition;\r\n\t\t\toption.maxHDPI = option.maxHDPI == null ? defaultOption.maxHDPI : option.maxHDPI;\r\n\t\t}else{\r\n\t\t\toption = defaultOption;\r\n\t\t} \r\n\t\t_option =option;\r\n\r\n\t\twindow.setOnResizeCallback(onWindowResized);\r\n\t\tonWindowResized(window.width, window.height);\r\n\r\n\t}\r\n\r\n\tpublic function setWindowResizeCallback(callback : Float->Float->Void){\r\n\t\t_windowResizeCallback = callback;\r\n\t}\r\n\r\n\tfunction onWindowResized(width : Float, height : Float){\r\n\t\twindowWidth = width;\r\n\t\twindowHeight = height;\r\n\t\t\r\n\t\tif(_windowResizeCallback != null){\r\n\t\t\t_windowResizeCallback(width,height);\r\n\t\t}\r\n\t\tsetViewportAutomatically();\r\n\t}\r\n\r\n\tpublic function setRenderFunction(render : RenderFunction){\r\n\t\t_window.setRenderFunction(render);\r\n\t}\r\n\r\n\tfunction setViewportAutomatically(){\r\n\t\tvar width = windowWidth;\r\n\t\tvar height = windowHeight;\r\n\t\tswitch(_option.viewportType){\r\n\t\t\tcase Manual : return;\r\n\t\t\tcase Fill : \r\n\t\t\t\twidth = untyped gl.drawingBufferWidth;\r\n\t\t\t\theight = untyped gl.drawingBufferHeight;\r\n\t\t\tcase FillUpToRatios(minRatio, maxRatio):\r\n\t\t\t\tvar drawingBufferWidth = untyped gl.drawingBufferWidth;\r\n\t\t\t\tvar drawingBufferHeight = untyped gl.drawingBufferHeight;\r\n\t\t\t\tif (drawingBufferWidth / drawingBufferHeight > maxRatio){\r\n\t\t\t\t\twidth = drawingBufferHeight * maxRatio;\r\n\t\t\t\t\theight = drawingBufferHeight;\r\n\t\t\t\t}else if(drawingBufferWidth / drawingBufferHeight < minRatio){\r\n\t\t\t\t\twidth = drawingBufferHeight;\r\n\t\t\t\t\theight = drawingBufferHeight * minRatio;\r\n\t\t\t\t}else{\r\n\t\t\t\t\twidth = drawingBufferWidth;\r\n\t\t\t\t\theight = drawingBufferHeight;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\tcase Fixed(w,h) : \r\n\t\t\t\twidth = w;\r\n\t\t\t\theight = h;\r\n\t\t\tcase KeepRatioUsingBorder(w,h):\r\n\t\t\t\tvar widthRatio = width/w;\r\n\t\t\t\tvar heightRatio = height/h;\r\n\t\t\t\tif(widthRatio > heightRatio){\r\n\t\t\t\t\twidth = w * heightRatio; \r\n\t\t\t\t}else{\r\n\t\t\t\t\theight = h * widthRatio; \r\n\t\t\t\t}\r\n\t\t\tcase KeepRatioUsingBorderWithoutScalingUp(w,h):\r\n\t\t\t\tvar widthRatio = width/w;\r\n\t\t\t\tvar heightRatio = height/h;\r\n\t\t\t\tif(widthRatio > 1 || heightRatio > 1){\r\n\t\t\t\t\twidth = w;\r\n\t\t\t\t\theight = h;\r\n\t\t\t\t}else if(widthRatio > heightRatio){\r\n\t\t\t\t\twidth = w * heightRatio; \r\n\t\t\t\t}else{\r\n\t\t\t\t\theight = h * widthRatio; \r\n\t\t\t\t}\r\n\t\t\tcase KeepRatioUsingCropping(w,h):\r\n\t\t\t\tvar widthRatio = width/w;\r\n\t\t\t\tvar heightRatio = height/h;\r\n\t\t\t\tif(widthRatio < heightRatio){\r\n\t\t\t\t\twidth = w * heightRatio; \r\n\t\t\t\t}else{\r\n\t\t\t\t\theight = h * widthRatio; \r\n\t\t\t\t}\r\n\t\t\tcase KeepRatioUsingCroppingWithoutScalingUp(w,h):\r\n\t\t\t\tvar widthRatio = width/w;\r\n\t\t\t\tvar heightRatio = height/h;\r\n\t\t\t\tif(widthRatio > 1 || heightRatio > 1){\r\n\t\t\t\t\twidth = w;\r\n\t\t\t\t\theight = h;\r\n\t\t\t\t}else if(widthRatio < heightRatio){\r\n\t\t\t\t\twidth = w * heightRatio; \r\n\t\t\t\t}else{\r\n\t\t\t\t\theight = h * widthRatio; \r\n\t\t\t\t}\r\n\t\t}\r\n\t\t//TODO add option to not scale up?\r\n\r\n\t\t//TODO support drawingBufferWidth < windowWidth and drawingBufferHeight < windowHeight\r\n\r\n\t\tvar x : Float = 0;\r\n\t\tvar y : Float = 0;\r\n\t\tswitch(_option.viewportPosition){\r\n\t\t\tcase Center : \r\n\t\t\t\tx = (windowWidth - width) / 2;\r\n\t\t\t\ty = (windowHeight - height) / 2;\r\n\t\t\tcase TopLeft : \r\n\t\t\t\ty = (windowHeight - height);\r\n\t\t\tcase Top : \r\n\t\t\t\tx = (windowWidth - width) / 2;\r\n\t\t\t\ty = (windowHeight - height);\r\n\t\t\tcase TopRight:\r\n\t\t\t\tx = (windowWidth - width);\r\n\t\t\t\ty = (windowHeight - height);\r\n\t\t\tcase Right:\r\n\t\t\t\tx = (windowWidth - width);\r\n\t\t\t\ty = (windowHeight - height) / 2;\r\n\t\t\tcase BottomRight:\r\n\t\t\t\tx = (windowWidth - width);\r\n\t\t\tcase Bottom:\r\n\t\t\t\tx = (windowWidth - width) / 2;\r\n\t\t\tcase BottomLeft:\r\n\t\t\tcase Left:\r\n\t\t\t\ty = (windowHeight - height) / 2;\r\n\r\n\t\t}\r\n\r\n\t\t\r\n\t\t_setViewPort(x, y, width, height);\r\n\t\t\r\n\t}\r\n\r\n\tinline public function setViewPort(x : Float, y : Float, width : Float, height : Float){\r\n\t\t_option.viewportType = Manual;\r\n\t\t_setViewPort(x,y, width, height);\r\n\t}\r\n\r\n\tpublic function setViewportChangeCallback(callback : Int->Int->Int->Int->Void){\r\n\t\t_viewportChangeCallback = callback;\r\n\t}\r\n\r\n\tinline private function _setViewPort(x : Float, y : Float, width : Float, height : Float){\r\n\t\tif(width != viewportWidth || height != viewportHeight || x != viewportX || y != viewportY){\r\n\t\t\tviewportX = Std.int(x);\r\n\t\t\tviewportY = Std.int(y);\r\n\t\t\tviewportWidth = Std.int(width);\r\n\t\t\tviewportHeight = Std.int(height);\r\n\t\t\tgl.viewport(viewportX, viewportY, viewportWidth, viewportHeight);\r\n\t\t\tif(_viewportChangeCallback != null){\r\n\t\t\t\t_viewportChangeCallback(viewportX, viewportY, viewportWidth , viewportHeight);\r\n\t\t\t}\t\r\n\t\t}\r\n\t}\r\n\r\n\tinline public function clearWith(r : Float, g : Float, b : Float, a : Float):Void{\r\n\t\tgl.clearColor(r,g,b,a); //TODO caching ?\r\n\t\tgl.clear(GL.COLOR_BUFFER_BIT);\r\n\t}\r\n\r\n\tinline public function uploadTexture(image : Image) : GPUTexture{\r\n\t\treturn GPUTexture.upload(this, image);\r\n\t}\r\n\r\n\tinline public function uploadCubeTexture(negx : Image,negy : Image,negz : Image,posx : Image,posy : Image,posz : Image) : GPUCubeTexture{\r\n\t\treturn GPUCubeTexture.upload(this, negx,negy,negz,posx,posy,posz);\r\n\t}\r\n\r\n\tinline public function enableBlending(){\r\n\t\tgl.enable(GL.BLEND);\r\n\t}\r\n\r\n\tinline public function disableBlending(){\r\n\t\tgl.disable(GL.BLEND);\r\n\t}\r\n\r\n\tinline public function setBlendingFunc(sfactor:Int, dfactor:Int){\r\n\t\tgl.blendFunc(sfactor, dfactor);\r\n\t}\r\n\r\n}","package glee;\r\n\r\nimport loka.gl.GL;\r\nimport loka.util.Float32Array;\r\n\r\nclass GPUBufferBase{\r\n\tvar  _gl : GL;\r\n\r\n\tpublic var nativeBuffer(default,null) : GLBuffer;\r\n\t\r\n\tvar _float32Array : Float32Array;\r\n\tvar _usage : Int;\r\n\r\n\t\r\n\tpublic var uploaded(default,null) : Bool;\r\n\t\r\n\tpublic function new(gpu : GPU, usage : Int){\r\n\t\t_gl = gpu.gl;\r\n\t\t_usage = usage;\r\n\t\tnativeBuffer = _gl.createBuffer();\r\n\t}\r\n\r\n\tpublic function upload() :Void{\r\n\t\tvar offset = 0;\r\n        _gl.bindBuffer (GL.ARRAY_BUFFER, nativeBuffer);\r\n        if (offset != 0) {\r\n            _gl.bufferSubData(GL.ARRAY_BUFFER, offset, _float32Array);\r\n        }else {\r\n            _gl.bufferData (GL.ARRAY_BUFFER, _float32Array, _usage);\r\n        }\r\n        _gl.bindBuffer (GL.ARRAY_BUFFER, null);\r\n        uploaded = true;\r\n\t}\r\n\t\r\n\r\n}","package glee;\r\n\r\nimport loka.asset.Image;\r\nimport loka.gl.GL;\r\n\r\n//TODO remove duplicate code in GPUTexture\r\nclass GPUCubeTexture{\r\n\r\n\tpublic static function upload(gpu : GPU, negx : Image,negy : Image,negz : Image,posx : Image,posy : Image,posz : Image) : GPUCubeTexture{\r\n\r\n\t\tvar gl = gpu.gl;\r\n        var nativeTexture = gl.createTexture();\r\n        gl.bindTexture(GL.TEXTURE_CUBE_MAP, nativeTexture);\r\n        //TODO ? gl.pixelStorei(GL.UNPACK_FLIP_Y_WEBGL, 0);\r\n        gl.texImage2DViaImage(GL.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, negx);\r\n        gl.texImage2DViaImage(GL.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, negy);\r\n        gl.texImage2DViaImage(GL.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, negz);\r\n        gl.texImage2DViaImage(GL.TEXTURE_CUBE_MAP_POSITIVE_X, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, posx);\r\n        gl.texImage2DViaImage(GL.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, posy);\r\n        gl.texImage2DViaImage(GL.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, posz);\r\n        //TODO ? gl.generateMipmap(GL.TEXTURE_CUBE_MAP);\r\n        //gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_R, GL.CLAMP_TO_EDGE);\r\n        gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE);\r\n        gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);\r\n        gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MIN_FILTER, GL.LINEAR);//GL.LINEAR_MIPMAP_LINEAR);\r\n        gl.texParameteri(GL.TEXTURE_CUBE_MAP, GL.TEXTURE_MAG_FILTER, GL.LINEAR);\r\n        //gl.bindTexture(GL.TEXTURE_CUBE_MAP, null); //TODO not neccesary ?\r\n\r\n        return new GPUCubeTexture(gl,nativeTexture);\r\n\t}\r\n\r\n\tpublic var nativeTexture(default,null) : GLTexture;\r\n\tvar _gl : GL;\r\n\r\n\tprivate function new(gl : GL, nativeTexture : GLTexture){\r\n\t\t_gl = gl;\r\n\t\tthis.nativeTexture = nativeTexture;\r\n\t}\r\n}","package glee;\r\n\r\nimport loka.gl.GL;\r\n\r\nclass GPUProgramUtil{\r\n\r\n\tprivate static function setupShader(gl : GL, shaderSrc : String, shaderType : Int) : GLShader{\r\n        var shader = gl.createShader(shaderType);\r\n        gl.shaderSource(shader, shaderSrc);\r\n        gl.compileShader(shader);\r\n        var success = gl.getShaderParameter(shader, GL.COMPILE_STATUS);\r\n        if (success == 0) {\r\n            // Something went wrong during compilation; get the error\r\n            throw \"could not compile shader:\" + gl.getShaderInfoLog(shader);\r\n        }\r\n        return shader;\r\n    }\r\n\r\n    public static function upload(gl : GL, vertexShaderSrc : String, fragmentShaderSrc : String):GLProgram{\r\n\t\tvar vertexShader = setupShader(gl, vertexShaderSrc, GL.VERTEX_SHADER);\r\n\t\tvar fragmentShader = setupShader(gl, fragmentShaderSrc, GL.FRAGMENT_SHADER);\r\n\r\n\t\tvar nativeProgram = gl.createProgram();\r\n        gl.attachShader(nativeProgram, vertexShader);\r\n        gl.attachShader(nativeProgram, fragmentShader);\r\n        gl.linkProgram(nativeProgram);\r\n\r\n        var success = gl.getProgramParameter(nativeProgram, GL.LINK_STATUS);\r\n        if (success == 0) {\r\n            // something went wrong with the link\r\n            throw (\"program filed to link:\" + gl.getProgramInfoLog (nativeProgram));\r\n        }\r\n\r\n        return nativeProgram;\r\n\t}\r\n\r\n\tpublic static function unload(gl : GL, nativeProgram : GLProgram):Void{\r\n\t\tgl.deleteProgram(nativeProgram);\t\r\n\t}\r\n\r\n}","package glee;\r\n\r\nimport loka.gl.GL;\r\nimport loka.asset.Video;\r\n\r\nclass GPUTexture{\r\n\r\n\t// TODO remove as we have noew member upload?\r\n\tpublic static function upload(gpu : GPU, image) : GPUTexture{\r\n\r\n\t\tvar gl = gpu.gl;\r\n        var nativeTexture = gl.createTexture();\r\n        gl.bindTexture(GL.TEXTURE_2D, nativeTexture);\r\n        gl.texImage2DViaImage(GL.TEXTURE_2D, 0, GL.RGBA, GL.RGBA, GL.UNSIGNED_BYTE, image);\r\n        gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n        gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST); \r\n        gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE); //Prevents s-coordinate wrapping (repeating).\r\n\t\tgl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);//TODO make them as parameters\r\n        gl.bindTexture(GL.TEXTURE_2D, null); //TODO not neccesary ?\r\n\r\n        return new GPUTexture(gl,nativeTexture);\r\n\t}\r\n\r\n\tpublic static function create(gpu : GPU) : GPUTexture{\r\n\r\n\t\tvar gl = gpu.gl;\r\n        var nativeTexture = gl.createTexture();\r\n        gl.bindTexture(GL.TEXTURE_2D, nativeTexture);\r\n        gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MAG_FILTER, GL.NEAREST);\r\n        gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_MIN_FILTER, GL.NEAREST); \r\n        gl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_S, GL.CLAMP_TO_EDGE); //Prevents s-coordinate wrapping (repeating).\r\n\t\tgl.texParameteri(GL.TEXTURE_2D, GL.TEXTURE_WRAP_T, GL.CLAMP_TO_EDGE);//TODO make them as parameters\r\n        return new GPUTexture(gl,nativeTexture);\r\n\t}\r\n\r\n\r\n\t//TODO uploadImage\r\n\tpublic function uploadVideo(video : Video){\r\n\t\t_gl.bindTexture(GL.TEXTURE_2D, nativeTexture);\r\n        _gl.texImage2DViaVideo(GL.TEXTURE_2D, 0, GL.RGB, GL.RGB, GL.UNSIGNED_BYTE, video);\r\n\t}\r\n\r\n\tpublic var nativeTexture(default,null) : GLTexture;\r\n\tvar _gl : GL;\r\n\r\n\tprivate function new(gl : GL, nativeTexture : GLTexture){\r\n\t\t_gl = gl;\r\n\t\tthis.nativeTexture = nativeTexture;\r\n\t}\r\n}","package glee;\r\n\r\nimport loka.gl.GL;\r\n\r\ntypedef AttributeData = {\r\n\tstride : Int,\r\n\tshaderLocation : Int\r\n}\r\n\r\n@:autoBuild(glee.macro.GPUProgramMacro.apply())\r\ninterface GPUProgram{\r\n\r\n}\r\n","package glee.macro;\r\n\r\nimport haxe.macro.Expr;\r\nimport haxe.macro.Context;\r\nimport tink.macro.Functions;\r\nimport tink.macro.Member;\r\nusing tink.MacroApi;\r\nusing belt.MacroUtils;\r\n\r\nclass GPUBufferMacro{\r\n\r\n    static var bufferTypes : Map<String,ComplexType> = new Map();\r\n\r\n\tmacro static public function apply() : ComplexType{\r\n\r\n        var pos = Context.currentPos();\r\n\r\n        var localType = Context.getLocalType();\r\n\r\n        var typeParam = switch (localType) {\r\n            case TInst(_,[tp]):\r\n                switch(tp){\r\n                    case TType(t,param): t.get().type;\r\n                    case TAnonymous(t) : tp;\r\n                    default : null;\r\n                }\r\n            default:null;\r\n        }\r\n        if(typeParam == null){\r\n            //Still alow specifying buffer via their porgram\r\n            switch (localType) {\r\n            case TInst(_,[t]):\r\n                switch(t){\r\n                    case TInst(ref,_):\r\n                        var programType = ref.get();\r\n                        var metadata = programType.meta.get();\r\n                        var shaderGroup = glee.macro.GPUProgramMacro.getShaderGroupFromMetadata(metadata);\r\n-                       return getBufferClassFromAttributes(shaderGroup.attributes);\r\n                    case TMono(_): Context.error(\"need to specify the program type explicitly, no type inference supported\", pos);\r\n                    default: Context.error(\"unsuported type : \" +  localType, pos);\r\n                }\r\n                default: Context.error(\"unsuported type : \" +  localType, pos);\r\n            }\r\n        }\r\n\r\n        if(typeParam == null){\r\n            Context.error(\"type param not found\",pos);\r\n        }\r\n\r\n        var fields = switch(typeParam){\r\n            case TInst(ref,_):\r\n                 ref.get().fields.get();\r\n            case TMono(mono):  Context.error(\"need to specify the program type explicitely, no type inference : \" + typeParam + \" (\" + mono.get() + \")\",pos); null; \r\n            case TAnonymous(ref):\r\n                ref.get().fields;\r\n            default: null;\r\n        }\r\n\r\n        if(fields == null){\r\n            Context.error(\"type param not supported \" + typeParam, pos);\r\n            return null;\r\n        }\r\n\r\n        var attributes = new Array<glee.GLSLShaderGroup.Attribute>();\r\n        for (field in fields){\r\n            switch(field.type){\r\n                case TAbstract(t,_):\r\n                    var abstractType = t.get();\r\n                    if(abstractType.pack.length == 1 && abstractType.pack[0] == \"glmat\"){\r\n                        attributes.push({name:field.name, type:TPath({name :abstractType.name, pack :abstractType.pack})});    \r\n                    }else{\r\n                        Context.error(\"attribute type not supported \" + abstractType, pos);\r\n                        return null; \r\n                    }\r\n                default : \r\n                    Context.error(\"attribute type not supported \" + field.type, pos);\r\n                    return null;\r\n            }\r\n        }\r\n\r\n\r\n        var bufferType = getBufferClassFromAttributes(attributes);\r\n\r\n        return bufferType;\r\n    }\r\n\r\n    static public function getBufferClassFromAttributes(attributes : Array<glee.GLSLShaderGroup.Attribute>) : ComplexType{\r\n        var pos = Context.currentPos();\r\n        var bufferClassPath = getBufferClassPathFromAttributes(attributes);\r\n\r\n        if (bufferTypes.exists(bufferClassPath.name)){\r\n            //trace(\"already generated \" + bufferClassPath.name);\r\n            return bufferTypes[bufferClassPath.name];\r\n        }\r\n\r\n\r\n        var fields : Array<Field> = [];\r\n\r\n\r\n        var getNumVerticesWrittenBody = macro {var max : Float = 0;};\r\n\r\n        var rewindBody = macro {\r\n        };\r\n        \r\n\r\n        var totalStride : Int = 0;\r\n\r\n        for (attribute in attributes){\r\n            var numValues = 1;\r\n            var attrTPath = switch(cast attribute.type){\r\n                case TPath(att): att;\r\n                default: Context.error(\"should be a TPath\", pos); null;\r\n            };\r\n            if(attrTPath.name == \"Vec4\"){\r\n                numValues = 4;\r\n            }else if(attrTPath.name == \"Vec3\"){\r\n                numValues = 3;\r\n            }else if(attrTPath.name == \"Vec2\"){\r\n                numValues = 2;\r\n            }\r\n            totalStride+= numValues; //work for samme types attributes //TODO make it work for mixed types Int/Float...\r\n        }         \r\n\r\n        var stride = 0;   \r\n        for (attribute in attributes){\r\n            var attributeName = attribute.name;\r\n            var attributeMetadataName = \"_\" + attributeName + \"_bufferPosition\";\r\n\r\n            getNumVerticesWrittenBody.append(macro max = Math.max(max,$i{attributeMetadataName}));            \r\n\r\n            rewindBody.append(macro  $i{attributeMetadataName} = 0);\r\n\r\n            var numValues = 1;\r\n            var attrTPath = switch(cast attribute.type){\r\n                case TPath(att): att;\r\n                default: Context.error(\"should be a TPath\", pos); null;\r\n            };\r\n            if(attrTPath.name == \"Vec4\"){\r\n                numValues = 4;\r\n            }else if(attrTPath.name == \"Vec3\"){\r\n                numValues = 3;\r\n            }else if(attrTPath.name == \"Vec2\"){\r\n                numValues = 2;\r\n            }\r\n\r\n            //////////////////////initialization //////////////////////////////////////////\r\n            \r\n            \r\n            fields.push({\r\n                name: attributeMetadataName,\r\n                pos: pos,\r\n                access: [APrivate],\r\n                kind: FVar(macro : Int,macro 0), //TODO -1 or 0 ? \r\n                });\r\n       \r\n\r\n            /////////////////////// write function ////////////////////////////////////////////\r\n            var body = macro {\r\n                uploaded = false;\r\n                if(_float32Array == null) {\r\n                    _float32Array = new loka.util.Float32Array(512);\r\n                }\r\n                if (_float32Array.length <= $i{attributeMetadataName} * $v{totalStride} + $v{numValues}) {\r\n                    var newArray = new loka.util.Float32Array(_float32Array.length * 2); //TODO inline growing in javascript\r\n                    //TODO : copy values\r\n                    _float32Array = newArray;\r\n                }\r\n\r\n\r\n                var pos : Int = $i{attributeMetadataName} * $v{totalStride} + $v{stride}; \r\n                $i{attributeMetadataName} ++;\r\n            }\r\n\r\n            for (i in 0...numValues){\r\n                var arg = \"v\" + i;\r\n                body.append(macro  _float32Array[pos+$v{i}] = $i{arg});\r\n            }\r\n\r\n            //trace(body.toString());\r\n\r\n            var arguments = [];                                         \r\n            var attrTPath = switch(cast attribute.type){\r\n                case TPath(att): att;\r\n                default: Context.error(\"should be a TPath\", pos); null;\r\n            };                              \r\n            \r\n            if(attrTPath.name.substr(0,3) == \"Vec\"){          \r\n                for (i in 0...numValues){                                 \r\n                    arguments.push(                                 \r\n                    Functions.toArg(\"v\"+i,macro : Float)\r\n                    );                                              \r\n                }                                                   \r\n            }else if(attrTPath.name == \"Float\"){\r\n                arguments.push(                                     \r\n                    Functions.toArg(\"v0\",macro : Float)             \r\n                    );                    \r\n            } \r\n            \r\n            fields.push(Member.method(\"write_\" + attribute.name,Functions.func(body,arguments)));            \r\n            stride+= numValues; //work for samme types attributes //TODO make it work for mixed types Int/Float...\r\n        }\r\n\r\n        getNumVerticesWrittenBody.append(macro return Std.int(max));\r\n        fields.push(Member.method(\"getNumVerticesWritten\",Functions.func(getNumVerticesWrittenBody)));        \r\n\r\n        fields.push(Member.method(\"rewind\",Functions.func(rewindBody)));\r\n\r\n\r\n        var typeDefinition : TypeDefinition = {\r\n            pos : pos,\r\n            pack : bufferClassPath.pack,\r\n            name : bufferClassPath.name,\r\n            kind :TDClass({pack :[\"glee\"], name: \"GPUBufferBase\"},[], false),\r\n            fields:fields\r\n        }\r\n        Context.defineType(typeDefinition);\r\n\r\n\r\n        var bufferType = TPath(bufferClassPath);\r\n        bufferTypes[bufferClassPath.name] = bufferType;\r\n        return bufferType;\r\n    } \r\n\r\n    static private function getBufferClassPathFromAttributes(attributes : Array<glee.GLSLShaderGroup.Attribute>): TypePath{\r\n        var bufferClassName =  \"Buffer_\";\r\n        for (attribute in attributes){\r\n            bufferClassName += attribute.name + attribute.type;\r\n        }\r\n        bufferClassName = StringTools.urlEncode(bufferClassName);\r\n        bufferClassName = StringTools.replace(bufferClassName,\"%\",\"_\");\r\n        \r\n        var bufferClassPath = {pack:[\"glee\", \"buffer\"],name:bufferClassName};\r\n\r\n        return bufferClassPath;\r\n    }\r\n\r\n    static private function generateFieldsFromTypeParameter(classBuilder : ClassBuilder):Void{\r\n\r\n        var pos = Context.currentPos();\r\n\r\n        var target = classBuilder.target;\r\n        if (target.isInterface){\r\n            return;\r\n        }\r\n\r\n       \r\n\r\n\t}\r\n}","\r\n/* Ported from gl-matrix by Brandon Jones, Colin MacKenzie IV. All rights reserved.\r\n */\r\npackage glmat;\r\n\r\nimport loka.util.Float32Array;\r\n\r\nabstract Mat4(Float32Array) to loka.util.Float32Array{\r\n\r\n    inline static var GLMAT_EPSILON : Float = 0.1; //TODO check gl-matrix constants\r\n\r\n\tinline public function new(){\r\n\t\tthis = new Float32Array(16);\r\n\t    this[0] = 1;\r\n        this[1] = 0;\r\n        this[2] = 0;\r\n        this[3] = 0;\r\n        this[4] = 0;\r\n        this[5] = 1;\r\n        this[6] = 0;\r\n        this[7] = 0;\r\n        this[8] = 0;\r\n        this[9] = 0;\r\n        this[10] = 1;\r\n        this[11] = 0;\r\n        this[12] = 0;\r\n        this[13] = 0;\r\n        this[14] = 0;\r\n        this[15] = 1;\r\n\t}\r\n\r\n\t@:arrayAccess \r\n\tpublic inline function get(index:Int){\r\n\t\treturn this[index];\r\n\t} \r\n\t\r\n\t@:arrayAccess \r\n\tpublic inline function arrayWrite(index:Int, v:Float):Float {\r\n\t    this[index] =  v;\r\n\t    return v;\r\n\t}\r\n\r\n    // *\r\n//  * Set a mat4 to the identity matrix\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @returns {mat4} out\r\n \r\npublic static function identity(out : Mat4) {\r\n    out[0] = 1;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[5] = 1;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[10] = 1;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n    out[15] = 1;\r\n    return out;\r\n};\r\n\r\n\t/**\r\n\t * Copy the values from one Mat4 to another\r\n \t *\r\n \t * @param {Mat4} out the receiving matrix\r\n\t * @param {Mat4} a the source matrix\r\n \t * @returns {Mat4} out\r\n\t**/\r\n\tpublic static function copyFrom(out : Mat4, a : Mat4) : Mat4{\r\n\t\tout[0] = a[0];\r\n\t    out[1] = a[1];\r\n\t    out[2] = a[2];\r\n\t    out[3] = a[3];\r\n\t    out[4] = a[4];\r\n\t    out[5] = a[5];\r\n\t    out[6] = a[6];\r\n\t    out[7] = a[7];\r\n\t    out[8] = a[8];\r\n\t    out[9] = a[9];\r\n\t    out[10] = a[10];\r\n\t    out[11] = a[11];\r\n\t    out[12] = a[12];\r\n\t    out[13] = a[13];\r\n\t    out[14] = a[14];\r\n\t    out[15] = a[15];\r\n\t    return out;\t\r\n\t}\r\n\r\n    // *\r\n//  * Multiplies two mat4's\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the first operand\r\n//  * @param {mat4} b the second operand\r\n//  * @returns {mat4} out\r\n \r\npublic static function multiply(out : Mat4, a : Mat4, b : Mat4) {\r\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n    // Cache only the current line of the second matrix\r\n    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];  \r\n    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];\r\n    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];\r\n    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n\r\n    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];\r\n    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;\r\n    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;\r\n    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;\r\n    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;\r\n    return out;\r\n}\r\n\r\n\r\n\r\n/**\r\n * Translate a Mat4 by the given vector\r\n *\r\n * @param {Mat4} out the receiving matrix\r\n * @param {Mat4} a the matrix to translate\r\n * //TODO @param {Vec4} v vector to translate by\r\n * @returns {Mat4} out\r\n **/\r\npublic static function translate(out : Mat4, a : Mat4, x : Float, y : Float, z : Float) : Mat4{\r\n    var a00, a01, a02, a03,\r\n        a10, a11, a12, a13,\r\n        a20, a21, a22, a23;\r\n\r\n    if (a == out) {\r\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n    } else {\r\n        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\r\n        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\r\n        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\r\n\r\n        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;\r\n        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;\r\n        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;\r\n\r\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\n/**\r\n * Scales the Mat4 by the dimensions in the given Vec4\r\n *\r\n * @param {Mat4} out the receiving matrix\r\n * @param {Mat4} a the matrix to scale\r\n * //TODO @param {Vec4} v the vector to scale the matrix by\r\n * @returns {Mat4} out\r\n **/\r\npublic static function scale(out : Mat4, a : Mat4, x : Float, y : Float, z : Float) : Mat4{\r\n    out[0] = a[0] * x;\r\n    out[1] = a[1] * x;\r\n    out[2] = a[2] * x;\r\n    out[3] = a[3] * x;\r\n    out[4] = a[4] * y;\r\n    out[5] = a[5] * y;\r\n    out[6] = a[6] * y;\r\n    out[7] = a[7] * y;\r\n    out[8] = a[8] * z;\r\n    out[9] = a[9] * z;\r\n    out[10] = a[10] * z;\r\n    out[11] = a[11] * z;\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n    return out;\r\n};\r\n\r\n\r\n\r\n/**\r\n* Generates a orthogonal projection matrix with the given bounds\r\n*\r\n* @param {mat4} out mat4 frustum matrix will be written into\r\n* @param {number} left Left bound of the frustum\r\n* @param {number} right Right bound of the frustum\r\n* @param {number} bottom Bottom bound of the frustum\r\n* @param {number} top Top bound of the frustum\r\n* @param {number} near Near bound of the frustum\r\n* @param {number} far Far bound of the frustum\r\n* @returns {mat4} out\r\n*/\r\nstatic public function ortho(out : Mat4, left : Float, right : Float, bottom : Float, top : Float, near : Float, far : Float) : Mat4{\r\n    var lr = 1 / (left - right),\r\n    bt = 1 / (bottom - top),\r\n    nf = 1 / (near - far);\r\n    out[0] = -2 * lr;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[5] = -2 * bt;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[10] = 2 * nf;\r\n    out[11] = 0;\r\n    out[12] = (left + right) * lr;\r\n    out[13] = (top + bottom) * bt;\r\n    out[14] = (far + near) * nf;\r\n    out[15] = 1;\r\n    return out;\r\n};\r\n\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nstatic public function frustum(out : Mat4, left : Float, right : Float, bottom : Float, top : Float, near : Float, far : Float) {\r\n    var rl = 1 / (right - left),\r\n        tb = 1 / (top - bottom),\r\n        nf = 1 / (near - far);\r\n    out[0] = (near * 2) * rl;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[5] = (near * 2) * tb;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = (right + left) * rl;\r\n    out[9] = (top + bottom) * tb;\r\n    out[10] = (far + near) * nf;\r\n    out[11] = -1;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = (far * near * 2) * nf;\r\n    out[15] = 0;\r\n    return out;\r\n}\r\n\r\npublic static function rotateX(out : Mat4, a : Mat4, angle_x : Float) : Mat4{\r\n    \r\n    var cosX = Math.cos(angle_x);\r\n    var sinX = Math.sin(angle_x);\r\n  \r\n    out[0] = a[0] ;\r\n    out[1] = a[1] ;\r\n    out[2] = a[2] ;\r\n    out[3] = a[3] ;\r\n    out[4] = a[4] * cosX + a[8] * -sinX;\r\n    out[5] = a[5] * cosX + a[9] * -sinX;\r\n    out[6] = a[6] * cosX + a[10] * -sinX;\r\n    out[7] = a[7] * cosX + a[11] * -sinX;\r\n    out[8] =  a[8] * cosX + a[4] * sinX;\r\n    out[9] =  a[9] * cosX + a[5] * sinX;\r\n    out[10] = a[10] * cosX + a[6] * sinX;\r\n    out[11] = a[11] * cosX + a[7] * sinX;\r\n    out[12] = a[12] ;\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n    return out;\r\n\r\n}\r\npublic static function rotateY(out : Mat4, a : Mat4, angle_y : Float) : Mat4{\r\n    \r\n    var cosY = Math.cos(angle_y);\r\n    var sinY = Math.sin(angle_y);\r\n  \r\n    out[0] = a[0] * cosY + a[8] * sinY;\r\n    out[1] = a[1] * cosY + a[9] * sinY;\r\n    out[2] = a[2] * cosY + a[10] * sinY;\r\n    out[3] = a[3] * cosY + a[11] * sinY;\r\n    out[4] = a[4] ;\r\n    out[5] = a[5] ;\r\n    out[6] = a[6] ;\r\n    out[7] = a[7] ;\r\n    out[8] =  a[8] * cosY + a[0] * -sinY;\r\n    out[9] =  a[9] * cosY + a[1] * -sinY;\r\n    out[10] = a[10] * cosY + a[2] * -sinY;\r\n    out[11] = a[11] * cosY + a[3] * -sinY;\r\n    out[12] = a[12] ;\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n    return out;\r\n\r\n}\r\npublic static function rotateZ(out : Mat4, a : Mat4, angle_z : Float) : Mat4{\r\n    \r\n    var s = Math.sin(angle_z);\r\n    var c = Math.cos(angle_z);\r\n    \r\n    var a00 = a[0],\r\n    a01 = a[1],\r\n    a02 = a[2],\r\n    a03 = a[3],\r\n    a10 = a[4],\r\n    a11 = a[5],\r\n    a12 = a[6],\r\n    a13 = a[7];\r\n\r\n    if (a != out) { // If the source and destination differ, copy the unchanged last row\r\n        out[8]  = a[8];\r\n        out[9]  = a[9];\r\n        out[10] = a[10];\r\n        out[11] = a[11];\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n    }\r\n\r\n    // Perform axis-specific matrix multiplication\r\n    out[0] = a00 * c + a10 * s;\r\n    out[1] = a01 * c + a11 * s;\r\n    out[2] = a02 * c + a12 * s;\r\n    out[3] = a03 * c + a13 * s;\r\n    out[4] = a10 * c - a00 * s;\r\n    out[5] = a11 * c - a01 * s;\r\n    out[6] = a12 * c - a02 * s;\r\n    out[7] = a13 * c - a03 * s;\r\n    return out;\r\n\r\n};\r\npublic static function rotateXY(out : Mat4, angle_x : Float, angle_y : Float)\r\n{\r\n    var cosX = Math.cos(angle_x);\r\n    var sinX = Math.sin(angle_x);\r\n    var cosY = Math.cos(angle_y);\r\n    var sinY = Math.sin(angle_y);\r\n\r\n    out[0] = cosY;\r\n    out[1] = 0;\r\n    out[2] = -sinY;\r\n    out[3] = 0;\r\n    out[4] = -sinX * sinY;\r\n    out[5] = cosX;\r\n    out[6] = -sinY * cosY;\r\n    out[7] = 0;\r\n    out[8] = cosX * sinY;\r\n    out[9] = sinX;\r\n    out[10] = cosX * cosY;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n    out[15] = 1;\r\n    return out;\r\n}\r\n\r\n//TODO delete?\r\n// static public function inversePerspective(out : Mat4, fovy : Float, aspect : Float, near : Float, far : Float) {\r\n//     var h = Math.tan(fovy / 2);\r\n//     var w = h * aspect;\r\n//     var z0 = (far - near) / (-2 * far * near);\r\n//     var z1 = (far + near) / (-2 * far * near);\r\n//     out[0] = w;\r\n//     out[1] = 0;\r\n//     out[2] = 0;\r\n//     out[3] = 0;\r\n//     out[4] = 0;\r\n//     out[5] = h;\r\n//     out[6] = 0;\r\n//     out[7] = 0;\r\n//     out[8] = 0;\r\n//     out[9] = 0;\r\n//     out[10] = 0;\r\n//     out[11] = z0;\r\n//     out[12] = 0;\r\n//     out[13] = 0;\r\n//     out[14] = 1;\r\n//     out[15] = z1;\r\n//     return out;\r\n// }\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nstatic public function perspective(out : Mat4, fovy : Float, aspect : Float, near : Float, far : Float) {\r\n    var f = 1.0 / Math.tan(fovy / 2),\r\n        nf = 1 / (near - far);\r\n    out[0] = f / aspect;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[5] = f;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[10] = (far + near) * nf;\r\n    out[11] = -1;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = (2 * far * near) * nf;\r\n    out[15] = 0;\r\n    return out;\r\n}\r\n\r\n/*\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\n// static public function perspectiveFromFieldOfView(out : Mat4, fov : Float, near : Float, far : Float) {\r\n//     var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),\r\n//         downTan = Math.tan(fov.downDegrees * Math.PI/180.0),\r\n//         leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),\r\n//         rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),\r\n//         xScale = 2.0 / (leftTan + rightTan),\r\n//         yScale = 2.0 / (upTan + downTan);\r\n\r\n//     out[0] = xScale;\r\n//     out[1] = 0.0;\r\n//     out[2] = 0.0;\r\n//     out[3] = 0.0;\r\n//     out[4] = 0.0;\r\n//     out[5] = yScale;\r\n//     out[6] = 0.0;\r\n//     out[7] = 0.0;\r\n//     out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n//     out[9] = ((upTan - downTan) * yScale * 0.5);\r\n//     out[10] = far / (near - far);\r\n//     out[11] = -1.0;\r\n//     out[12] = 0.0;\r\n//     out[13] = 0.0;\r\n//     out[14] = (far * near) / (near - far);\r\n//     out[15] = 0.0;\r\n//     return out;\r\n// }\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nstatic public function lookAt(out : Mat4, eye : Vec3, center : Vec3, up : Vec3) {\r\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\r\n\r\n    if (Math.abs(eye.x - center.x) < GLMAT_EPSILON &&\r\n        Math.abs(eye.y - center.y) < GLMAT_EPSILON &&\r\n        Math.abs(eye.z - center.z) < GLMAT_EPSILON) {\r\n        return identity(out);\r\n    }\r\n\r\n    z0 = eye.x - center.x;\r\n    z1 = eye.y - center.y;\r\n    z2 = eye.z - center.z;\r\n\r\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n\r\n    x0 = up.y * z2 - up.z * z1;\r\n    x1 = up.z * z0 - up.x * z2;\r\n    x2 = up.x * z1 - up.y * z0;\r\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n    if (len == 0) {\r\n        x0 = 0;\r\n        x1 = 0;\r\n        x2 = 0;\r\n    } else {\r\n        len = 1 / len;\r\n        x0 *= len;\r\n        x1 *= len;\r\n        x2 *= len;\r\n    }\r\n\r\n    y0 = z1 * x2 - z2 * x1;\r\n    y1 = z2 * x0 - z0 * x2;\r\n    y2 = z0 * x1 - z1 * x0;\r\n\r\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n    if (len == 0) {\r\n        y0 = 0;\r\n        y1 = 0;\r\n        y2 = 0;\r\n    } else {\r\n        len = 1 / len;\r\n        y0 *= len;\r\n        y1 *= len;\r\n        y2 *= len;\r\n    }\r\n\r\n    out[0] = x0;\r\n    out[1] = y0;\r\n    out[2] = z0;\r\n    out[3] = 0;\r\n    out[4] = x1;\r\n    out[5] = y1;\r\n    out[6] = z1;\r\n    out[7] = 0;\r\n    out[8] = x2;\r\n    out[9] = y2;\r\n    out[10] = z2;\r\n    out[11] = 0;\r\n    out[12] = -(x0 * eye.x + x1 * eye.y + x2 * eye.z);\r\n    out[13] = -(y0 * eye.x + y1 * eye.y + y2 * eye.z);\r\n    out[14] = -(z0 * eye.x + z1 * eye.y + z2 * eye.z);\r\n    out[15] = 1;\r\n\r\n    return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n **/\r\npublic static function invert(out : Mat4, a : Mat4) : Mat4 {\r\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n        b00 = a00 * a11 - a01 * a10,\r\n        b01 = a00 * a12 - a02 * a10,\r\n        b02 = a00 * a13 - a03 * a10,\r\n        b03 = a01 * a12 - a02 * a11,\r\n        b04 = a01 * a13 - a03 * a11,\r\n        b05 = a02 * a13 - a03 * a12,\r\n        b06 = a20 * a31 - a21 * a30,\r\n        b07 = a20 * a32 - a22 * a30,\r\n        b08 = a20 * a33 - a23 * a30,\r\n        b09 = a21 * a32 - a22 * a31,\r\n        b10 = a21 * a33 - a23 * a31,\r\n        b11 = a22 * a33 - a23 * a32,\r\n\r\n        // Calculate the determinant\r\n        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n    if (det == 0) { \r\n        return null; \r\n    }\r\n    det = 1.0 / det;\r\n\r\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n    return out;\r\n};\r\n\r\n\r\n}\r\n\r\n\r\n/*\r\nmat4.clone = function(a) {\r\n    var out = new GLMAT_ARRAY_TYPE(16);\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n    return out;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n// *\r\n//  * Transpose the values of a mat4\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the source matrix\r\n//  * @returns {mat4} out\r\n \r\nmat4.transpose = function(out, a) {\r\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n    if (out === a) {\r\n        var a01 = a[1], a02 = a[2], a03 = a[3],\r\n            a12 = a[6], a13 = a[7],\r\n            a23 = a[11];\r\n\r\n        out[1] = a[4];\r\n        out[2] = a[8];\r\n        out[3] = a[12];\r\n        out[4] = a01;\r\n        out[6] = a[9];\r\n        out[7] = a[13];\r\n        out[8] = a02;\r\n        out[9] = a12;\r\n        out[11] = a[14];\r\n        out[12] = a03;\r\n        out[13] = a13;\r\n        out[14] = a23;\r\n    } else {\r\n        out[0] = a[0];\r\n        out[1] = a[4];\r\n        out[2] = a[8];\r\n        out[3] = a[12];\r\n        out[4] = a[1];\r\n        out[5] = a[5];\r\n        out[6] = a[9];\r\n        out[7] = a[13];\r\n        out[8] = a[2];\r\n        out[9] = a[6];\r\n        out[10] = a[10];\r\n        out[11] = a[14];\r\n        out[12] = a[3];\r\n        out[13] = a[7];\r\n        out[14] = a[11];\r\n        out[15] = a[15];\r\n    }\r\n    \r\n    return out;\r\n};\r\n\r\n\r\n\r\n// *\r\n//  * Calculates the adjugate of a mat4\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the source matrix\r\n//  * @returns {mat4} out\r\n \r\nmat4.adjoint = function(out, a) {\r\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];\r\n\r\n    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\r\n    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\r\n    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\r\n    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\r\n    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\r\n    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\r\n    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\r\n    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Calculates the determinant of a mat4\r\n//  *\r\n//  * @param {mat4} a the source matrix\r\n//  * @returns {number} determinant of a\r\n \r\nmat4.determinant = function (a) {\r\n    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],\r\n        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],\r\n        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],\r\n        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],\r\n\r\n        b00 = a00 * a11 - a01 * a10,\r\n        b01 = a00 * a12 - a02 * a10,\r\n        b02 = a00 * a13 - a03 * a10,\r\n        b03 = a01 * a12 - a02 * a11,\r\n        b04 = a01 * a13 - a03 * a11,\r\n        b05 = a02 * a13 - a03 * a12,\r\n        b06 = a20 * a31 - a21 * a30,\r\n        b07 = a20 * a32 - a22 * a30,\r\n        b08 = a20 * a33 - a23 * a30,\r\n        b09 = a21 * a32 - a22 * a31,\r\n        b10 = a21 * a33 - a23 * a31,\r\n        b11 = a22 * a33 - a23 * a32;\r\n\r\n    // Calculate the determinant\r\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n};\r\n\r\n\r\n// *\r\n//  * Rotates a mat4 by the given angle\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the matrix to rotate\r\n//  * @param {number} rad the angle to rotate the matrix by\r\n//  * @param {vec3} axis the axis to rotate around\r\n//  * @returns {mat4} out\r\n \r\nmat4.rotate = function (out, a, rad, axis) {\r\n    var x = axis[0], y = axis[1], z = axis[2],\r\n        len = Math.sqrt(x * x + y * y + z * z),\r\n        s, c, t,\r\n        a00, a01, a02, a03,\r\n        a10, a11, a12, a13,\r\n        a20, a21, a22, a23,\r\n        b00, b01, b02,\r\n        b10, b11, b12,\r\n        b20, b21, b22;\r\n\r\n    if (Math.abs(len) < GLMAT_EPSILON) { return null; }\r\n    \r\n    len = 1 / len;\r\n    x *= len;\r\n    y *= len;\r\n    z *= len;\r\n\r\n    s = Math.sin(rad);\r\n    c = Math.cos(rad);\r\n    t = 1 - c;\r\n\r\n    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];\r\n    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];\r\n    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];\r\n\r\n    // Construct the elements of the rotation matrix\r\n    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;\r\n    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;\r\n    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;\r\n\r\n    // Perform rotation-specific matrix multiplication\r\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n    }\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Rotates a matrix by the given angle around the X axis\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the matrix to rotate\r\n//  * @param {number} rad the angle to rotate the matrix by\r\n//  * @returns {mat4} out\r\n \r\nmat4.rotateX = function (out, a, rad) {\r\n    var s = Math.sin(rad),\r\n        c = Math.cos(rad),\r\n        a10 = a[4],\r\n        a11 = a[5],\r\n        a12 = a[6],\r\n        a13 = a[7],\r\n        a20 = a[8],\r\n        a21 = a[9],\r\n        a22 = a[10],\r\n        a23 = a[11];\r\n\r\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\r\n        out[0]  = a[0];\r\n        out[1]  = a[1];\r\n        out[2]  = a[2];\r\n        out[3]  = a[3];\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n    }\r\n\r\n    // Perform axis-specific matrix multiplication\r\n    out[4] = a10 * c + a20 * s;\r\n    out[5] = a11 * c + a21 * s;\r\n    out[6] = a12 * c + a22 * s;\r\n    out[7] = a13 * c + a23 * s;\r\n    out[8] = a20 * c - a10 * s;\r\n    out[9] = a21 * c - a11 * s;\r\n    out[10] = a22 * c - a12 * s;\r\n    out[11] = a23 * c - a13 * s;\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Rotates a matrix by the given angle around the Y axis\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the matrix to rotate\r\n//  * @param {number} rad the angle to rotate the matrix by\r\n//  * @returns {mat4} out\r\n \r\nmat4.rotateY = function (out, a, rad) {\r\n    var s = Math.sin(rad),\r\n        c = Math.cos(rad),\r\n        a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3],\r\n        a20 = a[8],\r\n        a21 = a[9],\r\n        a22 = a[10],\r\n        a23 = a[11];\r\n\r\n    if (a !== out) { // If the source and destination differ, copy the unchanged rows\r\n        out[4]  = a[4];\r\n        out[5]  = a[5];\r\n        out[6]  = a[6];\r\n        out[7]  = a[7];\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n    }\r\n\r\n    // Perform axis-specific matrix multiplication\r\n    out[0] = a00 * c - a20 * s;\r\n    out[1] = a01 * c - a21 * s;\r\n    out[2] = a02 * c - a22 * s;\r\n    out[3] = a03 * c - a23 * s;\r\n    out[8] = a00 * s + a20 * c;\r\n    out[9] = a01 * s + a21 * c;\r\n    out[10] = a02 * s + a22 * c;\r\n    out[11] = a03 * s + a23 * c;\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Rotates a matrix by the given angle around the Z axis\r\n//  *\r\n//  * @param {mat4} out the receiving matrix\r\n//  * @param {mat4} a the matrix to rotate\r\n//  * @param {number} rad the angle to rotate the matrix by\r\n//  * @returns {mat4} out\r\n \r\nmat4.rotateZ = function (out, a, rad) {\r\n    var s = Math.sin(rad),\r\n        c = Math.cos(rad),\r\n        a00 = a[0],\r\n        a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3],\r\n        a10 = a[4],\r\n        a11 = a[5],\r\n        a12 = a[6],\r\n        a13 = a[7];\r\n\r\n    if (a !== out) { // If the source and destination differ, copy the unchanged last row\r\n        out[8]  = a[8];\r\n        out[9]  = a[9];\r\n        out[10] = a[10];\r\n        out[11] = a[11];\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n    }\r\n\r\n    // Perform axis-specific matrix multiplication\r\n    out[0] = a00 * c + a10 * s;\r\n    out[1] = a01 * c + a11 * s;\r\n    out[2] = a02 * c + a12 * s;\r\n    out[3] = a03 * c + a13 * s;\r\n    out[4] = a10 * c - a00 * s;\r\n    out[5] = a11 * c - a01 * s;\r\n    out[6] = a12 * c - a02 * s;\r\n    out[7] = a13 * c - a03 * s;\r\n    return out;\r\n};\r\n\r\n// *\r\n//  * Creates a matrix from a quaternion rotation and vector translation\r\n//  * This is equivalent to (but much faster than):\r\n//  *\r\n//  *     mat4.identity(dest);\r\n//  *     mat4.translate(dest, vec);\r\n//  *     var quatMat = mat4.create();\r\n//  *     quat4.toMat4(quat, quatMat);\r\n//  *     mat4.multiply(dest, quatMat);\r\n//  *\r\n//  * @param {mat4} out mat4 receiving operation result\r\n//  * @param {quat4} q Rotation quaternion\r\n//  * @param {vec3} v Translation vector\r\n//  * @returns {mat4} out\r\n \r\nmat4.fromRotationTranslation = function (out, q, v) {\r\n    // Quaternion math\r\n    var x = q[0], y = q[1], z = q[2], w = q[3],\r\n        x2 = x + x,\r\n        y2 = y + y,\r\n        z2 = z + z,\r\n\r\n        xx = x * x2,\r\n        xy = x * y2,\r\n        xz = x * z2,\r\n        yy = y * y2,\r\n        yz = y * z2,\r\n        zz = z * z2,\r\n        wx = w * x2,\r\n        wy = w * y2,\r\n        wz = w * z2;\r\n\r\n    out[0] = 1 - (yy + zz);\r\n    out[1] = xy + wz;\r\n    out[2] = xz - wy;\r\n    out[3] = 0;\r\n    out[4] = xy - wz;\r\n    out[5] = 1 - (xx + zz);\r\n    out[6] = yz + wx;\r\n    out[7] = 0;\r\n    out[8] = xz + wy;\r\n    out[9] = yz - wx;\r\n    out[10] = 1 - (xx + yy);\r\n    out[11] = 0;\r\n    out[12] = v[0];\r\n    out[13] = v[1];\r\n    out[14] = v[2];\r\n    out[15] = 1;\r\n    \r\n    return out;\r\n};\r\n\r\nmat4.fromQuat = function (out, q) {\r\n    var x = q[0], y = q[1], z = q[2], w = q[3],\r\n        x2 = x + x,\r\n        y2 = y + y,\r\n        z2 = z + z,\r\n\r\n        xx = x * x2,\r\n        yx = y * x2,\r\n        yy = y * y2,\r\n        zx = z * x2,\r\n        zy = z * y2,\r\n        zz = z * z2,\r\n        wx = w * x2,\r\n        wy = w * y2,\r\n        wz = w * z2;\r\n\r\n    out[0] = 1 - yy - zz;\r\n    out[1] = yx + wz;\r\n    out[2] = zx - wy;\r\n    out[3] = 0;\r\n\r\n    out[4] = yx - wz;\r\n    out[5] = 1 - xx - zz;\r\n    out[6] = zy + wx;\r\n    out[7] = 0;\r\n\r\n    out[8] = zx + wy;\r\n    out[9] = zy - wx;\r\n    out[10] = 1 - xx - yy;\r\n    out[11] = 0;\r\n\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n    out[15] = 1;\r\n\r\n    return out;\r\n};\r\n\r\n\r\n\r\n// *\r\n//  * Returns a string representation of a mat4\r\n//  *\r\n//  * @param {mat4} mat matrix to represent as a string\r\n//  * @returns {String} string representation of the matrix\r\n \r\nmat4.str = function (a) {\r\n    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +\r\n                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +\r\n                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + \r\n                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n};\r\n\r\n// /**\r\n//  * Returns Frobenius norm of a mat4\r\n//  *\r\n//  * @param {mat4} a the matrix to calculate Frobenius norm of\r\n//  * @returns {number} Frobenius norm\r\n \r\nmat4.frob = function (a) {\r\n    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))\r\n};\r\n\r\n\r\nif(typeof(exports) !== 'undefined') {\r\n    exports.mat4 = mat4;\r\n}\r\n*/","package glmat;\r\n\r\nimport loka.util.Float32Array;\r\n\r\nabstract Vec2(Float32Array){\r\n\r\n\tinline public function new(?x:Float=0,?y:Float=0){\r\n\t\tthis = new Float32Array(2);\r\n\t    this[0] = x;\r\n\t    this[1] = y;\r\n\t}\r\n\r\n\tpublic var x(get,set):Float;\r\n\tinline function get_x():Float{return this[0];}\r\n\tinline function set_x(v:Float):Float{\r\n\t\treturn this[0] = v;\r\n\t}\r\n\tpublic var y(get,set):Float;\r\n\tinline function get_y():Float{return this[1];}\r\n\tinline function set_y(v:Float):Float{\r\n\t\treturn this[1] = v;\r\n\t}\r\n}","package glmat;\r\n\r\nimport loka.util.Float32Array;\r\n\r\nabstract Vec3(Float32Array){\r\n\r\n\tinline public function new(?x:Float=0,?y:Float=0,?z:Float=0){\r\n\t\tthis = new Float32Array(3);\r\n\t    this[0] = x;\r\n\t    this[1] = y;\r\n\t    this[2] = z;\r\n\t}\r\n\r\n\tinline public function set(?x:Float=0,?y:Float=0,?z:Float=0){\r\n\t\tthis[0] = x;\r\n\t    this[1] = y;\r\n\t    this[2] = z;\r\n\t}\r\n\r\n\tpublic var x(get,set):Float;\r\n\tinline function get_x():Float{return this[0];}\r\n\tinline function set_x(v:Float):Float{\r\n\t\treturn this[0] = v;\r\n\t}\r\n\tpublic var y(get,set):Float;\r\n\tinline function get_y():Float{return this[1];}\r\n\tinline function set_y(v:Float):Float{\r\n\t\treturn this[1] = v;\r\n\t}\r\n\tpublic var z(get,set):Float;\r\n\tinline function get_z():Float{return this[2];}\r\n\tinline function set_z(v:Float):Float{\r\n\t\treturn this[2] = v;\r\n\t}\r\n\r\n\r\n\t//TODO check if that makes sense\r\n\t/**\r\n\t* Transforms the vec3 with a mat4.\r\n\t*\r\n\t* @param {vec3} out the receiving vector\r\n\t* @param {vec3} a the vector to transform\r\n\t* @param {mat4} m matrix to transform with\r\n\t* @returns {vec3} out\r\n\t*/\r\n\tinline public function transformMat4(out : Vec3, m : Mat4) : Vec3 {\r\n\t\tvar x = this[0];\r\n\t\tvar y = this[1];\r\n\t\tvar z = this[2];\r\n\t\tout.x = m[0] * x + m[4] * y + m[8] * z + m[12];\r\n\t\tout.y = m[1] * x + m[5] * y + m[9] * z + m[13];\r\n\t\tout.z = m[2] * x + m[6] * y + m[10] * z + m[14];\r\n\t\treturn out;\r\n\t}\r\n}","package glmat;\r\n\r\nimport loka.util.Float32Array;\r\n\r\nabstract Vec4(Float32Array){\r\n\r\n\tinline public function new(?x:Float=0,?y:Float=0,?z:Float=0, ?w:Float=0){\r\n\t\tthis = new Float32Array(4);\r\n\t    this[0] = x;\r\n\t    this[1] = y;\r\n\t    this[2] = z;\r\n\t    this[3] = w; //TODO w ? remove Vec from GLSL\r\n\t}\r\n\r\n\tpublic var x(get,set):Float;\r\n\tinline function get_x():Float{return this[0];}\r\n\tinline function set_x(v:Float):Float{\r\n\t\treturn this[0] = v;\r\n\t}\r\n\tpublic var y(get,set):Float;\r\n\tinline function get_y():Float{return this[1];}\r\n\tinline function set_y(v:Float):Float{\r\n\t\treturn this[1] = v;\r\n\t}\r\n\tpublic var z(get,set):Float;\r\n\tinline function get_z():Float{return this[2];}\r\n\tinline function set_z(v:Float):Float{\r\n\t\treturn this[2] = v;\r\n\t}\r\n\tpublic var w(get,set):Float;\r\n\tinline function get_w():Float{return this[3];}\r\n\tinline function set_w(v:Float):Float{\r\n\t\treturn this[3] = v;\r\n\t}\r\n\r\n\t/**\r\n\t* Transforms the vec4 with a mat4.\r\n\t*\r\n\t* @param {vec4} out the receiving vector\r\n\t* @param {vec4} a the vector to transform\r\n\t* @param {mat4} m matrix to transform with\r\n\t* @returns {vec4} out\r\n\t*/\r\n\tinline public function transformMat4(out : Vec4, m : Mat4) : Vec4 {\r\n\t\tvar x = this[0];\r\n\t\tvar y = this[1];\r\n\t\tvar z = this[2];\r\n\t\tvar w = this[3];\r\n\t\tout.x = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n\t\tout.y = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n\t\tout.z = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n\t\tout.w = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n\t\treturn out;\r\n\t}\r\n\r\n\t// @:arrayAccess public inline function get(i:Int) return this[i];\r\n\t// @:arrayAccess public inline function arrayWrite(i:Int, v:Float):Float {\r\n //    \tthis[i] = v;\r\n //    \treturn v;\r\n\t// }\r\n}","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n#if sys\n\nimport sys.net.Host;\nimport sys.net.Socket;\n\nprivate typedef AbstractSocket = {\n\tvar input(default,null) : haxe.io.Input;\n\tvar output(default,null) : haxe.io.Output;\n\tfunction connect( host : Host, port : Int ) : Void;\n\tfunction setTimeout( t : Float ) : Void;\n\tfunction write( str : String ) : Void;\n\tfunction close() : Void;\n\tfunction shutdown( read : Bool, write : Bool ) : Void;\n}\n\n#end\n\n/**\n\tThis class can be used to handle Http requests consistently across\n\tplatforms. There are two intended usages:\n\n\t- call haxe.Http.requestUrl(url) and receive the result as a String (not\n\tavailable on flash)\n\t- create a new haxe.Http(url), register your callbacks for onData, onError\n\tand onStatus, then call request().\n**/\nclass Http {\n\n\t/**\n\t\tThe url of `this` request. It is used only by the request() method and\n\t\tcan be changed in order to send the same request to different target\n\t\tUrls.\n\t**/\n\tpublic var url : String;\n\tpublic var responseData(default, null) : Null<String>;\n#if sys\n\tpublic var noShutdown : Bool;\n\tpublic var cnxTimeout : Float;\n\tpublic var responseHeaders : Map<String,String>;\n\tvar chunk_size : Null<Int>;\n\tvar chunk_buf : haxe.io.Bytes;\n\tvar file : { param : String, filename : String, io : haxe.io.Input, size : Int, mimeType : String };\n#elseif js\n\tpublic var async : Bool;\n#end\n\tvar postData : String;\n\tvar headers : List<{ header:String, value:String }>;\n\tvar params : List<{ param:String, value:String }>;\n\n\t#if sys\n\tpublic static var PROXY : { host : String, port : Int, auth : { user : String, pass : String } } = null;\n\t#end\n\n\t/**\n\t\tCreates a new Http instance with `url` as parameter.\n\n\t\tThis does not do a request until request() is called.\n\n\t\tIf `url` is null, the field url must be set to a value before making the\n\t\tcall to request(), or the result is unspecified.\n\n\t\t(Php) Https (SSL) connections are allowed only if the OpenSSL extension\n\t\tis enabled.\n\t**/\n\tpublic function new( url : String ) {\n\t\tthis.url = url;\n\t\theaders = new List<{ header:String, value:String }>();\n\t\tparams = new List<{ param:String, value:String }>();\n\n\t\t#if js\n\t\tasync = true;\n\t\t#elseif sys\n\t\tcnxTimeout = 10;\n\t\t#end\n\t\t#if php\n\t\tnoShutdown = ! untyped __call__('function_exists', 'stream_socket_shutdown');\n\t\t#end\n\t}\n\n\t/**\n\t\tSets the header identified as `header` to value `value`.\n\n\t\tIf `header` or `value` are null, the result is unspecified.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setHeader( header : String, value : String ):Http {\n\t\theaders = Lambda.filter(headers, function(h) return h.header != header);\n\t\theaders.push({ header:header, value:value });\n\t\treturn this;\n\t}\n\n\tpublic function addHeader( header : String, value : String ):Http {\n\t\theaders.push({ header:header, value:value });\n\t\treturn this;\n\t}\n\n\t/**\n\t\tSets the parameter identified as `param` to value `value`.\n\n\t\tIf `header` or `value` are null, the result is unspecified.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setParameter( param : String, value : String ):Http {\n\t\tparams = Lambda.filter(params, function(p) return p.param != param);\n\t\tparams.push({ param:param, value:value });\n\t\treturn this;\n\t}\n\n\tpublic function addParameter( param : String, value : String ):Http {\n\t\tparams.push({ param:param, value:value });\n\t\treturn this;\n\t}\n\n\t#if !flash8\n\t/**\n\t\tSets the post data of `this` Http request to `data`.\n\n\t\tThere can only be one post data per request. Subsequent calls overwrite\n\t\tthe previously set value.\n\n\t\tIf `data` is null, the post data is considered to be absent.\n\n\t\tThis method provides a fluent interface.\n\t**/\n\tpublic function setPostData( data : String ):Http {\n\t\tpostData = data;\n\t\treturn this;\n\t}\n\t#end\n\n\t#if (js || flash9)\n\n\t#if js\n\tvar req:js.html.XMLHttpRequest;\n\t#elseif flash9\n\tvar req:flash.net.URLLoader;\n\t#end\n\n\t/**\n\t\tCancels `this` Http request if `request` has been called and a response\n\t\thas not yet been received.\n\t**/\n\tpublic function cancel()\n\t{\n\t\tif (req == null) return;\n\t\t#if js\n\t\treq.abort();\n\t\t#elseif flash9\n\t\treq.close();\n\t\t#end\n\t\treq = null;\n\t}\n\t#end\n\n\t/**\n\t\tSends `this` Http request to the Url specified by `this.url`.\n\n\t\tIf `post` is true, the request is sent as POST request, otherwise it is\n\t\tsent as GET request.\n\n\t\tDepending on the outcome of the request, this method calls the\n\t\tonStatus(), onError() or onData() callback functions.\n\n\t\tIf `this.url` is null, the result is unspecified.\n\n\t\tIf `this.url` is an invalid or inaccessible Url, the onError() callback\n\t\tfunction is called.\n\n\t\t(Js) If `this.async` is false, the callback functions are called before\n\t\tthis method returns.\n\t**/\n\tpublic function request( ?post : Bool ) : Void {\n\t\tvar me = this;\n\t#if js\n\t\tme.responseData = null;\n\t\tvar r = req = js.Browser.createXMLHttpRequest();\n\t\tvar onreadystatechange = function(_) {\n\t\t\tif( r.readyState != 4 )\n\t\t\t\treturn;\n\t\t\tvar s = try r.status catch( e : Dynamic ) null;\n\t\t\tif ( s != null ) {\n\t\t\t\t// If the request is local and we have data: assume a success (jQuery approach):\n\t\t\t\tvar protocol = js.Browser.location.protocol.toLowerCase();\n\t\t\t\tvar rlocalProtocol = ~/^(?:about|app|app-storage|.+-extension|file|res|widget):$/;\n\t\t\t\tvar isLocal = rlocalProtocol.match( protocol );\n\t\t\t\tif ( isLocal ) {\n\t\t\t\t\ts = r.responseText != null ? 200 : 404;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( s == untyped __js__(\"undefined\") )\n\t\t\t\ts = null;\n\t\t\tif( s != null )\n\t\t\t\tme.onStatus(s);\n\t\t\tif( s != null && s >= 200 && s < 400 ) {\n\t\t\t\tme.req = null;\n\t\t\t\tme.onData(me.responseData = r.responseText);\n\t\t\t}\n\t\t\telse if ( s == null ) {\n\t\t\t\tme.req = null;\n\t\t\t\tme.onError(\"Failed to connect or resolve host\");\n\t\t\t}\n\t\t\telse switch( s ) {\n\t\t\tcase 12029:\n\t\t\t\tme.req = null;\n\t\t\t\tme.onError(\"Failed to connect to host\");\n\t\t\tcase 12007:\n\t\t\t\tme.req = null;\n\t\t\t\tme.onError(\"Unknown host\");\n\t\t\tdefault:\n\t\t\t\tme.req = null;\n\t\t\t\tme.responseData = r.responseText;\n\t\t\t\tme.onError(\"Http Error #\"+r.status);\n\t\t\t}\n\t\t};\n\t\tif( async )\n\t\t\tr.onreadystatechange = onreadystatechange;\n\t\tvar uri = postData;\n\t\tif( uri != null )\n\t\t\tpost = true;\n\t\telse for( p in params ) {\n\t\t\tif( uri == null )\n\t\t\t\turi = \"\";\n\t\t\telse\n\t\t\t\turi += \"&\";\n\t\t\turi += StringTools.urlEncode(p.param)+\"=\"+StringTools.urlEncode(p.value);\n\t\t}\n\t\ttry {\n\t\t\tif( post )\n\t\t\t\tr.open(\"POST\",url,async);\n\t\t\telse if( uri != null ) {\n\t\t\t\tvar question = url.split(\"?\").length <= 1;\n\t\t\t\tr.open(\"GET\",url+(if( question ) \"?\" else \"&\")+uri,async);\n\t\t\t\turi = null;\n\t\t\t} else\n\t\t\t\tr.open(\"GET\",url,async);\n\t\t} catch( e : Dynamic ) {\n\t\t\tme.req = null;\n\t\t\tonError(e.toString());\n\t\t\treturn;\n\t\t}\n\t\tif( !Lambda.exists(headers, function(h) return h.header == \"Content-Type\") && post && postData == null )\n\t\t\tr.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\");\n\n\t\tfor( h in headers )\n\t\t\tr.setRequestHeader(h.header,h.value);\n\t\tr.send(uri);\n\t\tif( !async )\n\t\t\tonreadystatechange(null);\n\t#elseif flash9\n\t\tme.responseData = null;\n\t\tvar loader = req = new flash.net.URLLoader();\n\t\tloader.addEventListener( \"complete\", function(e) {\n\t\t\tme.req = null;\n\t\t\tme.responseData = loader.data;\n\t\t\tme.onData( loader.data );\n\t\t});\n\t\tloader.addEventListener( \"httpStatus\", function(e:flash.events.HTTPStatusEvent){\n\t\t\t// on Firefox 1.5, Flash calls onHTTPStatus with 0 (!??)\n\t\t\tif( e.status != 0 )\n\t\t\t\tme.onStatus( e.status );\n\t\t});\n\t\tloader.addEventListener( \"ioError\", function(e:flash.events.IOErrorEvent){\n\t\t\tme.req = null;\n\t\t\tme.responseData = loader.data;\n\t\t\tme.onError(e.text);\n\t\t});\n\t\tloader.addEventListener( \"securityError\", function(e:flash.events.SecurityErrorEvent){\n\t\t\tme.req = null;\n\t\t\tme.onError(e.text);\n\t\t});\n\n\t\t// headers\n\t\tvar param = false;\n\t\tvar vars = new flash.net.URLVariables();\n\t\tfor( p in params ){\n\t\t\tparam = true;\n\t\t\tReflect.setField(vars,p.param,p.value);\n\t\t}\n\t\tvar small_url = url;\n\t\tif( param && !post ){\n\t\t\tvar k = url.split(\"?\");\n\t\t\tif( k.length > 1 ) {\n\t\t\t\tsmall_url = k.shift();\n\t\t\t\tvars.decode(k.join(\"?\"));\n\t\t\t}\n\t\t}\n\t\t// Bug in flash player 9 ???\n\t\tvar bug = small_url.split(\"xxx\");\n\n\t\tvar request = new flash.net.URLRequest( small_url );\n\t\tfor( h in headers )\n\t\t\trequest.requestHeaders.push( new flash.net.URLRequestHeader(h.header,h.value) );\n\n\t\tif( postData != null ) {\n\t\t\trequest.data = postData;\n\t\t\trequest.method = \"POST\";\n\t\t} else {\n\t\t\trequest.data = vars;\n\t\t\trequest.method = if( post ) \"POST\" else \"GET\";\n\t\t}\n\n\t\ttry {\n\t\t\tloader.load( request );\n\t\t}catch( e : Dynamic ){\n\t\t\tme.req = null;\n\t\t\tonError(\"Exception: \"+Std.string(e));\n\t\t}\n\t#elseif flash\n\t\tme.responseData = null;\n\t\tvar r = new flash.LoadVars();\n\t\t// on Firefox 1.5, onData is not called if host/port invalid (!)\n\t\tr.onData = function(data) {\n\t\t\tif( data == null ) {\n\t\t\t\tme.onError(\"Failed to retrieve url\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tme.responseData = data;\n\t\t\tme.onData(data);\n\t\t};\n\t\t#if flash8\n\t\tr.onHTTPStatus = function(status) {\n\t\t\t// on Firefox 1.5, Flash calls onHTTPStatus with 0 (!??)\n\t\t\tif( status != 0 )\n\t\t\t\tme.onStatus(status);\n\t\t};\n\t\tuntyped ASSetPropFlags(r,\"onHTTPStatus\",7);\n\t\t#end\n\t\tuntyped ASSetPropFlags(r,\"onData\",7);\n\t\tfor( h in headers )\n\t\t\tr.addRequestHeader(h.header,h.value);\n\t\tvar param = false;\n\t\tfor( p in params ) {\n\t\t\tparam = true;\n\t\t\tReflect.setField(r,p.param,p.value);\n\t\t}\n\t\tvar small_url = url;\n\t\tif( param && !post ) {\n\t\t\tvar k = url.split(\"?\");\n\t\t\tif( k.length > 1 ) {\n\t\t\t\tsmall_url = k.shift();\n\t\t\t\tr.decode(k.join(\"?\"));\n\t\t\t}\n\t\t}\n\t\tif( !r.sendAndLoad(small_url,r,if( param ) { if( post ) \"POST\" else \"GET\"; } else null) )\n\t\t\tonError(\"Failed to initialize Connection\");\n\t#elseif sys\n\t\tvar me = this;\n\t\tvar output = new haxe.io.BytesOutput();\n\t\tvar old = onError;\n\t\tvar err = false;\n\t\tonError = function(e) {\n\t\t\t#if neko\n\t\t\tme.responseData = neko.Lib.stringReference(output.getBytes());\n\t\t\t#else\n\t\t\tme.responseData = output.getBytes().toString();\n\t\t\t#end\n\t\t\terr = true;\n\t\t\t// Resetting back onError before calling it allows for a second \"retry\" request to be sent without onError being wrapped twice\n\t\t\tonError = old;\n\t\t\tonError(e);\n\t\t}\n\t\tcustomRequest(post,output);\n\t\tif( !err )\n\t\t#if neko\n\t\t\tme.onData(me.responseData = neko.Lib.stringReference(output.getBytes()));\n\t\t#else\n\t\t\tme.onData(me.responseData = output.getBytes().toString());\n\t\t#end\n\t#end\n\t}\n\n#if sys\n\n\t/**\n      Note: Deprecated in 4.0\n\t **/\n\t@:noCompletion\n\tinline public function fileTransfert( argname : String, filename : String, file : haxe.io.Input, size : Int, mimeType = \"application/octet-stream\" ) {\n\t    fileTransfer(argname, filename, file, size, mimeType);\n    }\n\n\tpublic function fileTransfer( argname : String, filename : String, file : haxe.io.Input, size : Int, mimeType = \"application/octet-stream\" ) {\n\t\tthis.file = { param : argname, filename : filename, io : file, size : size, mimeType : mimeType };\n\t}\n\n\tpublic function customRequest( post : Bool, api : haxe.io.Output, ?sock : AbstractSocket, ?method : String  ) {\n\t\tthis.responseData = null;\n\t\tvar url_regexp = ~/^(https?:\\/\\/)?([a-zA-Z\\.0-9_-]+)(:[0-9]+)?(.*)$/;\n\t\tif( !url_regexp.match(url) ) {\n\t\t\tonError(\"Invalid URL\");\n\t\t\treturn;\n\t\t}\n\t\tvar secure = (url_regexp.matched(1) == \"https://\");\n\t\tif( sock == null ) {\n\t\t\tif( secure ) {\n\t\t\t\t#if php\n\t\t\t\tsock = new php.net.SslSocket();\n\t\t\t\t#elseif java\n\t\t\t\tsock = new java.net.SslSocket();\n\t\t\t\t#elseif hxssl\n\t\t\t\tsock = new neko.tls.Socket();\n\t\t\t\t#else\n\t\t\t\tthrow \"Https is only supported with -lib hxssl\";\n\t\t\t\t#end\n\t\t\t} else\n\t\t\t\tsock = new Socket();\n\t\t}\n\t\tvar host = url_regexp.matched(2);\n\t\tvar portString = url_regexp.matched(3);\n\t\tvar request = url_regexp.matched(4);\n\t\tif( request == \"\" )\n\t\t\trequest = \"/\";\n\t\tvar port = if ( portString == null || portString == \"\" ) secure ? 443 : 80 else Std.parseInt(portString.substr(1, portString.length - 1));\n\t\tvar data;\n\n\t\tvar multipart = (file != null);\n\t\tvar boundary = null;\n\t\tvar uri = null;\n\t\tif( multipart ) {\n\t\t\tpost = true;\n\t\t\tboundary = Std.string(Std.random(1000))+Std.string(Std.random(1000))+Std.string(Std.random(1000))+Std.string(Std.random(1000));\n\t\t\twhile( boundary.length < 38 )\n\t\t\t\tboundary = \"-\" + boundary;\n\t\t\tvar b = new StringBuf();\n\t\t\tfor( p in params ) {\n\t\t\t\tb.add(\"--\");\n\t\t\t\tb.add(boundary);\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t\tb.add('Content-Disposition: form-data; name=\"');\n\t\t\t\tb.add(p.param);\n\t\t\t\tb.add('\"');\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t\tb.add(p.value);\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t}\n\t\t\tb.add(\"--\");\n\t\t\tb.add(boundary);\n\t\t\tb.add(\"\\r\\n\");\n\t\t\tb.add('Content-Disposition: form-data; name=\"');\n\t\t\tb.add(file.param);\n\t\t\tb.add('\"; filename=\"');\n\t\t\tb.add(file.filename);\n\t\t\tb.add('\"');\n\t\t\tb.add(\"\\r\\n\");\n\t\t\tb.add(\"Content-Type: \"+file.mimeType+\"\\r\\n\"+\"\\r\\n\");\n\t\t\turi = b.toString();\n\t\t} else {\n\t\t\tfor( p in params ) {\n\t\t\t\tif( uri == null )\n\t\t\t\t\turi = \"\";\n\t\t\t\telse\n\t\t\t\t\turi += \"&\";\n\t\t\t\turi += StringTools.urlEncode(p.param)+\"=\"+StringTools.urlEncode(p.value);\n\t\t\t}\n\t\t}\n\n\t\tvar b = new StringBuf();\n\t\tif( method != null ) {\n\t\t\tb.add(method);\n\t\t\tb.add(\" \");\n\t\t} else if( post )\n\t\t\tb.add(\"POST \");\n\t\telse\n\t\t\tb.add(\"GET \");\n\n\t\tif( Http.PROXY != null ) {\n\t\t\tb.add(\"http://\");\n\t\t\tb.add(host);\n\t\t\tif( port != 80 ) {\n\t\t\t\tb.add(\":\");\n\t\t\t\tb.add(port);\n\t\t\t}\n\t\t}\n\t\tb.add(request);\n\n\t\tif( !post && uri != null ) {\n\t\t\tif( request.indexOf(\"?\",0) >= 0 )\n\t\t\t\tb.add(\"&\");\n\t\t\telse\n\t\t\t\tb.add(\"?\");\n\t\t\tb.add(uri);\n\t\t}\n\t\tb.add(\" HTTP/1.1\\r\\nHost: \"+host+\"\\r\\n\");\n\t\tif( postData != null )\n\t\t\tb.add(\"Content-Length: \"+postData.length+\"\\r\\n\");\n\t\telse if( post && uri != null ) {\n\t\t\tif( multipart || !Lambda.exists(headers, function(h) return h.header == \"Content-Type\") ) {\n\t\t\t\tb.add(\"Content-Type: \");\n\t\t\t\tif( multipart ) {\n\t\t\t\t\tb.add(\"multipart/form-data\");\n\t\t\t\t\tb.add(\"; boundary=\");\n\t\t\t\t\tb.add(boundary);\n\t\t\t\t} else\n\t\t\t\t\tb.add(\"application/x-www-form-urlencoded\");\n\t\t\t\tb.add(\"\\r\\n\");\n\t\t\t}\n\t\t\tif( multipart )\n\t\t\t\tb.add(\"Content-Length: \"+(uri.length+file.size+boundary.length+6)+\"\\r\\n\");\n\t\t\telse\n\t\t\t\tb.add(\"Content-Length: \"+uri.length+\"\\r\\n\");\n\t\t}\n\t\tfor( h in headers ) {\n\t\t\tb.add(h.header);\n\t\t\tb.add(\": \");\n\t\t\tb.add(h.value);\n\t\t\tb.add(\"\\r\\n\");\n\t\t}\n\t\tb.add(\"\\r\\n\");\n\t\tif( postData != null)\n\t\t\tb.add(postData);\n\t\telse if( post && uri != null )\n\t\t\tb.add(uri);\n\t\ttry {\n\t\t\tif( Http.PROXY != null )\n\t\t\t\tsock.connect(new Host(Http.PROXY.host),Http.PROXY.port);\n\t\t\telse\n\t\t\t\tsock.connect(new Host(host),port);\n\t\t\tsock.write(b.toString());\n\t\t\tif( multipart ) {\n\t\t\t\tvar bufsize = 4096;\n\t\t\t\tvar buf = haxe.io.Bytes.alloc(bufsize);\n\t\t\t\twhile( file.size > 0 ) {\n\t\t\t\t\tvar size = if( file.size > bufsize ) bufsize else file.size;\n\t\t\t\t\tvar len = 0;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlen = file.io.readBytes(buf,0,size);\n\t\t\t\t\t} catch( e : haxe.io.Eof ) break;\n\t\t\t\t\tsock.output.writeFullBytes(buf,0,len);\n\t\t\t\t\tfile.size -= len;\n\t\t\t\t}\n\t\t\t\tsock.write(\"\\r\\n\");\n\t\t\t\tsock.write(\"--\");\n\t\t\t\tsock.write(boundary);\n\t\t\t\tsock.write(\"--\");\n\t\t\t}\n\t\t\treadHttpResponse(api,sock);\n\t\t\tsock.close();\n\t\t} catch( e : Dynamic ) {\n\t\t\ttry sock.close() catch( e : Dynamic ) { };\n\t\t\tonError(Std.string(e));\n\t\t}\n\t}\n\n\tfunction readHttpResponse( api : haxe.io.Output, sock : AbstractSocket ) {\n\t\t// READ the HTTP header (until \\r\\n\\r\\n)\n\t\tvar b = new haxe.io.BytesBuffer();\n\t\tvar k = 4;\n\t\tvar s = haxe.io.Bytes.alloc(4);\n\t\tsock.setTimeout(cnxTimeout);\n\t\twhile( true ) {\n\t\t\tvar p = sock.input.readBytes(s,0,k);\n\t\t\twhile( p != k )\n\t\t\t\tp += sock.input.readBytes(s,p,k - p);\n\t\t\tb.addBytes(s,0,k);\n\t\t\tswitch( k ) {\n\t\t\tcase 1:\n\t\t\t\tvar c = s.get(0);\n\t\t\t\tif( c == 10 )\n\t\t\t\t\tbreak;\n\t\t\t\tif( c == 13 )\n\t\t\t\t\tk = 3;\n\t\t\t\telse\n\t\t\t\t\tk = 4;\n\t\t\tcase 2:\n\t\t\t\tvar c = s.get(1);\n\t\t\t\tif( c == 10 ) {\n\t\t\t\t\tif( s.get(0) == 13 )\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tk = 4;\n\t\t\t\t} else if( c == 13 )\n\t\t\t\t\tk = 3;\n\t\t\t\telse\n\t\t\t\t\tk = 4;\n\t\t\tcase 3:\n\t\t\t\tvar c = s.get(2);\n\t\t\t\tif( c == 10 ) {\n\t\t\t\t\tif( s.get(1) != 13 )\n\t\t\t\t\t\tk = 4;\n\t\t\t\t\telse if( s.get(0) != 10 )\n\t\t\t\t\t\tk = 2;\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t\t} else if( c == 13 ) {\n\t\t\t\t\tif( s.get(1) != 10 || s.get(0) != 13 )\n\t\t\t\t\t\tk = 1;\n\t\t\t\t\telse\n\t\t\t\t\t\tk = 3;\n\t\t\t\t} else\n\t\t\t\t\tk = 4;\n\t\t\tcase 4:\n\t\t\t\tvar c = s.get(3);\n\t\t\t\tif( c == 10 ) {\n\t\t\t\t\tif( s.get(2) != 13 )\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\telse if( s.get(1) != 10 || s.get(0) != 13 )\n\t\t\t\t\t\tk = 2;\n\t\t\t\t\telse\n\t\t\t\t\t\tbreak;\n\t\t\t\t} else if( c == 13 ) {\n\t\t\t\t\tif( s.get(2) != 10 || s.get(1) != 13 )\n\t\t\t\t\t\tk = 3;\n\t\t\t\t\telse\n\t\t\t\t\t\tk = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t#if neko\n\t\tvar headers = neko.Lib.stringReference(b.getBytes()).split(\"\\r\\n\");\n\t\t#else\n\t\tvar headers = b.getBytes().toString().split(\"\\r\\n\");\n\t\t#end\n\t\tvar response = headers.shift();\n\t\tvar rp = response.split(\" \");\n\t\tvar status = Std.parseInt(rp[1]);\n\t\tif( status == 0 || status == null )\n\t\t\tthrow \"Response status error\";\n\n\t\t// remove the two lasts \\r\\n\\r\\n\n\t\theaders.pop();\n\t\theaders.pop();\n\t\tresponseHeaders = new haxe.ds.StringMap();\n\t\tvar size = null;\n\t\tvar chunked = false;\n\t\tfor( hline in headers ) {\n\t\t\tvar a = hline.split(\": \");\n\t\t\tvar hname = a.shift();\n\t\t\tvar hval = if( a.length == 1 ) a[0] else a.join(\": \");\n\t\t\thval = StringTools.ltrim( StringTools.rtrim( hval ) );\n\t\t\tresponseHeaders.set(hname, hval);\n\t\t\tswitch(hname.toLowerCase())\n\t\t\t{\n\t\t\t\tcase \"content-length\":\n\t\t\t\t\tsize = Std.parseInt(hval);\n\t\t\t\tcase \"transfer-encoding\":\n\t\t\t\t\tchunked = (hval.toLowerCase() == \"chunked\");\n\t\t\t}\n\t\t}\n\n\t\tonStatus(status);\n\n\t\tvar chunk_re = ~/^([0-9A-Fa-f]+)[ ]*\\r\\n/m;\n\t\tchunk_size = null;\n\t\tchunk_buf = null;\n\n\t\tvar bufsize = 1024;\n\t\tvar buf = haxe.io.Bytes.alloc(bufsize);\n\t\tif( size == null ) {\n\t\t\tif( !noShutdown )\n\t\t\t\tsock.shutdown(false,true);\n\t\t\ttry {\n\t\t\t\twhile( true ) {\n\t\t\t\t\tvar len = sock.input.readBytes(buf,0,bufsize);\n\t\t\t\t\tif( chunked ) {\n\t\t\t\t\t\tif( !readChunk(chunk_re,api,buf,len) )\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else\n\t\t\t\t\t\tapi.writeBytes(buf,0,len);\n\t\t\t\t}\n\t\t\t} catch( e : haxe.io.Eof ) {\n\t\t\t}\n\t\t} else {\n\t\t\tapi.prepare(size);\n\t\t\ttry {\n\t\t\t\twhile( size > 0 ) {\n\t\t\t\t\tvar len = sock.input.readBytes(buf,0,if( size > bufsize ) bufsize else size);\n\t\t\t\t\tif( chunked ) {\n\t\t\t\t\t\tif( !readChunk(chunk_re,api,buf,len) )\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else\n\t\t\t\t\t\tapi.writeBytes(buf,0,len);\n\t\t\t\t\tsize -= len;\n\t\t\t\t}\n\t\t\t} catch( e : haxe.io.Eof ) {\n\t\t\t\tthrow \"Transfer aborted\";\n\t\t\t}\n\t\t}\n\t\tif( chunked && (chunk_size != null || chunk_buf != null) )\n\t\t\tthrow \"Invalid chunk\";\n\t\tif( status < 200 || status >= 400 )\n\t\t\tthrow \"Http Error #\"+status;\n\t\tapi.close();\n\t}\n\n\tfunction readChunk(chunk_re : EReg, api : haxe.io.Output, buf : haxe.io.Bytes, len ) {\n\t\tif( chunk_size == null ) {\n\t\t\tif( chunk_buf != null ) {\n\t\t\t\tvar b = new haxe.io.BytesBuffer();\n\t\t\t\tb.add(chunk_buf);\n\t\t\t\tb.addBytes(buf,0,len);\n\t\t\t\tbuf = b.getBytes();\n\t\t\t\tlen += chunk_buf.length;\n\t\t\t\tchunk_buf = null;\n\t\t\t}\n\t\t\t#if neko\n\t\t\tif( chunk_re.match(neko.Lib.stringReference(buf)) ) {\n\t\t\t#else\n\t\t\tif( chunk_re.match(buf.toString()) ) {\n\t\t\t#end\n\t\t\t\tvar p = chunk_re.matchedPos();\n\t\t\t\tif( p.len <= len ) {\n\t\t\t\t\tvar cstr = chunk_re.matched(1);\n\t\t\t\t\tchunk_size = Std.parseInt(\"0x\"+cstr);\n\t\t\t\t\tif( cstr == \"0\" ) {\n\t\t\t\t\t\tchunk_size = null;\n\t\t\t\t\t\tchunk_buf = null;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tlen -= p.len;\n\t\t\t\t\treturn readChunk(chunk_re,api,buf.sub(p.len,len),len);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// prevent buffer accumulation\n\t\t\tif( len > 10 ) {\n\t\t\t\tonError(\"Invalid chunk\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tchunk_buf = buf.sub(0,len);\n\t\t\treturn true;\n\t\t}\n\t\tif( chunk_size > len ) {\n\t\t\tchunk_size -= len;\n\t\t\tapi.writeBytes(buf,0,len);\n\t\t\treturn true;\n\t\t}\n\t\tvar end = chunk_size + 2;\n\t\tif( len >= end ) {\n\t\t\tif( chunk_size > 0 )\n\t\t\t\tapi.writeBytes(buf,0,chunk_size);\n\t\t\tlen -= end;\n\t\t\tchunk_size = null;\n\t\t\tif( len == 0 )\n\t\t\t\treturn true;\n\t\t\treturn readChunk(chunk_re,api,buf.sub(end,len),len);\n\t\t}\n\t\tif( chunk_size > 0 )\n\t\t\tapi.writeBytes(buf,0,chunk_size);\n\t\tchunk_size -= len;\n\t\treturn true;\n\t}\n\n#end\n\n\t/**\n\t\tThis method is called upon a successful request, with `data` containing\n\t\tthe result String.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onData = function(data) { // handle result }`\n\t**/\n\tpublic dynamic function onData( data : String ) {\n\t}\n\n\t/**\n\t\tThis method is called upon a request error, with `msg` containing the\n\t\terror description.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onError = function(msg) { // handle error }`\n\t**/\n\tpublic dynamic function onError( msg : String ) {\n\t}\n\n\t/**\n\t\tThis method is called upon a Http status change, with `status` being the\n\t\tnew status.\n\n\t\tThe intended usage is to bind it to a custom function:\n\t\t`httpInstance.onStatus = function(status) { // handle status }`\n\t**/\n\tpublic dynamic function onStatus( status : Int ) {\n\t}\n\n#if !flash\n\t/**\n\t\tMakes a synchronous request to `url`.\n\n\t\tThis creates a new Http instance and makes a GET request by calling its\n\t\trequest(false) method.\n\n\t\tIf `url` is null, the result is unspecified.\n\t**/\n\tpublic static function requestUrl( url : String ) : String {\n\t\tvar h = new Http(url);\n\t#if js\n\t\th.async = false;\n\t#end\n\t\tvar r = null;\n\t\th.onData = function(d){\n\t\t\tr = d;\n\t\t}\n\t\th.onError = function(e){\n\t\t\tthrow e;\n\t\t}\n\t\th.request(false);\n\t\treturn r;\n\t}\n#end\n\n}\n","/*\n * Copyright (C)2005-2013 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe;\n\n/**\n\tThe Timer class allows you to create asynchronous timers on platforms that\n\tsupport events.\n\n\tThe intended usage is to create an instance of the Timer class with a given\n\tinterval, set its run() method to a custom function to be invoked and\n\teventually call stop() to stop the Timer.\n\n\tNote that a running Timer may or may not prevent the program to exit\n\tautomatically when main() returns.\n\n\tIt is also possible to extend this class and override its run() method in\n\tthe child class.\n**/\nclass Timer {\n\t#if (flash || js || java || python)\n\n\t#if (flash || js)\n\t\tprivate var id : Null<Int>;\n\t#elseif java\n\t\tprivate var timer : java.util.Timer;\n\t\tprivate var task : java.util.TimerTask;\n\t#end\n\n\t/**\n\t\tCreates a new timer that will run every `time_ms` milliseconds.\n\n\t\tAfter creating the Timer instance, it calls `this].run` repeatedly,\n\t\twith delays of `time_ms` milliseconds, until `this.stop` is called.\n\n\t\tThe first invocation occurs after `time_ms` milliseconds, not\n\t\timmediately.\n\n\t\tThe accuracy of this may be platform-dependent.\n\t**/\n\tpublic function new( time_ms : Int ){\n\t\t#if flash9\n\t\t\tvar me = this;\n\t\t\tid = untyped __global__[\"flash.utils.setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif flash\n\t\t\tvar me = this;\n\t\t\tid = untyped _global[\"setInterval\"](function() { me.run(); },time_ms);\n\t\t#elseif js\n\t\t\tvar me = this;\n\t\t\tid = untyped setInterval(function() me.run(),time_ms);\n\t\t#elseif java\n\t\t\ttimer = new java.util.Timer();\n\t\t\ttimer.scheduleAtFixedRate(task = new TimerTask(this), haxe.Int64.ofInt(time_ms), haxe.Int64.ofInt(time_ms));\n\t\t#end\n\t}\n\n\t/**\n\t\tStops `this` Timer.\n\n\t\tAfter calling this method, no additional invocations of `this.run`\n\t\twill occur.\n\n\t\tIt is not possible to restart `this` Timer once stopped.\n\t**/\n\tpublic function stop() {\n\t\t#if (flash || js)\n\t\t\tif( id == null )\n\t\t\t\treturn;\n\t\t\t#if flash9\n\t\t\t\tuntyped __global__[\"flash.utils.clearInterval\"](id);\n\t\t\t#elseif flash\n\t\t\t\tuntyped _global[\"clearInterval\"](id);\n\t\t\t#elseif js\n\t\t\t\tuntyped clearInterval(id);\n\t\t\t#end\n\t\t\tid = null;\n\t\t#elseif java\n\t\t\ttimer.cancel();\n\t\t\ttimer = null;\n\t\t\ttask = null;\n\t\t#end\n\t}\n\n\t/**\n\t\tThis method is invoked repeatedly on `this` Timer.\n\n\t\tIt can be overridden in a subclass, or rebound directly to a custom\n\t\tfunction:\n\t\t\tvar timer = new haxe.Timer(1000); // 1000ms delay\n\t\t\ttimer.run = function() { ... }\n\n\t\tOnce bound, it can still be rebound to different functions until `this`\n\t\tTimer is stopped through a call to `this.stop`.\n\t**/\n\tpublic dynamic function run() {\n\n\t}\n\n\t/**\n\t\tInvokes `f` after `time_ms` milliseconds.\n\n\t\tThis is a convenience function for creating a new Timer instance with\n\t\t`time_ms` as argument, binding its run() method to `f` and then stopping\n\t\t`this` Timer upon the first invocation.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function delay( f : Void -> Void, time_ms : Int ) {\n\t\tvar t = new haxe.Timer(time_ms);\n\t\tt.run = function() {\n\t\t\tt.stop();\n\t\t\tf();\n\t\t};\n\t\treturn t;\n\t}\n\n\t#end\n\n\t/**\n\t\tMeasures the time it takes to execute `f`, in seconds with fractions.\n\n\t\tThis is a convenience function for calculating the difference between\n\t\tTimer.stamp() before and after the invocation of `f`.\n\n\t\tThe difference is passed as argument to Log.trace(), with \"s\" appended\n\t\tto denote the unit. The optional `pos` argument is passed through.\n\n\t\tIf `f` is null, the result is unspecified.\n\t**/\n\tpublic static function measure<T>( f : Void -> T, ?pos : PosInfos ) : T {\n\t\tvar t0 = stamp();\n\t\tvar r = f();\n\t\tLog.trace((stamp() - t0) + \"s\", pos);\n\t\treturn r;\n\t}\n\n\t/**\n\t\tReturns a timestamp, in seconds with fractions.\n\n\t\tThe value itself might differ depending on platforms, only differences\n\t\tbetween two values make sense.\n\t**/\n\tpublic static function stamp() : Float {\n\t\t#if flash\n\t\t\treturn flash.Lib.getTimer() / 1000;\n\t\t#elseif (neko || php)\n\t\t\treturn Sys.time();\n\t\t#elseif js\n\t\t\treturn Date.now().getTime() / 1000;\n\t\t#elseif cpp\n\t\t\treturn untyped __global__.__time_stamp();\n\t\t#elseif sys\n\t\t\treturn Sys.time();\n\t\t#else\n\t\t\treturn 0;\n\t\t#end\n\t}\n\n}\n\n#if java\n@:nativeGen\nprivate class TimerTask extends java.util.TimerTask {\n\tvar timer:Timer;\n\tpublic function new(timer:Timer):Void {\n\t\tsuper();\n\t\tthis.timer = timer;\n\t}\n\n\t@:overload override public function run():Void {\n\t\ttimer.run();\n\t}\n}\n#end\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage haxe.ds;\n\nprivate class StringMapIterator<T> {\n\tvar map : StringMap<T>;\n\tvar keys : Array<String>;\n\tvar index : Int;\n\tvar count : Int;\n\tpublic inline function new(map:StringMap<T>, keys:Array<String>) {\n\t\tthis.map = map;\n\t\tthis.keys = keys;\n\t\tthis.index = 0;\n\t\tthis.count = keys.length;\n\t}\n\tpublic inline function hasNext() {\n\t\treturn index < count;\n\t}\n\tpublic inline function next() {\n\t\treturn map.get(keys[index++]);\n\t}\n}\n\n@:coreApi class StringMap<T> implements haxe.Constraints.IMap<String,T> {\n\n\tprivate var h : Dynamic;\n\tprivate var rh : Dynamic;\n\n\tpublic inline function new() : Void {\n\t\th = {};\n\t}\n\n\tinline function isReserved(key:String) : Bool {\n\t\treturn untyped __js__(\"__map_reserved\")[key] != null;\n\t}\n\n\tpublic inline function set( key : String, value : T ) : Void {\n\t\tif( isReserved(key) )\n\t\t\tsetReserved(key, value);\n\t\telse\n\t\t\th[cast key] = value;\n\t}\n\n\tpublic inline function get( key : String ) : Null<T> {\n\t\tif( isReserved(key) )\n\t\t\treturn getReserved(key);\n\t\treturn h[cast key];\n\t}\n\n\tpublic inline function exists( key : String ) : Bool {\n\t\tif( isReserved(key) )\n\t\t\treturn existsReserved(key);\n\t\treturn h.hasOwnProperty(key);\n\t}\n\n\tfunction setReserved( key : String, value : T ) : Void {\n\t\tif( rh == null ) rh = {};\n\t\trh[cast \"$\"+key] = value;\n\t}\n\n\tfunction getReserved( key : String ) : Null<T> {\n\t\treturn rh == null ? null : rh[cast \"$\"+key];\n\t}\n\n\tfunction existsReserved( key : String ) : Bool {\n\t\tif( rh == null ) return false;\n\t\treturn untyped rh.hasOwnProperty(\"$\"+key);\n\t}\n\n\tpublic function remove( key : String ) : Bool {\n\t\tif( isReserved(key) ) {\n\t\t\tkey = \"$\" + key;\n\t\t\tif( rh == null || !rh.hasOwnProperty(key) ) return false;\n\t\t\tuntyped __js__(\"delete\")(rh[key]);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tif( !h.hasOwnProperty(key) )\n\t\t\t\treturn false;\n\t\t\tuntyped __js__(\"delete\")(h[key]);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tpublic function keys() : Iterator<String> {\n\t\treturn arrayKeys().iterator();\n\t}\n\t\n\tfunction arrayKeys() : Array<String> {\n\t\tvar out = [];\n\t\tuntyped {\n\t\t\t__js__(\"for( var key in this.h ) {\");\n\t\t\t\tif( h.hasOwnProperty(key) )\n\t\t\t\t\tout.push(key);\n\t\t\t__js__(\"}\");\n\t\t}\n\t\tif( rh != null ) untyped {\n\t\t\t__js__(\"for( var key in this.rh ) {\");\n\t\t\t\tif( key.charCodeAt(0) == \"$\".code )\n\t\t\t\t\tout.push(key.substr(1));\n\t\t\t__js__(\"}\");\n\t\t}\n\t\treturn out;\n\t}\n\n\tpublic inline function iterator() : Iterator<T> {\n\t\treturn new StringMapIterator(this, arrayKeys());\n\t}\n\n\tpublic function toString() : String {\n\t\tvar s = new StringBuf();\n\t\ts.add(\"{\");\n\t\tvar keys = arrayKeys();\n\t\tfor( i in 0...keys.length ) {\n\t\t\tvar k = keys[i];\n\t\t\ts.add(k);\n\t\t\ts.add(\" => \");\n\t\t\ts.add(Std.string(get(k)));\n\t\t\tif( i < keys.length )\n\t\t\t\ts.add(\", \");\n\t\t}\n\t\ts.add(\"}\");\n\t\treturn s.toString();\n\t}\n\n\tstatic function __init__() : Void {\n\t\tuntyped __js__(\"var __map_reserved = {}\");\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\n@:dox(hide)\nclass Boot {\n\n\tprivate static function __unhtml(s : String) {\n\t\treturn s.split(\"&\").join(\"&amp;\").split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\");\n\t}\n\n\tprivate static function __trace(v,i : haxe.PosInfos) {\n\t\tuntyped {\n\t\t\tvar msg = if( i != null ) i.fileName+\":\"+i.lineNumber+\": \" else \"\";\n\t\t\t#if jsfl\n\t\t\tmsg += __string_rec(v,\"\");\n\t\t\tfl.trace(msg);\n\t\t\t#else\n\t\t\tmsg += __string_rec(v, \"\");\n\t\t\tif( i != null && i.customParams != null )\n\t\t\t\tfor( v in i.customParams )\n\t\t\t\t\tmsg += \",\" + __string_rec(v, \"\");\n\t\t\tvar d;\n\t\t\tif( __js__(\"typeof\")(document) != \"undefined\" && (d = document.getElementById(\"haxe:trace\")) != null )\n\t\t\t\td.innerHTML += __unhtml(msg)+\"<br/>\";\n\t\t\telse if( __js__(\"typeof console\") != \"undefined\" && __js__(\"console\").log != null )\n\t\t\t\t__js__(\"console\").log(msg);\n\t\t\t#end\n\t\t}\n\t}\n\n\tprivate static function __clear_trace() {\n\t\tuntyped {\n\t\t\t#if jsfl\n\t\t\tfl.outputPanel.clear();\n\t\t\t#else\n\t\t\tvar d = document.getElementById(\"haxe:trace\");\n\t\t\tif( d != null )\n\t\t\t\td.innerHTML = \"\";\n\t\t\t#end\n\t\t}\n\t}\n\n\tstatic inline function isClass(o:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isClass\", o.__name__);\n\t}\n\n\tstatic inline function isEnum(e:Dynamic) : Bool {\n\t\treturn untyped __define_feature__(\"js.Boot.isEnum\", e.__ename__);\n\t}\n\n\tstatic function getClass(o:Dynamic) : Dynamic {\n\t\tif (Std.is(o, Array))\n\t\t\treturn Array;\n\t\telse {\n\t\t\tvar cl = untyped __define_feature__(\"js.Boot.getClass\", o.__class__);\n\t\t\tif (cl != null)\n\t\t\t\treturn cl;\n\t\t\tvar name = __nativeClassName(o);\n\t\t\tif (name != null)\n\t\t\t\treturn __resolveNativeClass(name);\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t@:ifFeature(\"may_print_enum\")\n\tprivate static function __string_rec(o,s:String) {\n\t\tuntyped {\n\t\t\tif( o == null )\n\t\t\t    return \"null\";\n\t\t\tif( s.length >= 5 )\n\t\t\t\treturn \"<...>\"; // too much deep recursion\n\t\t\tvar t = __js__(\"typeof(o)\");\n\t\t\tif( t == \"function\" && (isClass(o) || isEnum(o)) )\n\t\t\t\tt = \"object\";\n\t\t\tswitch( t ) {\n\t\t\tcase \"object\":\n\t\t\t\tif( __js__(\"o instanceof Array\") ) {\n\t\t\t\t\tif( o.__enum__ ) {\n\t\t\t\t\t\tif( o.length == 2 )\n\t\t\t\t\t\t\treturn o[0];\n\t\t\t\t\t\tvar str = o[0]+\"(\";\n\t\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\t\tfor( i in 2...o.length ) {\n\t\t\t\t\t\t\tif( i != 2 )\n\t\t\t\t\t\t\t\tstr += \",\" + __string_rec(o[i],s);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tstr += __string_rec(o[i],s);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn str + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvar l = o.length;\n\t\t\t\t\tvar i;\n\t\t\t\t\tvar str = \"[\";\n\t\t\t\t\ts += \"\\t\";\n\t\t\t\t\tfor( i in 0...l )\n\t\t\t\t\t\tstr += (if (i > 0) \",\" else \"\")+__string_rec(o[i],s);\n\t\t\t\t\tstr += \"]\";\n\t\t\t\t\treturn str;\n\t\t\t\t}\n\t\t\t\tvar tostr;\n\t\t\t\ttry {\n\t\t\t\t\ttostr = untyped o.toString;\n\t\t\t\t} catch( e : Dynamic ) {\n\t\t\t\t\t// strange error on IE\n\t\t\t\t\treturn \"???\";\n\t\t\t\t}\n\t\t\t\tif( tostr != null && tostr != __js__(\"Object.toString\") && __typeof__(tostr) == \"function\" ) {\n\t\t\t\t\tvar s2 = o.toString();\n\t\t\t\t\tif( s2 != \"[object Object]\")\n\t\t\t\t\t\treturn s2;\n\t\t\t\t}\n\t\t\t\tvar k : String = null;\n\t\t\t\tvar str = \"{\\n\";\n\t\t\t\ts += \"\\t\";\n\t\t\t\tvar hasp = (o.hasOwnProperty != null);\n\t\t\t\t__js__(\"for( var k in o ) {\");\n\t\t\t\t\tif( hasp && !o.hasOwnProperty(k) )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( k == \"prototype\" || k == \"__class__\" || k == \"__super__\" || k == \"__interfaces__\" || k == \"__properties__\" )\n\t\t\t\t\t\t__js__(\"continue\");\n\t\t\t\t\tif( str.length != 2 )\n\t\t\t\t\t\tstr += \", \\n\";\n\t\t\t\t\tstr += s + k + \" : \"+__string_rec(o[k],s);\n\t\t\t\t__js__(\"}\");\n\t\t\t\ts = s.substring(1);\n\t\t\t\tstr += \"\\n\" + s + \"}\";\n\t\t\t\treturn str;\n\t\t\tcase \"function\":\n\t\t\t\treturn \"<function>\";\n\t\t\tcase \"string\":\n\t\t\t\treturn o;\n\t\t\tdefault:\n\t\t\t\treturn String(o);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static function __interfLoop(cc : Dynamic,cl : Dynamic) {\n\t\tif( cc == null )\n\t\t\treturn false;\n\t\tif( cc == cl )\n\t\t\treturn true;\n\t\tvar intf : Dynamic = cc.__interfaces__;\n\t\tif( intf != null )\n\t\t\tfor( i in 0...intf.length ) {\n\t\t\t\tvar i : Dynamic = intf[i];\n\t\t\t\tif( i == cl || __interfLoop(i,cl) )\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\treturn __interfLoop(cc.__super__,cl);\n\t}\n\n\t@:ifFeature(\"typed_catch\") private static function __instanceof(o : Dynamic,cl : Dynamic) {\n\t\tif( cl == null )\n\t\t\treturn false;\n\t\tswitch( cl ) {\n\t\tcase Int:\n\t\t\treturn (untyped __js__(\"(o|0) === o\"));\n\t\tcase Float:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"number\";\n\t\tcase Bool:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"boolean\";\n\t\tcase String:\n\t\t\treturn (untyped __js__(\"typeof\"))(o) == \"string\";\n\t\tcase Array:\n\t\t\treturn (untyped __js__(\"(o instanceof Array)\")) && o.__enum__ == null;\n\t\tcase Dynamic:\n\t\t\treturn true;\n\t\tdefault:\n\t\t\tif( o != null ) {\n\t\t\t\t// Check if o is an instance of a Haxe class or a native JS object\n\t\t\t\tif( (untyped __js__(\"typeof\"))(cl) == \"function\" ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t\tif( __interfLoop(getClass(o),cl) )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse if ( (untyped __js__(\"typeof\"))(cl) == \"object\" && __isNativeObj(cl) ) {\n\t\t\t\t\tif( untyped __js__(\"o instanceof cl\") )\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// do not use isClass/isEnum here\n\t\t\tuntyped __feature__(\"Class.*\",if( cl == Class && o.__name__ != null ) return true);\n\t\t\tuntyped __feature__(\"Enum.*\",if( cl == Enum && o.__ename__ != null ) return true);\n\t\t\treturn o.__enum__ == cl;\n\t\t}\n\t}\n\n\t@:ifFeature(\"typed_cast\") private static function __cast(o : Dynamic, t : Dynamic) {\n\t\tif (__instanceof(o, t)) return o;\n\t\telse throw \"Cannot cast \" +Std.string(o) + \" to \" +Std.string(t);\n\t}\n\n\tstatic var __toStr = untyped __js__(\"{}.toString\");\n\t// get native JS [[Class]]\n\tstatic function __nativeClassName(o:Dynamic):String {\n\t\tvar name = untyped __toStr.call(o).slice(8, -1);\n\t\t// exclude general Object and Function\n\t\t// also exclude Math and JSON, because instanceof cannot be called on them\n\t\tif (name == \"Object\" || name == \"Function\" || name == \"Math\" || name == \"JSON\")\n\t\t\treturn null;\n\t\treturn name;\n\t}\n\n\t// check for usable native JS object\n\tstatic function __isNativeObj(o:Dynamic):Bool {\n\t\treturn __nativeClassName(o) != null;\n\t}\n\n\t// resolve native JS class (with window or global):\n\tstatic function __resolveNativeClass(name:String) untyped {\n\t\tif (__js__(\"typeof window\") != \"undefined\")\n\t\t\treturn window[name];\n\t\telse\n\t\t\treturn global[name];\n\t}\n\n}\n","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\npackage js;\n\nimport js.html.Storage;\nimport js.html.XMLHttpRequest;\n\nclass Browser {\n\tpublic static var window(get, never):js.html.DOMWindow;\n\tinline static function get_window() return untyped __js__(\"window\");\n\n\tpublic static var document(get, never):js.html.Document;\n\tinline static function get_document() return untyped __js__(\"window.document\");\n\n\tpublic static var location(get, never):js.html.Location;\n\tinline static function get_location() return untyped __js__(\"window.location\");\n\n\tpublic static var navigator(get, never):js.html.Navigator;\n\tinline static function get_navigator() return untyped __js__(\"window.navigator\");\n\n\t/**\n\t * True if a window object exists, false otherwise.\n\t *\n\t * This can be used to check if the code is being executed in a non-browser\n\t * environment such as node.js.\n\t */\n\tpublic static var supported(get, never):Bool;\n\tpublic static function get_supported() return untyped __js__(\"typeof window != \\\"undefined\\\"\");\n\n\t/**\n\t * Safely gets the browser's local storage, or returns null if localStorage is unsupported or\n\t * disabled.\n\t */\n\tpublic static function getLocalStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.localStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Safely gets the browser's session storage, or returns null if sessionStorage is unsupported\n\t * or disabled.\n\t */\n\tpublic static function getSessionStorage() : Storage\n\t{\n\t\ttry {\n\t\t\tvar s = window.sessionStorage;\n\t\t\ts.getItem(\"\");\n\t\t\treturn s;\n\t\t} catch( e : Dynamic ) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Creates an XMLHttpRequest, with a fallback to ActiveXObject for ancient versions of Internet\n\t * Explorer.\n\t */\n\tpublic static function createXMLHttpRequest() : XMLHttpRequest\n\t{\n\t\tif( untyped __js__(\"typeof XMLHttpRequest\") != \"undefined\" ) {\n\t\t\treturn new XMLHttpRequest();\n\t\t}\n\t\tif( untyped __js__(\"typeof ActiveXObject\") != \"undefined\" ) {\n\t\t\treturn untyped __new__(\"ActiveXObject\",\"Microsoft.XMLHTTP\");\n\t\t}\n\t\tthrow \"Unable to create XMLHttpRequest object.\";\n\t}\n\n}\n","/*\n * Copyright (C)2005-2014 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n// This file is generated, do not edit!\npackage js.html;\n\n/** DOM&nbsp;canvas elements expose the <code><a class=\"external\" href=\"http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement\" rel=\"external nofollow\" target=\"_blank\" title=\"http://www.w3.org/TR/html5/the-canvas-element.html#htmlcanvaselement\">HTMLCanvasElement</a></code> interface, which provides properties and methods for manipulating the layout and presentation of canvas elements. The <code>HTMLCanvasElement</code> interface inherits the properties and methods of the <code><a rel=\"custom\" href=\"/api/js/html/Element\">element</a></code>\n object interface.<br><br>\nDocumentation for this class was provided by <a href=\"https://developer.mozilla.org/en/DOM/HTMLCanvasElement\">MDN</a>. */\n@:native(\"HTMLCanvasElement\")\nextern class CanvasElement extends Element\n{\n\t/** Reflects the \n\n<code><a rel=\"custom\" href=\"https://developer.mozilla.org/en/HTML/Element/canvas#attr-height\">height</a></code>\n HTML attribute, specifying the height of the coordinate space in CSS pixels. */\n\tvar height : Int;\n\n\t/** Reflects the \n\n<code><a rel=\"custom\" href=\"https://developer.mozilla.org/en/HTML/Element/canvas#attr-width\">width</a></code>\n HTML attribute, specifying the width of the coordinate space in CSS pixels. */\n\tvar width : Int;\n\n\tfunction getContext( contextId : String ) : Dynamic;\n\n\tfunction toDataURL( ?type : String ) : String;\n\n\t/** A typed shortcut for <code>getContext(\"2d\")</code>. */\n\tpublic inline function getContext2d() : CanvasRenderingContext2D { return cast getContext(\"2d\"); }\n\n\tpublic inline function getContextWebGL( ?attribs :js.html.webgl.ContextAttributes ) :js.html.webgl.RenderingContext {\n\t\treturn CanvasUtil.getContextWebGL(this, attribs);\n\t}\n}\n\nprivate class CanvasUtil {\n\tpublic static function getContextWebGL( canvas :CanvasElement, attribs :Dynamic ) {\n\t\tfor (name in [\"webgl\", \"experimental-webgl\"]) {\n\t\t\tvar ctx = (untyped canvas).getContext(name, attribs);\n\t\t\tif (ctx != null) return ctx;\n\t\t}\n\t\treturn null;\n\t}\n}","package jsloka;\r\n\r\nimport js.Browser;\r\nimport js.html.CanvasElement;\r\nimport loka.gl.GL;\r\nimport haxe.Timer;\r\n\r\n\r\nclass App{\r\n\r\n\tstatic var _window : Window;\r\n\r\n\t@:access(jsloka.Window.new)\r\n\tpublic static function initWindow() : Window{\r\n\t\tif(_window != null){\r\n\t\t\ttrace(\"ERROR : window already initialised\");\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar canvas=cast(js.Browser.document.getElementById(\"canvas\"));\r\n\t    if(canvas == null){\r\n\t\t    canvas = js.Browser.document.createCanvasElement();\r\n\r\n\t\t    //make sure it displays nicely\r\n\t\t    canvas.style.display = 'block';\r\n\t\t    canvas.style.position = 'relative';\r\n\t\t    canvas.style.margin = '0 auto 0 auto';\r\n\t\t    canvas.style.background = '#000';\r\n\r\n\t\t    //assign the sizes\r\n\t\t    canvas.style.width = \"100%\";\r\n\t    \tcanvas.style.height = \"100%\";\r\n\r\n\t\t    //add it to the document\r\n\t\t    js.Browser.document.body.appendChild(canvas);\r\n\t    }\r\n\t   \r\n\t    var webGlContext = canvas.getContextWebGL({});\r\n\t    if(webGlContext != null){\r\n\t    \t_window = new Window(canvas, new GL(webGlContext)); \r\n\t    }\r\n\r\n\t    return _window;\r\n\t}\t\r\n}\r\n","package jsloka;\r\n\r\nimport js.Browser;\r\nimport js.html.CanvasElement;\r\nimport js.html.Event;\r\nimport loka.gl.GL;\r\nimport haxe.Timer;\r\n\r\nimport loka.Window.RenderFunction;\r\n\r\nclass Window{\r\n\r\n\tpublic var width(default, null) : Float;\r\n\tpublic var height(default, null) : Float;\r\n\r\n\tvar _render : RenderFunction;\r\n\t\r\n\tvar _canvas : CanvasElement;\r\n\tvar _gl : GL;\r\n\tvar _resizeCallback : Float->Float->Void;\r\n\r\n\tfunction new(canvas : CanvasElement, gl : GL){ //TODO : make Window constructor private and access via friend (App.initWindow)\r\n\t\t_canvas = canvas;\r\n\t\t_gl = gl;\r\n\t\tonResized();\r\n\t}\r\n\r\n\tpublic function setOnResizeCallback(callback : Float->Float->Void){\r\n\t\t_resizeCallback = callback;\r\n\t}\r\n\r\n\tinline function onResized(){\r\n\t\twidth = _canvas.clientWidth;\r\n\t\theight = _canvas.clientHeight;\r\n\t\tresizeCanvas();\r\n\t\tif(_resizeCallback != null){\r\n\t\t\t_resizeCallback(width,height);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction resizeCanvas(){ \r\n\t\t//TODO make it an option\r\n\t\tvar realToCSSPixels = Browser.window.devicePixelRatio != null ? Browser.window.devicePixelRatio  : 1;\r\n\t\tvar displayWidth  = Math.floor(width * realToCSSPixels);\r\n\t\tvar displayHeight = Math.floor(height * realToCSSPixels);\r\n\t    \r\n\t    if (_canvas.width != displayWidth || _canvas.height != displayHeight) {\r\n\t        _canvas.width = displayWidth;\r\n\t        _canvas.height = displayHeight;\r\n\t    }\r\n\t}\r\n\r\n\tpublic function getGL(){\r\n\t\treturn _gl;\r\n\t}\r\n\r\n\tpublic function setRenderFunction(render : RenderFunction){\r\n\t\tif(_render == null){\r\n\t\t\tBrowser.window.requestAnimationFrame(internalRender);\r\n\t\t}\r\n\t\t_render = render;\r\n\t}\r\n\r\n\tfunction internalRender(t : Float){//TODO : could use \"t\" as now if the corss platform implementation time util return the same value\r\n\t\tif(width != _canvas.clientWidth || height != _canvas.clientHeight){\r\n\t\t\tonResized();\r\n\t\t}\r\n\t\tvar now = Timer.stamp(); //TODO use a cross platform performant implementation (see js : Performance.now())\r\n\t\t_render(now);\r\n\t\tBrowser.window.requestAnimationFrame(internalRender);\r\n\t}\r\n\r\n}\r\n","package jsloka.asset;\r\n\r\nimport jsloka.asset.Image;\r\nimport js.html.Document;\r\n\r\n\r\n\r\nabstract Loader(Document){\r\n\t\r\n\tinline public function new(){\r\n\t\tthis = js.Browser.document;\r\n\t}\r\n\r\n\t//TODO macro embedding of Image ?\r\n\tinline public function loadImage(url : String, success : Image->Void, error : String -> Void):Void{\r\n\t\tvar image = new js.html.Image();\r\n\t\timage.onload = function(_){\r\n\t\t\tsuccess(image);\r\n\t\t}\r\n\t\timage.onerror = function(_){\r\n\t\t\terror(\"failed to load \" + url);\r\n\t\t}\r\n\t\timage.src = url;\r\n\t}\r\n\r\n\t//TODO macro embedding of Text\r\n\tinline public function loadText(url : String, success : String->Void, error : String -> Void):Void{\r\n\t\tvar http = new haxe.Http(url);\r\n\t\thttp.onData = success;\r\n\t\thttp.onError = error;\r\n\t\t//TODO ? http.onStatus = \r\n\t\thttp.request();\r\n\t}\r\n}","package jsloka.gl; \r\n\r\nimport jsloka.asset.Image;\r\nimport jsloka.asset.Video;\r\nimport js.html.webgl.RenderingContext;\r\n\r\nimport jsloka.util.ArrayBufferView;\r\nimport jsloka.util.Float32Array;\r\nimport jsloka.util.Int32Array;\r\n\r\n//TODO this file should be part of a library \"jsloka\" \r\n\r\ntypedef GLActiveInfo                = js.html.webgl.ActiveInfo;\r\ntypedef GLBuffer                    = js.html.webgl.Buffer;\r\ntypedef GLContextAttributes         = js.html.webgl.ContextAttributes;\r\ntypedef GLFramebuffer               = js.html.webgl.Framebuffer;\r\ntypedef GLProgram                   = js.html.webgl.Program;\r\ntypedef GLRenderbuffer              = js.html.webgl.Renderbuffer;\r\ntypedef GLShader                    = js.html.webgl.Shader;\r\ntypedef GLTexture                   = js.html.webgl.Texture;\r\ntypedef GLUniformLocation           = js.html.webgl.UniformLocation;\r\ntypedef GLShaderPrecisionFormat     = js.html.webgl.ShaderPrecisionFormat;\r\n\r\n\r\nabstract GL(RenderingContext) {\r\n\r\n\r\n\tinline public function new( webglCtx : RenderingContext){\r\n\t\tthis = webglCtx;\r\n\t}\r\n\r\n    /* ClearBufferMask */\r\n    public static inline var DEPTH_BUFFER_BIT               = 0x00000100;\r\n    public static inline var STENCIL_BUFFER_BIT             = 0x00000400;\r\n    public static inline var COLOR_BUFFER_BIT               = 0x00004000;\r\n\r\n    /* BeginMode */\r\n    public static inline var POINTS                         = 0x0000;\r\n    public static inline var LINES                          = 0x0001;\r\n    public static inline var LINE_LOOP                      = 0x0002;\r\n    public static inline var LINE_STRIP                     = 0x0003;\r\n    public static inline var TRIANGLES                      = 0x0004;\r\n    public static inline var TRIANGLE_STRIP                 = 0x0005;\r\n    public static inline var TRIANGLE_FAN                   = 0x0006;\r\n\r\n    /* AlphaFunction(not supported in ES20) */\r\n    /*      NEVER */\r\n    /*      LESS */\r\n    /*      EQUAL */\r\n    /*      LEQUAL */\r\n    /*      GREATER */\r\n    /*      NOTEQUAL */\r\n    /*      GEQUAL */\r\n    /*      ALWAYS */\r\n\r\n    /* BlendingFactorDest */\r\n    public static inline var ZERO                           = 0;\r\n    public static inline var ONE                            = 1;\r\n    public static inline var SRC_COLOR                      = 0x0300;\r\n    public static inline var ONE_MINUS_SRC_COLOR            = 0x0301;\r\n    public static inline var SRC_ALPHA                      = 0x0302;\r\n    public static inline var ONE_MINUS_SRC_ALPHA            = 0x0303;\r\n    public static inline var DST_ALPHA                      = 0x0304;\r\n    public static inline var ONE_MINUS_DST_ALPHA            = 0x0305;\r\n\r\n    /* BlendingFactorSrc */\r\n    /*      ZERO */\r\n    /*      ONE */\r\n    public static inline var DST_COLOR                      = 0x0306;\r\n    public static inline var ONE_MINUS_DST_COLOR            = 0x0307;\r\n    public static inline var SRC_ALPHA_SATURATE             = 0x0308;\r\n    /*      SRC_ALPHA */\r\n    /*      ONE_MINUS_SRC_ALPHA */\r\n    /*      DST_ALPHA */\r\n    /*      ONE_MINUS_DST_ALPHA */\r\n\r\n    /* BlendEquationSeparate */\r\n    public static inline var FUNC_ADD                       = 0x8006;\r\n    public static inline var BLEND_EQUATION                 = 0x8009;\r\n    public static inline var BLEND_EQUATION_RGB             = 0x8009;   /* same as BLEND_EQUATION */\r\n    public static inline var BLEND_EQUATION_ALPHA           = 0x883D;\r\n\r\n    /* BlendSubtract */\r\n    public static inline var FUNC_SUBTRACT                  = 0x800A;\r\n    public static inline var FUNC_REVERSE_SUBTRACT          = 0x800B;\r\n\r\n    /* Separate Blend Functions */\r\n    public static inline var BLEND_DST_RGB                  = 0x80C8;\r\n    public static inline var BLEND_SRC_RGB                  = 0x80C9;\r\n    public static inline var BLEND_DST_ALPHA                = 0x80CA;\r\n    public static inline var BLEND_SRC_ALPHA                = 0x80CB;\r\n    public static inline var CONSTANT_COLOR                 = 0x8001;\r\n    public static inline var ONE_MINUS_CONSTANT_COLOR       = 0x8002;\r\n    public static inline var CONSTANT_ALPHA                 = 0x8003;\r\n    public static inline var ONE_MINUS_CONSTANT_ALPHA       = 0x8004;\r\n    public static inline var BLEND_COLOR                    = 0x8005;\r\n\r\n    /* GLBuffer Objects */\r\n    public static inline var ARRAY_BUFFER                   = 0x8892;\r\n    public static inline var ELEMENT_ARRAY_BUFFER           = 0x8893;\r\n    public static inline var ARRAY_BUFFER_BINDING           = 0x8894;\r\n    public static inline var ELEMENT_ARRAY_BUFFER_BINDING   = 0x8895;\r\n\r\n    public static inline var STREAM_DRAW                    = 0x88E0;\r\n    public static inline var STATIC_DRAW                    = 0x88E4;\r\n    public static inline var DYNAMIC_DRAW                   = 0x88E8;\r\n\r\n    public static inline var BUFFER_SIZE                    = 0x8764;\r\n    public static inline var BUFFER_USAGE                   = 0x8765;\r\n\r\n    public static inline var CURRENT_VERTEX_ATTRIB          = 0x8626;\r\n\r\n    /* CullFaceMode */\r\n    public static inline var FRONT                          = 0x0404;\r\n    public static inline var BACK                           = 0x0405;\r\n    public static inline var FRONT_AND_BACK                 = 0x0408;\r\n\r\n    /* DepthFunction */\r\n    /*      NEVER */\r\n    /*      LESS */\r\n    /*      EQUAL */\r\n    /*      LEQUAL */\r\n    /*      GREATER */\r\n    /*      NOTEQUAL */\r\n    /*      GEQUAL */\r\n    /*      ALWAYS */\r\n\r\n    /* EnableCap */\r\n    /* TEXTURE_2D */\r\n    public static inline var CULL_FACE                      = 0x0B44;\r\n    public static inline var BLEND                          = 0x0BE2;\r\n    public static inline var DITHER                         = 0x0BD0;\r\n    public static inline var STENCIL_TEST                   = 0x0B90;\r\n    public static inline var DEPTH_TEST                     = 0x0B71;\r\n    public static inline var SCISSOR_TEST                   = 0x0C11;\r\n    public static inline var POLYGON_OFFSET_FILL            = 0x8037;\r\n    public static inline var SAMPLE_ALPHA_TO_COVERAGE       = 0x809E;\r\n    public static inline var SAMPLE_COVERAGE                = 0x80A0;\r\n\r\n    /* ErrorCode */\r\n    public static inline var NO_ERROR                       = 0;\r\n    public static inline var INVALID_ENUM                   = 0x0500;\r\n    public static inline var INVALID_VALUE                  = 0x0501;\r\n    public static inline var INVALID_OPERATION              = 0x0502;\r\n    public static inline var OUT_OF_MEMORY                  = 0x0505;\r\n\r\n    /* FrontFaceDirection */\r\n    public static inline var CW                             = 0x0900;\r\n    public static inline var CCW                            = 0x0901;\r\n\r\n    /* GetPName */\r\n    public static inline var LINE_WIDTH                     = 0x0B21;\r\n    public static inline var ALIASED_POINT_SIZE_RANGE       = 0x846D;\r\n    public static inline var ALIASED_LINE_WIDTH_RANGE       = 0x846E;\r\n    public static inline var CULL_FACE_MODE                 = 0x0B45;\r\n    public static inline var FRONT_FACE                     = 0x0B46;\r\n    public static inline var DEPTH_RANGE                    = 0x0B70;\r\n    public static inline var DEPTH_WRITEMASK                = 0x0B72;\r\n    public static inline var DEPTH_CLEAR_VALUE              = 0x0B73;\r\n    public static inline var DEPTH_FUNC                     = 0x0B74;\r\n    public static inline var STENCIL_CLEAR_VALUE            = 0x0B91;\r\n    public static inline var STENCIL_FUNC                   = 0x0B92;\r\n    public static inline var STENCIL_FAIL                   = 0x0B94;\r\n    public static inline var STENCIL_PASS_DEPTH_FAIL        = 0x0B95;\r\n    public static inline var STENCIL_PASS_DEPTH_PASS        = 0x0B96;\r\n    public static inline var STENCIL_REF                    = 0x0B97;\r\n    public static inline var STENCIL_VALUE_MASK             = 0x0B93;\r\n    public static inline var STENCIL_WRITEMASK              = 0x0B98;\r\n    public static inline var STENCIL_BACK_FUNC              = 0x8800;\r\n    public static inline var STENCIL_BACK_FAIL              = 0x8801;\r\n    public static inline var STENCIL_BACK_PASS_DEPTH_FAIL   = 0x8802;\r\n    public static inline var STENCIL_BACK_PASS_DEPTH_PASS   = 0x8803;\r\n    public static inline var STENCIL_BACK_REF               = 0x8CA3;\r\n    public static inline var STENCIL_BACK_VALUE_MASK        = 0x8CA4;\r\n    public static inline var STENCIL_BACK_WRITEMASK         = 0x8CA5;\r\n    public static inline var VIEWPORT                       = 0x0BA2;\r\n    public static inline var SCISSOR_loka                    = 0x0C10;\r\n    /*      SCISSOR_TEST */\r\n    public static inline var COLOR_CLEAR_VALUE              = 0x0C22;\r\n    public static inline var COLOR_WRITEMASK                = 0x0C23;\r\n    public static inline var UNPACK_ALIGNMENT               = 0x0CF5;\r\n    public static inline var PACK_ALIGNMENT                 = 0x0D05;\r\n    public static inline var MAX_TEXTURE_SIZE               = 0x0D33;\r\n    public static inline var MAX_VIEWPORT_DIMS              = 0x0D3A;\r\n    public static inline var SUBPIXEL_BITS                  = 0x0D50;\r\n    public static inline var RED_BITS                       = 0x0D52;\r\n    public static inline var GREEN_BITS                     = 0x0D53;\r\n    public static inline var BLUE_BITS                      = 0x0D54;\r\n    public static inline var ALPHA_BITS                     = 0x0D55;\r\n    public static inline var DEPTH_BITS                     = 0x0D56;\r\n    public static inline var STENCIL_BITS                   = 0x0D57;\r\n    public static inline var POLYGON_OFFSET_UNITS           = 0x2A00;\r\n    /*      POLYGON_OFFSET_FILL */\r\n    public static inline var POLYGON_OFFSET_FACTOR          = 0x8038;\r\n    public static inline var TEXTURE_BINDING_2D             = 0x8069;\r\n    public static inline var SAMPLE_BUFFERS                 = 0x80A8;\r\n    public static inline var SAMPLES                        = 0x80A9;\r\n    public static inline var SAMPLE_COVERAGE_VALUE          = 0x80AA;\r\n    public static inline var SAMPLE_COVERAGE_INVERT         = 0x80AB;\r\n\r\n    /* GetTextureParameter */\r\n    /*      TEXTURE_MAG_FILTER */\r\n    /*      TEXTURE_MIN_FILTER */\r\n    /*      TEXTURE_WRAP_S */\r\n    /*      TEXTURE_WRAP_T */\r\n\r\n    public static inline var COMPRESSED_TEXTURE_FORMATS     = 0x86A3;\r\n\r\n    /* HintMode */\r\n    public static inline var DONT_CARE                      = 0x1100;\r\n    public static inline var FASTEST                        = 0x1101;\r\n    public static inline var NICEST                         = 0x1102;\r\n\r\n    /* HintTarget */\r\n    public static inline var GENERATE_MIPMAP_HINT            = 0x8192;\r\n\r\n    /* DataType */\r\n    public static inline var BYTE                           = 0x1400;\r\n    public static inline var UNSIGNED_BYTE                  = 0x1401;\r\n    public static inline var SHORT                          = 0x1402;\r\n    public static inline var UNSIGNED_SHORT                 = 0x1403;\r\n    public static inline var INT                            = 0x1404;\r\n    public static inline var UNSIGNED_INT                   = 0x1405;\r\n    public static inline var FLOAT                          = 0x1406;\r\n\r\n    /* PixelFormat */\r\n    public static inline var DEPTH_COMPONENT                = 0x1902;\r\n    public static inline var ALPHA                          = 0x1906;\r\n    public static inline var RGB                            = 0x1907;\r\n    public static inline var RGBA                           = 0x1908;\r\n    public static inline var LUMINANCE                      = 0x1909;\r\n    public static inline var LUMINANCE_ALPHA                = 0x190A;\r\n\r\n    /* PixelType */\r\n    /*      UNSIGNED_BYTE */\r\n    public static inline var UNSIGNED_SHORT_4_4_4_4         = 0x8033;\r\n    public static inline var UNSIGNED_SHORT_5_5_5_1         = 0x8034;\r\n    public static inline var UNSIGNED_SHORT_5_6_5           = 0x8363;\r\n\r\n    /* Shaders */\r\n    public static inline var FRAGMENT_SHADER                  = 0x8B30;\r\n    public static inline var VERTEX_SHADER                    = 0x8B31;\r\n    public static inline var MAX_VERTEX_ATTRIBS               = 0x8869;\r\n    public static inline var MAX_VERTEX_UNIFORM_VECTORS       = 0x8DFB;\r\n    public static inline var MAX_VARYING_VECTORS              = 0x8DFC;\r\n    public static inline var MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;\r\n    public static inline var MAX_VERTEX_TEXTURE_IMAGE_UNITS   = 0x8B4C;\r\n    public static inline var MAX_TEXTURE_IMAGE_UNITS          = 0x8872;\r\n    public static inline var MAX_FRAGMENT_UNIFORM_VECTORS     = 0x8DFD;\r\n    public static inline var SHADER_TYPE                      = 0x8B4F;\r\n    public static inline var DELETE_STATUS                    = 0x8B80;\r\n    public static inline var LINK_STATUS                      = 0x8B82;\r\n    public static inline var VALIDATE_STATUS                  = 0x8B83;\r\n    public static inline var ATTACHED_SHADERS                 = 0x8B85;\r\n    public static inline var ACTIVE_UNIFORMS                  = 0x8B86;\r\n    public static inline var ACTIVE_ATTRIBUTES                = 0x8B89;\r\n    public static inline var SHADING_LANGUAGE_VERSION         = 0x8B8C;\r\n    public static inline var CURRENT_PROGRAM                  = 0x8B8D;\r\n\r\n    /* StencilFunction */\r\n    public static inline var NEVER                          = 0x0200;\r\n    public static inline var LESS                           = 0x0201;\r\n    public static inline var EQUAL                          = 0x0202;\r\n    public static inline var LEQUAL                         = 0x0203;\r\n    public static inline var GREATER                        = 0x0204;\r\n    public static inline var NOTEQUAL                       = 0x0205;\r\n    public static inline var GEQUAL                         = 0x0206;\r\n    public static inline var ALWAYS                         = 0x0207;\r\n\r\n    /* StencilOp */\r\n    /*      ZERO */\r\n    public static inline var KEEP                           = 0x1E00;\r\n    public static inline var REPLACE                        = 0x1E01;\r\n    public static inline var INCR                           = 0x1E02;\r\n    public static inline var DECR                           = 0x1E03;\r\n    public static inline var INVERT                         = 0x150A;\r\n    public static inline var INCR_WRAP                      = 0x8507;\r\n    public static inline var DECR_WRAP                      = 0x8508;\r\n\r\n    /* StringName */\r\n    public static inline var VENDOR                         = 0x1F00;\r\n    public static inline var RENDERER                       = 0x1F01;\r\n    public static inline var VERSION                        = 0x1F02;\r\n\r\n    /* TextureMagFilter */\r\n    public static inline var NEAREST                        = 0x2600;\r\n    public static inline var LINEAR                         = 0x2601;\r\n\r\n    /* TextureMinFilter */\r\n    /*      NEAREST */\r\n    /*      LINEAR */\r\n    public static inline var NEAREST_MIPMAP_NEAREST         = 0x2700;\r\n    public static inline var LINEAR_MIPMAP_NEAREST          = 0x2701;\r\n    public static inline var NEAREST_MIPMAP_LINEAR          = 0x2702;\r\n    public static inline var LINEAR_MIPMAP_LINEAR           = 0x2703;\r\n\r\n    /* TextureParameterName */\r\n    public static inline var TEXTURE_MAG_FILTER             = 0x2800;\r\n    public static inline var TEXTURE_MIN_FILTER             = 0x2801;\r\n    public static inline var TEXTURE_WRAP_S                 = 0x2802;\r\n    public static inline var TEXTURE_WRAP_T                 = 0x2803;\r\n\r\n    /* TextureTarget */\r\n    public static inline var TEXTURE_2D                     = 0x0DE1;\r\n    public static inline var TEXTURE                        = 0x1702;\r\n\r\n    public static inline var TEXTURE_CUBE_MAP               = 0x8513;\r\n    public static inline var TEXTURE_BINDING_CUBE_MAP       = 0x8514;\r\n    public static inline var TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;\r\n    public static inline var TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;\r\n    public static inline var TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;\r\n    public static inline var TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;\r\n    public static inline var TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;\r\n    public static inline var TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851A;\r\n    public static inline var MAX_CUBE_MAP_TEXTURE_SIZE      = 0x851C;\r\n\r\n    /* TextureUnit */\r\n    public static inline var TEXTURE0                       = 0x84C0;\r\n    public static inline var TEXTURE1                       = 0x84C1;\r\n    public static inline var TEXTURE2                       = 0x84C2;\r\n    public static inline var TEXTURE3                       = 0x84C3;\r\n    public static inline var TEXTURE4                       = 0x84C4;\r\n    public static inline var TEXTURE5                       = 0x84C5;\r\n    public static inline var TEXTURE6                       = 0x84C6;\r\n    public static inline var TEXTURE7                       = 0x84C7;\r\n    public static inline var TEXTURE8                       = 0x84C8;\r\n    public static inline var TEXTURE9                       = 0x84C9;\r\n    public static inline var TEXTURE10                      = 0x84CA;\r\n    public static inline var TEXTURE11                      = 0x84CB;\r\n    public static inline var TEXTURE12                      = 0x84CC;\r\n    public static inline var TEXTURE13                      = 0x84CD;\r\n    public static inline var TEXTURE14                      = 0x84CE;\r\n    public static inline var TEXTURE15                      = 0x84CF;\r\n    public static inline var TEXTURE16                      = 0x84D0;\r\n    public static inline var TEXTURE17                      = 0x84D1;\r\n    public static inline var TEXTURE18                      = 0x84D2;\r\n    public static inline var TEXTURE19                      = 0x84D3;\r\n    public static inline var TEXTURE20                      = 0x84D4;\r\n    public static inline var TEXTURE21                      = 0x84D5;\r\n    public static inline var TEXTURE22                      = 0x84D6;\r\n    public static inline var TEXTURE23                      = 0x84D7;\r\n    public static inline var TEXTURE24                      = 0x84D8;\r\n    public static inline var TEXTURE25                      = 0x84D9;\r\n    public static inline var TEXTURE26                      = 0x84DA;\r\n    public static inline var TEXTURE27                      = 0x84DB;\r\n    public static inline var TEXTURE28                      = 0x84DC;\r\n    public static inline var TEXTURE29                      = 0x84DD;\r\n    public static inline var TEXTURE30                      = 0x84DE;\r\n    public static inline var TEXTURE31                      = 0x84DF;\r\n    public static inline var ACTIVE_TEXTURE                 = 0x84E0;\r\n\r\n    /* TextureWrapMode */\r\n    public static inline var REPEAT                         = 0x2901;\r\n    public static inline var CLAMP_TO_EDGE                  = 0x812F;\r\n    public static inline var MIRRORED_REPEAT                = 0x8370;\r\n\r\n    /* Uniform Types */\r\n    public static inline var FLOAT_VEC2                     = 0x8B50;\r\n    public static inline var FLOAT_VEC3                     = 0x8B51;\r\n    public static inline var FLOAT_VEC4                     = 0x8B52;\r\n    public static inline var INT_VEC2                       = 0x8B53;\r\n    public static inline var INT_VEC3                       = 0x8B54;\r\n    public static inline var INT_VEC4                       = 0x8B55;\r\n    public static inline var BOOL                           = 0x8B56;\r\n    public static inline var BOOL_VEC2                      = 0x8B57;\r\n    public static inline var BOOL_VEC3                      = 0x8B58;\r\n    public static inline var BOOL_VEC4                      = 0x8B59;\r\n    public static inline var FLOAT_MAT2                     = 0x8B5A;\r\n    public static inline var FLOAT_MAT3                     = 0x8B5B;\r\n    public static inline var FLOAT_MAT4                     = 0x8B5C;\r\n    public static inline var SAMPLER_2D                     = 0x8B5E;\r\n    public static inline var SAMPLER_CUBE                   = 0x8B60;\r\n\r\n    /* Vertex Arrays */\r\n    public static inline var VERTEX_ATTRIB_ARRAY_ENABLED        = 0x8622;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_SIZE           = 0x8623;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_STRIDE         = 0x8624;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_TYPE           = 0x8625;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_NORMALIZED     = 0x886A;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_POINTER        = 0x8645;\r\n    public static inline var VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;\r\n\r\n    /* Point Size */\r\n    public static inline var VERTEX_PROGRAM_POINT_SIZE       = 0x8642;\r\n    public static inline var POINT_SPRITE                    = 0x8861;\r\n\r\n    /* GLShader Source */\r\n    public static inline var COMPILE_STATUS                 = 0x8B81;\r\n\r\n    /* GLShader Precision-Specified Types */\r\n    public static inline var LOW_FLOAT                      = 0x8DF0;\r\n    public static inline var MEDIUM_FLOAT                   = 0x8DF1;\r\n    public static inline var HIGH_FLOAT                     = 0x8DF2;\r\n    public static inline var LOW_INT                        = 0x8DF3;\r\n    public static inline var MEDIUM_INT                     = 0x8DF4;\r\n    public static inline var HIGH_INT                       = 0x8DF5;\r\n\r\n    /* GLFramebuffer Object. */\r\n    public static inline var FRAMEBUFFER                    = 0x8D40;\r\n    public static inline var RENDERBUFFER                   = 0x8D41;\r\n\r\n    public static inline var RGBA4                          = 0x8056;\r\n    public static inline var RGB5_A1                        = 0x8057;\r\n    public static inline var RGB565                         = 0x8D62;\r\n    public static inline var DEPTH_COMPONENT16              = 0x81A5;\r\n    public static inline var STENCIL_INDEX                  = 0x1901;\r\n    public static inline var STENCIL_INDEX8                 = 0x8D48;\r\n    public static inline var DEPTH_STENCIL                  = 0x84F9;\r\n\r\n    public static inline var RENDERBUFFER_WIDTH             = 0x8D42;\r\n    public static inline var RENDERBUFFER_HEIGHT            = 0x8D43;\r\n    public static inline var RENDERBUFFER_INTERNAL_FORMAT   = 0x8D44;\r\n    public static inline var RENDERBUFFER_RED_SIZE          = 0x8D50;\r\n    public static inline var RENDERBUFFER_GREEN_SIZE        = 0x8D51;\r\n    public static inline var RENDERBUFFER_BLUE_SIZE         = 0x8D52;\r\n    public static inline var RENDERBUFFER_ALPHA_SIZE        = 0x8D53;\r\n    public static inline var RENDERBUFFER_DEPTH_SIZE        = 0x8D54;\r\n    public static inline var RENDERBUFFER_STENCIL_SIZE      = 0x8D55;\r\n\r\n    public static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE           = 0x8CD0;\r\n    public static inline var FRAMEBUFFER_ATTACHMENT_OBJECT_NAME           = 0x8CD1;\r\n    public static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL         = 0x8CD2;\r\n    public static inline var FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;\r\n\r\n    public static inline var COLOR_ATTACHMENT0              = 0x8CE0;\r\n    public static inline var DEPTH_ATTACHMENT               = 0x8D00;\r\n    public static inline var STENCIL_ATTACHMENT             = 0x8D20;\r\n    public static inline var DEPTH_STENCIL_ATTACHMENT       = 0x821A;\r\n\r\n    public static inline var NONE                           = 0;\r\n\r\n    public static inline var FRAMEBUFFER_COMPLETE                      = 0x8CD5;\r\n    public static inline var FRAMEBUFFER_INCOMPLETE_ATTACHMENT         = 0x8CD6;\r\n    public static inline var FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;\r\n    public static inline var FRAMEBUFFER_INCOMPLETE_DIMENSIONS         = 0x8CD9;\r\n    public static inline var FRAMEBUFFER_UNSUPPORTED                   = 0x8CDD;\r\n\r\n    public static inline var FRAMEBUFFER_BINDING            = 0x8CA6;\r\n    public static inline var RENDERBUFFER_BINDING           = 0x8CA7;\r\n    public static inline var MAX_RENDERBUFFER_SIZE          = 0x84E8;\r\n\r\n    public static inline var INVALID_FRAMEBUFFER_OPERATION  = 0x0506;\r\n\r\n    /* WebGL-specific enums */\r\n    public static inline var UNPACK_FLIP_Y_WEBGL            = 0x9240;\r\n    public static inline var UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241;\r\n    public static inline var CONTEXT_LOST_WEBGL             = 0x9242;\r\n    public static inline var UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\r\n    public static inline var BROWSER_DEFAULT_WEBGL          = 0x9244;\r\n\r\n\r\n    public static var version(get_version, null):Int;\r\n    static function get_version():Int { return RenderingContext.VERSION; }\r\n    \r\n\r\n    public inline function versionString():String {\r\n\r\n        var ver = this.getParameter(VERSION);\r\n        var slver = this.getParameter(SHADING_LANGUAGE_VERSION);\r\n        var ren = this.getParameter(RENDERER);\r\n        var ven = this.getParameter(VENDOR);\r\n\r\n        return \"/ \" + ver + \" / \" + slver + \" / \" + ren + \" / \" + ven + \" /\";\r\n    }\r\n\r\n\r\n    public inline function activeTexture(texture:Int):Void {\r\n\r\n        this.activeTexture(texture);\r\n\r\n    }\r\n\r\n\r\n    public inline function attachShader(program:GLProgram, shader:GLShader):Void {\r\n\r\n        this.attachShader(program, shader);\r\n\r\n    }\r\n\r\n\r\n    public inline function bindAttribLocation(program:GLProgram, index:Int, name:String):Void {\r\n\r\n        this.bindAttribLocation(program, index, name);\r\n\r\n    }\r\n\r\n\r\n    public inline function bindBuffer(target:Int, buffer:GLBuffer):Void {\r\n\r\n        this.bindBuffer(target, buffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function bindFramebuffer(target:Int, framebuffer:GLFramebuffer):Void {\r\n\r\n        this.bindFramebuffer(target, framebuffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function bindRenderbuffer(target:Int, renderbuffer:GLRenderbuffer):Void {\r\n\r\n        this.bindRenderbuffer(target, renderbuffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function bindTexture(target:Int, texture:GLTexture):Void {\r\n\r\n        this.bindTexture(target, texture);\r\n\r\n    }\r\n\r\n\r\n    public inline function blendColor(red:Float, green:Float, blue:Float, alpha:Float):Void {\r\n\r\n        this.blendColor(red, green, blue, alpha);\r\n\r\n    }\r\n\r\n\r\n    public inline function blendEquation(mode:Int):Void {\r\n\r\n        this.blendEquation(mode);\r\n\r\n    }\r\n\r\n\r\n    public inline function blendEquationSeparate(modeRGB:Int, modeAlpha:Int):Void {\r\n\r\n        this.blendEquationSeparate(modeRGB, modeAlpha);\r\n\r\n    }\r\n\r\n\r\n    public inline function blendFunc(sfactor:Int, dfactor:Int):Void {\r\n\r\n        this.blendFunc(sfactor, dfactor);\r\n\r\n    }\r\n\r\n\r\n    public inline function blendFuncSeparate(srcRGB:Int, dstRGB:Int, srcAlpha:Int, dstAlpha:Int):Void {\r\n\r\n        this.blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\r\n\r\n    }\r\n\r\n\r\n    //public inline function bufferData(target:Int, data:IMemoryRange, usage:Int):Void {\r\n    public inline function bufferData(target:Int, data:ArrayBufferView, usage:Int):Void {\r\n\r\n        this.bufferData(target, data, usage);\r\n\r\n    }\r\n\r\n\r\n    public inline function bufferSubData(target:Int, offset:Int, data:ArrayBufferView):Void {\r\n\r\n        this.bufferSubData(target, offset, data);\r\n\r\n    }\r\n\r\n\r\n    public inline function checkFramebufferStatus(target:Int):Int {\r\n\r\n        return this.checkFramebufferStatus(target);\r\n\r\n    }\r\n\r\n\r\n    public inline function clear(mask:Int):Void {\r\n\r\n        this.clear(mask);\r\n\r\n    }\r\n\r\n\r\n    public inline function clearColor(red:Float, green:Float, blue:Float, alpha:Float):Void {\r\n\r\n        this.clearColor(red, green, blue, alpha);\r\n\r\n    }\r\n\r\n\r\n    public inline function clearDepth(depth:Float):Void {\r\n\r\n        this.clearDepth(depth);\r\n\r\n    }\r\n\r\n\r\n    public inline function clearStencil(s:Int):Void {\r\n\r\n        this.clearStencil(s);\r\n\r\n    }\r\n\r\n\r\n    public inline function colorMask(red:Bool, green:Bool, blue:Bool, alpha:Bool):Void {\r\n\r\n        this.colorMask(red, green, blue, alpha);\r\n\r\n    }\r\n\r\n\r\n    public inline function compileShader(shader:GLShader):Void {\r\n\r\n        this.compileShader(shader);\r\n\r\n    }\r\n\r\n\r\n    public inline function compressedTexImage2D(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, data:ArrayBufferView):Void {\r\n\r\n        this.compressedTexImage2D(target, level, internalformat, width, height, border, data);\r\n\r\n    }\r\n\r\n\r\n    public inline function compressedTexSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, data:ArrayBufferView):Void {\r\n\r\n        this.compressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, data);\r\n\r\n    }\r\n\r\n\r\n    public inline function copyTexImage2D(target:Int, level:Int, internalformat:Int, x:Int, y:Int, width:Int, height:Int, border:Int):Void {\r\n\r\n        this.copyTexImage2D(target, level, internalformat, x, y, width, height, border);\r\n\r\n    }\r\n\r\n\r\n    public inline function copyTexSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, x:Int, y:Int, width:Int, height:Int):Void {\r\n\r\n        this.copyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);\r\n\r\n    }\r\n\r\n\r\n    public inline function createBuffer():GLBuffer {\r\n\r\n        return this.createBuffer();\r\n\r\n    }\r\n\r\n\r\n    public inline function createFramebuffer():GLFramebuffer {\r\n\r\n        return this.createFramebuffer();\r\n\r\n    }\r\n\r\n\r\n    public inline function createProgram():GLProgram {\r\n\r\n        return this.createProgram();\r\n\r\n    }\r\n\r\n\r\n    public inline function createRenderbuffer():GLRenderbuffer {\r\n\r\n        return this.createRenderbuffer();\r\n\r\n    }\r\n\r\n\r\n    public inline function createShader(type:Int):GLShader {\r\n\r\n        return this.createShader(type);\r\n\r\n    }\r\n\r\n\r\n    public inline function createTexture():GLTexture {\r\n\r\n        return this.createTexture();\r\n\r\n    }\r\n\r\n\r\n    public inline function cullFace(mode:Int):Void {\r\n\r\n        this.cullFace(mode);\r\n\r\n    }\r\n\r\n\r\n    public inline function deleteBuffer(buffer:GLBuffer):Void {\r\n\r\n        this.deleteBuffer(buffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function deleteFramebuffer(framebuffer:GLFramebuffer):Void {\r\n\r\n        this.deleteFramebuffer(framebuffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function deleteProgram(program:GLProgram):Void {\r\n\r\n        this.deleteProgram(program);\r\n\r\n    }\r\n\r\n\r\n    public inline function deleteRenderbuffer(renderbuffer:GLRenderbuffer):Void {\r\n\r\n        this.deleteRenderbuffer(renderbuffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function deleteShader(shader:GLShader):Void {\r\n\r\n        this.deleteShader(shader);\r\n\r\n    }\r\n\r\n\r\n    public inline function deleteTexture(texture:GLTexture):Void {\r\n\r\n        this.deleteTexture(texture);\r\n\r\n    }\r\n\r\n\r\n    public inline function depthFunc(func:Int):Void {\r\n\r\n        this.depthFunc(func);\r\n\r\n    }\r\n\r\n\r\n    public inline function depthMask(flag:Bool):Void {\r\n\r\n        this.depthMask(flag);\r\n\r\n    }\r\n\r\n\r\n    public inline function depthRange(zNear:Float, zFar:Float):Void {\r\n\r\n        this.depthRange(zNear, zFar);\r\n\r\n    }\r\n\r\n\r\n    public inline function detachShader(program:GLProgram, shader:GLShader):Void {\r\n\r\n        this.detachShader(program, shader);\r\n\r\n    }\r\n\r\n\r\n    public inline function disable(cap:Int):Void {\r\n\r\n        this.disable(cap);\r\n\r\n    }\r\n\r\n\r\n    public inline function disableVertexAttribArray(index:Int):Void {\r\n\r\n        this.disableVertexAttribArray(index);\r\n\r\n    }\r\n\r\n\r\n    public inline function drawArrays(mode:Int, first:Int, count:Int):Void {\r\n\r\n        this.drawArrays(mode, first, count);\r\n\r\n    }\r\n\r\n\r\n    public inline function drawElements(mode:Int, count:Int, type:Int, offset:Int):Void {\r\n\r\n        this.drawElements(mode, count, type, offset);\r\n\r\n    }\r\n\r\n\r\n    public inline function enable(cap:Int):Void {\r\n\r\n        this.enable(cap);\r\n\r\n    }\r\n\r\n\r\n    public inline function enableVertexAttribArray(index:Int):Void {\r\n\r\n        this.enableVertexAttribArray(index);\r\n\r\n    }\r\n\r\n\r\n    public inline function finish():Void {\r\n\r\n        this.finish();\r\n\r\n    }\r\n\r\n\r\n    public inline function flush():Void {\r\n\r\n        this.flush();\r\n\r\n    }\r\n\r\n\r\n    public inline function framebufferRenderbuffer(target:Int, attachment:Int, renderbuffertarget:Int, renderbuffer:GLRenderbuffer):Void {\r\n\r\n        this.framebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function framebufferTexture2D(target:Int, attachment:Int, textarget:Int, texture:GLTexture, level:Int):Void {\r\n\r\n        this.framebufferTexture2D(target, attachment, textarget, texture, level);\r\n\r\n    }\r\n\r\n\r\n    public inline function frontFace(mode:Int):Void {\r\n\r\n        this.frontFace(mode);\r\n\r\n    }\r\n\r\n\r\n    public inline function generateMipmap(target:Int):Void {\r\n\r\n        this.generateMipmap(target);\r\n\r\n    }\r\n\r\n\r\n    public inline function getActiveAttrib(program:GLProgram, index:Int):GLActiveInfo {\r\n\r\n        return this.getActiveAttrib(program, index);\r\n\r\n    }\r\n\r\n\r\n    public inline function getActiveUniform(program:GLProgram, index:Int):GLActiveInfo {\r\n\r\n        return this.getActiveUniform(program, index);\r\n\r\n    }\r\n\r\n\r\n    public inline function getAttachedShaders(program:GLProgram):Array<GLShader> {\r\n\r\n        return this.getAttachedShaders(program);\r\n\r\n    }\r\n\r\n\r\n    public inline function getAttribLocation(program:GLProgram, name:String):Int {\r\n\r\n        return this.getAttribLocation(program, name);\r\n\r\n    }\r\n\r\n\r\n    public inline function getBufferParameter(target:Int, pname:Int):Dynamic {\r\n\r\n        return this.getBufferParameter(target, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getContextAttributes():GLContextAttributes {\r\n\r\n        return this.getContextAttributes();\r\n\r\n    }\r\n\r\n\r\n    public inline function getError():Int {\r\n\r\n        return this.getError();\r\n\r\n    }\r\n\r\n\r\n    public inline function getExtension(name:String):Dynamic {\r\n\r\n        return this.getExtension(name);\r\n\r\n    }\r\n\r\n\r\n    public inline function getFramebufferAttachmentParameter(target:Int, attachment:Int, pname:Int):Dynamic {\r\n\r\n        return this.getFramebufferAttachmentParameter(target, attachment, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getParameter(pname:Int):Dynamic {\r\n\r\n        return this.getParameter(pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getProgramInfoLog(program:GLProgram):String {\r\n\r\n        return this.getProgramInfoLog(program);\r\n\r\n    }\r\n\r\n\r\n    public inline function getProgramParameter(program:GLProgram, pname:Int):Int {\r\n\r\n        return this.getProgramParameter(program, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getRenderbufferParameter(target:Int, pname:Int):Dynamic {\r\n\r\n        return this.getRenderbufferParameter(target, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getShaderInfoLog(shader:GLShader):String {\r\n\r\n        return this.getShaderInfoLog(shader);\r\n\r\n    }\r\n\r\n\r\n    public inline function getShaderParameter(shader:GLShader, pname:Int):Int {\r\n\r\n        return this.getShaderParameter(shader, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getShaderPrecisionFormat(shadertype:Int, precisiontype:Int) : GLShaderPrecisionFormat {\r\n\r\n        return this.getShaderPrecisionFormat(shadertype, precisiontype);\r\n\r\n    }\r\n\r\n\r\n    public inline function getShaderSource(shader:GLShader):String {\r\n\r\n        return this.getShaderSource(shader);\r\n\r\n    }\r\n\r\n\r\n    public inline function getSupportedExtensions() : Array<String> {\r\n\r\n        return this.getSupportedExtensions();\r\n\r\n    }\r\n\r\n\r\n    public inline function getTexParameter(target:Int, pname:Int):Dynamic {\r\n\r\n        return this.getTexParameter(target, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getUniform(program:GLProgram, location:GLUniformLocation):Dynamic {\r\n\r\n        return this.getUniform(program, location);\r\n\r\n    }\r\n\r\n\r\n    public inline function getUniformLocation(program:GLProgram, name:String):GLUniformLocation {\r\n\r\n        return this.getUniformLocation(program, name);\r\n\r\n    }\r\n\r\n\r\n    public inline function getVertexAttrib(index:Int, pname:Int):Dynamic {\r\n\r\n        return this.getVertexAttrib(index, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function getVertexAttribOffset(index:Int, pname:Int):Int {\r\n\r\n        return this.getVertexAttribOffset(index, pname);\r\n\r\n    }\r\n\r\n\r\n    public inline function hint(target:Int, mode:Int):Void {\r\n\r\n        this.hint(target, mode);\r\n\r\n    }\r\n\r\n\r\n    public inline function isBuffer(buffer:GLBuffer):Bool {\r\n\r\n        return this.isBuffer(buffer);\r\n\r\n    }\r\n\r\n\r\n    //public inline function isContextLost():Bool { return false; }\r\n\r\n\r\n    public inline function isEnabled(cap:Int):Bool {\r\n\r\n        return this.isEnabled(cap);\r\n\r\n    }\r\n\r\n\r\n    public inline function isFramebuffer(framebuffer:GLFramebuffer):Bool {\r\n\r\n        return this.isFramebuffer(framebuffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function isProgram(program:GLProgram):Bool {\r\n\r\n        return this.isProgram(program);\r\n\r\n    }\r\n\r\n\r\n    public inline function isRenderbuffer(renderbuffer:GLRenderbuffer):Bool {\r\n\r\n        return this.isRenderbuffer(renderbuffer);\r\n\r\n    }\r\n\r\n\r\n    public inline function isShader(shader:GLShader):Bool {\r\n\r\n        return this.isShader(shader);\r\n\r\n    }\r\n\r\n\r\n    public inline function isTexture(texture:GLTexture):Bool {\r\n\r\n        return this.isTexture(texture);\r\n\r\n    }\r\n\r\n\r\n    public inline function lineWidth(width:Float):Void {\r\n\r\n        this.lineWidth(width);\r\n\r\n    }\r\n\r\n\r\n    public inline function linkProgram(program:GLProgram):Void {\r\n\r\n        this.linkProgram(program);\r\n\r\n    }\r\n\r\n\r\n    public inline function pixelStorei(pname:Int, param:Int):Void {\r\n\r\n        this.pixelStorei(pname, param);\r\n\r\n    }\r\n\r\n\r\n    public inline function polygonOffset(factor:Float, units:Float):Void {\r\n\r\n        this.polygonOffset(factor, units);\r\n\r\n    }\r\n\r\n\r\n    public inline function readPixels(x:Int, y:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {\r\n\r\n        // TODO: pixels? May need setting to work (canvas.getContext(\"experimental-webgl\", {preserveDrawingBuffer: true});)\r\n\r\n        this.readPixels(x, y, width, height, format, type, pixels);\r\n\r\n    }\r\n\r\n\r\n    public inline function renderbufferStorage(target:Int, internalformat:Int, width:Int, height:Int):Void {\r\n\r\n        this.renderbufferStorage(target, internalformat, width, height);\r\n\r\n    }\r\n\r\n\r\n    public inline function sampleCoverage(value:Float, invert:Bool):Void {\r\n\r\n        this.sampleCoverage(value, invert);\r\n\r\n    }\r\n\r\n\r\n    public inline function scissor(x:Int, y:Int, width:Int, height:Int):Void {\r\n\r\n        this.scissor(x, y, width, height);\r\n\r\n    }\r\n\r\n\r\n    public inline function shaderSource(shader:GLShader, source:String):Void {\r\n\r\n        this.shaderSource(shader, source);\r\n\r\n    }\r\n\r\n\r\n    public inline function stencilFunc(func:Int, ref:Int, mask:Int):Void {\r\n\r\n        this.stencilFunc(func, ref, mask);\r\n\r\n    }\r\n\r\n\r\n    public inline function stencilFuncSeparate(face:Int, func:Int, ref:Int, mask:Int):Void {\r\n\r\n        this.stencilFuncSeparate(face, func, ref, mask);\r\n\r\n    }\r\n\r\n\r\n    public inline function stencilMask(mask:Int):Void {\r\n\r\n        this.stencilMask(mask);\r\n\r\n    }\r\n\r\n\r\n    public inline function stencilMaskSeparate(face:Int, mask:Int):Void {\r\n\r\n        this.stencilMaskSeparate(face, mask);\r\n\r\n    }\r\n\r\n\r\n    public inline function stencilOp(fail:Int, zfail:Int, zpass:Int):Void {\r\n\r\n        this.stencilOp(fail, zfail, zpass);\r\n\r\n    }\r\n\r\n\r\n    public inline function stencilOpSeparate(face:Int, fail:Int, zfail:Int, zpass:Int):Void {\r\n\r\n        this.stencilOpSeparate(face, fail, zfail, zpass);\r\n\r\n    }\r\n\r\n\r\n    public inline function texImage2D(target:Int, level:Int, internalformat:Int, width:Int, height:Int, border:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {\r\n\r\n        this.texImage2D(target, level, internalformat, width, height, border, format, type, pixels);\r\n\r\n    }\r\n\r\n    public inline function texImage2DViaImage(target: Int, level : Int, internalformat:Int, format:Int, type:Int, image : Image) : Void{\r\n        this.texImage2D(target, level, internalformat, format, type, image);\r\n    }\r\n\r\n    public inline function texImage2DViaVideo(target: Int, level : Int, internalformat:Int, format:Int, type:Int, video : Video) : Void{\r\n        this.texImage2D(target, level, internalformat, format, type, video);\r\n    }\r\n\r\n\r\n    public inline function texParameterf(target:Int, pname:Int, param:Float):Void {\r\n\r\n        this.texParameterf(target, pname, param);\r\n\r\n    }\r\n\r\n\r\n    public inline function texParameteri(target:Int, pname:Int, param:Int):Void {\r\n\r\n        this.texParameteri(target, pname, param);\r\n\r\n    }\r\n\r\n\r\n    public inline function texSubImage2D(target:Int, level:Int, xoffset:Int, yoffset:Int, width:Int, height:Int, format:Int, type:Int, pixels:ArrayBufferView):Void {\r\n\r\n        this.texSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform1f(location:GLUniformLocation, x:Float):Void {\r\n\r\n        this.uniform1f(location, x);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform1fv(location:GLUniformLocation, x:Float32Array):Void {\r\n\r\n        this.uniform1fv(location, x);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform1i(location:GLUniformLocation, x:Int):Void {\r\n\r\n        this.uniform1i(location, x);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform1iv(location:GLUniformLocation, v:Int32Array):Void {\r\n\r\n        this.uniform1iv(location, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform2f(location:GLUniformLocation, x:Float, y:Float):Void {\r\n\r\n        this.uniform2f(location, x, y);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform2fv(location:GLUniformLocation, v:Float32Array):Void {\r\n\r\n        this.uniform2fv(location, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform2i(location:GLUniformLocation, x:Int, y:Int):Void {\r\n\r\n        this.uniform2i(location, x, y);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform2iv(location:GLUniformLocation, v:Int32Array):Void {\r\n\r\n        this.uniform2iv(location, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform3f(location:GLUniformLocation, x:Float, y:Float, z:Float):Void {\r\n\r\n        this.uniform3f(location, x, y, z);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform3fv(location:GLUniformLocation, v:Float32Array):Void {\r\n\r\n        this.uniform3fv(location, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform3i(location:GLUniformLocation, x:Int, y:Int, z:Int):Void {\r\n\r\n        this.uniform3i(location, x, y, z);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform3iv(location:GLUniformLocation, v:Int32Array):Void {\r\n\r\n        this.uniform3iv(location, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform4f(location:GLUniformLocation, x:Float, y:Float, z:Float, w:Float):Void {\r\n\r\n        this.uniform4f(location, x, y, z, w);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform4fv(location:GLUniformLocation, v:Float32Array):Void {\r\n\r\n        this.uniform4fv(location, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform4i(location:GLUniformLocation, x:Int, y:Int, z:Int, w:Int):Void {\r\n\r\n        this.uniform4i(location, x, y, z, w);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniform4iv(location:GLUniformLocation, v:Int32Array):Void {\r\n\r\n        this.uniform4iv(location, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniformMatrix2fv(location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {\r\n\r\n        this.uniformMatrix2fv(location, transpose, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniformMatrix3fv(location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {\r\n\r\n        this.uniformMatrix3fv(location, transpose, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function uniformMatrix4fv(location:GLUniformLocation, transpose:Bool, v:Float32Array):Void {\r\n\r\n        this.uniformMatrix4fv(location, transpose, v);\r\n\r\n    }\r\n\r\n\r\n    public inline function useProgram(program:GLProgram):Void {\r\n\r\n        this.useProgram(program);\r\n\r\n    }\r\n\r\n\r\n    public inline function validateProgram(program:GLProgram):Void {\r\n\r\n        this.validateProgram(program);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib1f(indx:Int, x:Float):Void {\r\n\r\n        this.vertexAttrib1f(indx, x);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib1fv(indx:Int, values:Float32Array):Void {\r\n\r\n        this.vertexAttrib1fv(indx, values);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib2f(indx:Int, x:Float, y:Float):Void {\r\n\r\n        this.vertexAttrib2f(indx, x, y);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib2fv(indx:Int, values:Float32Array):Void {\r\n\r\n        this.vertexAttrib2fv(indx, values);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib3f(indx:Int, x:Float, y:Float, z:Float):Void {\r\n\r\n        this.vertexAttrib3f(indx, x, y, z);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib3fv(indx:Int, values:Float32Array):Void {\r\n\r\n        this.vertexAttrib3fv(indx, values);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib4f(indx:Int, x:Float, y:Float, z:Float, w:Float):Void {\r\n\r\n        this.vertexAttrib4f(indx, x, y, z, w);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttrib4fv(indx:Int, values:Float32Array):Void {\r\n\r\n        this.vertexAttrib4fv(indx, values);\r\n\r\n    }\r\n\r\n\r\n    public inline function vertexAttribPointer(indx:Int, size:Int, type:Int, normalized:Bool, stride:Int, offset:Int):Void {\r\n\r\n        this.vertexAttribPointer(indx, size, type, normalized, stride, offset);\r\n\r\n    }\r\n\r\n\r\n    public inline function viewport(x:Int, y:Int, width:Int, height:Int):Void {\r\n\r\n        this.viewport(x, y, width, height);\r\n\r\n    }\r\n\r\n\r\n}\r\n","package korrigan;\r\n\r\nimport glee.GPU;\r\nusing glmat.Mat4;\r\nusing glmat.Vec3;\r\n\r\ntypedef OrthoCameraOption = {\r\n\t?scale : Bool\r\n}\r\n\r\nclass OrthoCamera{\r\n\r\n\tvar _gpu : GPU;\r\n\tvar _option : OrthoCameraOption;\r\n\tvar _scale : Float = 1;\r\n\r\n\tvar _proj : Mat4;\r\n\tvar _view: Mat4;\r\n\tpublic var viewproj(default,null) : Mat4; //TODO return a Const<Mat4>\r\n\r\n\tvar _visibleWidth : Float;\r\n\tvar _visibleHeight : Float;\r\n\r\n\tvar _focusWidth : Float = 600;\r\n\tvar _focusHeight : Float = 400;\r\n\r\n\t\r\n\r\n\tpublic function new(gpu : GPU, width : Float, height : Float, ?option : OrthoCameraOption){\r\n\t\t_gpu = gpu;\r\n\t\t_focusWidth = width;\r\n\t\t_focusHeight = height;\r\n\t\t_proj = new Mat4();\r\n\t\t_view = new Mat4();\r\n\t\tviewproj = new Mat4();\r\n\t\tvar defaultOption : OrthoCameraOption = {\r\n\t\t\tscale:true\r\n\t\t};\r\n\t\tif(option != null){\r\n\t\t\toption.scale = option.scale == null ? defaultOption.scale : option.scale;\r\n\t\t}else{\r\n\t\t\toption = defaultOption;\r\n\t\t} \r\n\t\t_option =option;\r\n\t\t\r\n\t\t_gpu.setViewportChangeCallback(onViewportChanged);\r\n\t\tonViewportChanged(_gpu.viewportX, _gpu.viewportY, _gpu.viewportWidth, _gpu.viewportHeight);\r\n\t}\r\n\r\n\t\r\n\tfunction onViewportChanged(x : Int, y : Int, width : Int, height : Int){\r\n\t\t//TODO set viewproj to dirty\r\n\t\t_proj.ortho(0, width, height,0,-1,1);\r\n\r\n\t\tvar widthRatio = width/_focusWidth;\r\n\t\tvar heightRatio = height/_focusHeight;\r\n\t\tif(_option.scale){\r\n\t\t\tif(widthRatio > heightRatio){\r\n\t\t\t\t_scale = heightRatio; \r\n\t\t\t}else{\r\n\t\t\t\t_scale = widthRatio; \r\n\t\t\t}\r\n\t\t }else{\r\n\t\t \t_scale = 1;\r\n\t\t }\r\n\t\t//_proj.scale(_proj,_scale, _scale, 1); \r\n\t\t_visibleWidth = width / _scale;\r\n\t\t_visibleHeight = height / _scale;\r\n\t\t//TODO support light when _scale =1 (while the drawingbuffer has a different scale)\r\n\t}\r\n\r\n\tpublic function centerOn(x : Float, y : Float){\r\n\t\t//TODO keep in memory (state)\r\n\t\t_view.identity();\r\n\t\t_view.scale(_view,_scale,_scale,1);\r\n\t\t_view.translate(_view, _visibleWidth/2 - x,_visibleHeight/2 - y, 0);\r\n\t\tviewproj.multiply(_proj, _view);\r\n\r\n\t\t//TODO limit the side\r\n\r\n\t\t//TODO support zooming\r\n\t}\r\n\r\n\tpublic function toBufferCoordinates(vec3 : Vec3, out : Vec3) : Vec3{\r\n\t\tout = out.transformMat4(vec3, _view);\r\n\t\tout.x + _gpu.viewportX;\r\n\t\tout.y + _gpu.viewportY;\r\n\t\treturn out;\r\n\t}\r\n\r\n\t\r\n}","package tink.core;\r\n\r\n//TODO: To work around #2881 the abstracts are declared over Null. Remove this when no longer necessary.\r\n\r\nabstract Callback<T>(Null<T->Void>) from (T->Void) {\r\n\t\r\n\tinline function new(f) \r\n\t\tthis = f;\r\n\t\t\r\n\tpublic inline function invoke(data:T):Void //TODO: consider swallowing null here\r\n\t\t(this)(data);\r\n\t\t\r\n\t@:from static inline function fromNiladic<A>(f:Void->Void):Callback<A> \r\n\t\treturn new Callback(function (r) f());\r\n\t\r\n\t@:from static function fromMany<A>(callbacks:Array<Callback<A>>):Callback<A> \r\n\t\treturn\r\n\t\t\tfunction (v:A) \r\n\t\t\t\tfor (callback in callbacks)\r\n\t\t\t\t\tcallback.invoke(v);\r\n}\r\n\r\nabstract CallbackLink(Null<Void->Void>) {\r\n\t\r\n\tinline function new(link:Void->Void) \r\n\t\tthis = link;\r\n\t\t\r\n\tpublic inline function dissolve():Void \r\n\t\tif (this != null) (this)();\r\n\t\t\r\n\t@:to function toCallback<A>():Callback<A> \r\n\t\treturn this;\r\n\t\t\r\n\t@:from static inline function fromFunction(f:Void->Void) \r\n\t\treturn new CallbackLink(f);\r\n\t\t\r\n\t@:from static function fromMany(callbacks:Array<CallbackLink>)\r\n\t\treturn fromFunction(function () for (cb in callbacks) cb.dissolve());\r\n}\r\n\r\nprivate class Cell<T> {\r\n\t//TODO: the cell (or some super class of it) could just as easily act as callback link\r\n\tpublic var cb:Callback<T>;\r\n\t\r\n\tfunction new() {}\r\n\t\r\n\tpublic inline function free():Void {\r\n\t\tthis.cb = null;\r\n\t\tpool.push(this);\r\n\t}\r\n\t\r\n\tstatic var pool:Array<Cell<Dynamic>> = [];\r\n\t\r\n\tstatic public inline function get<A>():Cell<A> \r\n\t\treturn\r\n\t\t\tif (pool.length > 0) cast pool.pop();\r\n\t\t\telse new Cell();\r\n}\r\n\r\nabstract CallbackList<T>(Array<Cell<T>>) {\r\n\t\r\n\tpublic var length(get, never):Int;\r\n\t\r\n\tinline public function new():Void\r\n\t\tthis = [];\r\n\t\r\n\tinline function get_length():Int \r\n\t\treturn this.length;\t\r\n\t\r\n\tpublic function add(cb:Callback<T>):CallbackLink {\r\n\t\tvar cell = Cell.get();\r\n\t\tcell.cb = cb;\r\n\t\tthis.push(cell);\r\n\t\treturn function () {\r\n\t\t\tif (this.remove(cell))\r\n\t\t\t\tcell.free();\r\n\t\t\tcell = null;\r\n\t\t}\r\n\t}\r\n\t\t\r\n\tpublic function invoke(data:T) \r\n\t\tfor (cell in this.copy()) \r\n\t\t\tif (cell.cb != null) //This occurs when an earlier cell in this run dissolves the link for a later cell - usually a sign of convoluted code, but who am I to judge\r\n\t\t\t\tcell.cb.invoke(data);\r\n\t\t\t\r\n\tpublic function clear():Void \r\n\t\tfor (cell in this.splice(0, this.length)) \r\n\t\t\tcell.free();\r\n}","package tink.core;\r\n\r\ntypedef Pos = \r\n\t#if macro\r\n\t\thaxe.macro.Expr.Position;\r\n\t#else\r\n\t\thaxe.PosInfos;\r\n\t#end\r\n\r\n//TODO: there's huge overlap with haxe.macro.Error\r\ntypedef Error = TypedError<Dynamic>;\r\n\r\n@:enum abstract ErrorCode(Int) from Int to Int {\r\n\tvar BadRequest = 400;\r\n\tvar Unauthorized = 401;\r\n\tvar PaymentRequired = 402;\r\n\tvar Forbidden = 403;\r\n\tvar NotFound = 404;\r\n\tvar MethodNotAllowed = 405;\r\n\tvar Gone = 410;\r\n\tvar NotAcceptable = 406;\r\n\tvar Timeout = 408;\r\n\tvar Conflict = 409;\r\n\tvar OutOfRange = 416;\r\n\tvar ExpectationFailed = 417;\r\n\tvar I_am_a_Teapot = 418;\r\n\tvar AuthenticationTimeout = 419;\r\n\tvar UnprocessableEntity = 422;\r\n\r\n\tvar InternalError = 500;\r\n\tvar NotImplemented = 501;\r\n\tvar ServiceUnavailable = 503;\r\n\tvar InsufficientStorage = 507;\r\n\tvar BandwidthLimitExceeded = 509;\r\n\r\n}\r\n\r\nclass TypedError<T> {\r\n\tpublic var message(default, null):String;//It might make sense for the message to be lazy\r\n\tpublic var code(default, null):ErrorCode;\r\n\tpublic var data(default, null):T;\r\n\tpublic var pos(default, null):Null<Pos>;\r\n\t\r\n\tpublic function new(?code:ErrorCode = InternalError, message, ?pos) {\r\n\t\tthis.code = code;\r\n\t\tthis.message = message;\r\n\t\tthis.pos = pos;\r\n\t}\r\n\tfunction printPos()\r\n\t\treturn\r\n\t\t\t#if macro\r\n\t\t\t\tStd.string(pos);\r\n\t\t\t#else\r\n\t\t\t\tpos.className+'.'+pos.methodName+':'+pos.lineNumber;\r\n\t\t\t#end\r\n\t\t\t\r\n\t@:keep public function toString() {\r\n\t\tvar ret = 'Error: $message';\r\n\t\tif (pos != null)\r\n\t\t\tret += \" \"+printPos();\r\n\t\treturn ret;\r\n\t}\r\n\t\r\n\t@:keep public function throwSelf():Dynamic\r\n\t\treturn\r\n\t\t\t#if macro\r\n\t\t\t\t#if tink_macro\r\n\t\t\t\t\ttink.macro.Positions.error(pos, message);\r\n\t\t\t\t#else\r\n\t\t\t\t\thaxe.macro.Context.error(message, if (pos == null) haxe.macro.Context.currentPos() else pos);\r\n\t\t\t\t#end\r\n\t\t\t#else\r\n\t\t\t\tthrow this;\r\n\t\t\t#end\r\n\t\t\r\n\tstatic public function withData(?code:ErrorCode = 500, message:String, data:Dynamic, ?pos:Pos) {\r\n\t\tvar ret = new Error(code, message, pos);\r\n\t\tret.data = data;\r\n\t\treturn ret;\r\n\t}\r\n}\r\n","package tink.core;\r\n\r\nimport tink.core.Callback;\r\nimport haxe.ds.Option;\r\n\r\nusing tink.core.Outcome;\r\n\r\nabstract Future<T>(Callback<T>->CallbackLink) {\r\n\r\n\tpublic function new(f:Callback<T>->CallbackLink) this = f;\t\r\n\t\t\r\n\tpublic inline function handle(callback:Callback<T>):CallbackLink //TODO: consider null-case\r\n\t\treturn (this)(callback);\r\n\t\r\n\tpublic function gather():Future<T> {\r\n\t\tvar op = Future.trigger(),\r\n\t\t\tself = this;\r\n\t\treturn new Future(function (cb:Callback<T>) {\r\n\t\t\tif (self != null) {\r\n\t\t\t\thandle(op.trigger);\r\n\t\t\t\tself = null;\t\t\t\t\r\n\t\t\t}\r\n\t\t\treturn op.asFuture().handle(cb);\r\n\t\t});\r\n\t}\r\n\t\r\n\tpublic function first(other:Future<T>):Future<T>\r\n\t\treturn Future.async(function (cb:T->Void) {\r\n\t\t\thandle(cb);\r\n\t\t\tother.handle(cb);\r\n\t\t});\r\n\t\r\n\tpublic function map<A>(f:T->A, ?gather = true):Future<A> {\r\n\t\tvar ret = new Future(function (callback) return (this)(function (result) callback.invoke(f(result))));\r\n\t\treturn\r\n\t\t\tif (gather) ret.gather();\r\n\t\t\telse ret;\r\n\t}\r\n\t\r\n\tpublic function flatMap<A>(next:T->Future<A>, ?gather = true):Future<A> {\r\n\t\tvar ret = flatten(map(next, gather));\r\n\t\treturn\r\n\t\t\tif (gather) ret.gather();\r\n\t\t\telse ret;\t\t\r\n\t}\t\r\n\t\r\n\tpublic function merge<A, R>(other:Future<A>, merger:T->A->R, ?gather = true):Future<R> \r\n\t\treturn flatMap(function (t:T) {\r\n\t\t\treturn other.map(function (a:A) return merger(t, a), false);\r\n\t\t}, gather);\r\n\t\r\n\tstatic public function flatten<A>(f:Future<Future<A>>):Future<A> \r\n\t\treturn new Future(function (callback) {\r\n\t\t\tvar ret = null;\r\n\t\t\tret = f.handle(function (next:Future<A>) {\r\n\t\t\t\tret = next.handle(function (result) callback.invoke(result));\r\n\t\t\t});\r\n\t\t\treturn ret;\r\n\t\t});\r\n\t\r\n\t@:from inline static function fromTrigger<A>(trigger:FutureTrigger<A>):Future<A> \r\n\t\treturn trigger.asFuture();\r\n\t\r\n\tstatic public function ofMany<A>(futures:Array<Future<A>>, ?gather:Bool = true) {\r\n\t\tvar ret = sync([]);\r\n\t\tfor (f in futures)\r\n\t\t\tret = ret.flatMap(\r\n\t\t\t\tfunction (results:Array<A>) \r\n\t\t\t\t\treturn f.map(\r\n\t\t\t\t\t\tfunction (result) \r\n\t\t\t\t\t\t\treturn results.concat([result]),\r\n\t\t\t\t\t\tfalse\r\n\t\t\t\t\t),\r\n\t\t\t\tfalse\r\n\t\t\t);\r\n\t\treturn \r\n\t\t\tif (gather) ret.gather();\r\n\t\t\telse ret;\r\n\t}\r\n\t\r\n\t@:from static function fromMany<A>(futures:Array<Future<A>>):Future<Array<A>> \r\n\t\treturn ofMany(futures);\r\n\t\r\n\t//TODO: use this as `sync` when Haxe stops upcasting ints\r\n\t@:noUsing static public function lazy<A>(l:Lazy<A>):Future<A>\r\n\t\treturn new Future(function (cb:Callback<A>) { cb.invoke(l); return null; });\t\t\r\n\t\r\n\t@:noUsing static public function sync<A>(v:A):Future<A> \r\n\t\treturn new Future(function (callback) { callback.invoke(v); return null; } );\r\n\t\t\r\n\t@:noUsing static public function async<A>(f:(A->Void)->Void, ?lazy = false):Future<A> \r\n\t\tif (lazy) \r\n\t\t\treturn flatten(Future.lazy(async.bind(f, false)));\r\n\t\telse {\r\n\t\t\tvar op = trigger();\r\n\t\t\tf(op.trigger);\r\n\t\t\treturn op;\t\t\t\r\n\t\t}\t\t\r\n\t\t\r\n\t@:noCompletion @:op(a || b) static public function or<A>(a:Future<A>, b:Future<A>):Future<A>\r\n\t\treturn a.first(b);\r\n\t\t\r\n\t@:noCompletion @:op(a || b) static public function either<A, B>(a:Future<A>, b:Future<B>):Future<Either<A, B>>\r\n\t\treturn a.map(Either.Left, false).first(b.map(Either.Right, false));\r\n\t\t\t\r\n\t@:noCompletion @:op(a && b) static public function and<A, B>(a:Future<A>, b:Future<B>):Future<Pair<A, B>>\r\n\t\treturn a.merge(b, function (a, b) return new Pair(a, b));\r\n\t\r\n\t@:noCompletion @:op(a >> b) static public function _tryFailingFlatMap<D, F, R>(f:Surprise<D, F>, map:D->Surprise<R, F>)\r\n\t\treturn f.flatMap(function (o) return switch o {\r\n\t\t\tcase Success(d): map(d);\r\n\t\t\tcase Failure(f): Future.sync(Failure(f));\r\n\t\t});\r\n\r\n\t@:noCompletion @:op(a >> b) static public function _tryFlatMap<D, F, R>(f:Surprise<D, F>, map:D->Future<R>):Surprise<R, F> \r\n\t\treturn f.flatMap(function (o) return switch o {\r\n\t\t\tcase Success(d): map(d).map(Success);\r\n\t\t\tcase Failure(f): Future.sync(Failure(f));\r\n\t\t});\r\n\t\t\r\n\t@:noCompletion @:op(a >> b) static public function _tryFailingMap<D, F, R>(f:Surprise<D, F>, map:D->Outcome<R, F>)\r\n\t\treturn f.map(function (o) return o.flatMap(map));\r\n\r\n\t@:noCompletion @:op(a >> b) static public function _tryMap<D, F, R>(f:Surprise<D, F>, map:D->R)\r\n\t\treturn f.map(function (o) return o.map(map));\t\t\r\n\t\r\n\t@:noCompletion @:op(a >> b) static public function _flatMap<T, R>(f:Future<T>, map:T->Future<R>)\r\n\t\treturn f.flatMap(map);\r\n\r\n\t@:noCompletion @:op(a >> b) static public function _map<T, R>(f:Future<T>, map:T->R)\r\n\t\treturn f.map(map);\r\n\r\n\t@:noUsing static public inline function trigger<A>():FutureTrigger<A> \r\n\t\treturn new FutureTrigger();\r\n\t\r\n}\r\n\r\n\r\nclass FutureTrigger<T> {\r\n\tvar result:T;\r\n\tvar list:CallbackList<T>;\r\n\tvar future:Future<T>;\r\n\tpublic function new() {\r\n\t\tthis.list = new CallbackList();\r\n\t\tfuture = new Future(\r\n\t\t\tfunction (callback)\r\n\t\t\t\treturn \r\n\t\t\t\t\tif (list == null) {\r\n\t\t\t\t\t\tcallback.invoke(result);\r\n\t\t\t\t\t\tnull;\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse list.add(callback)\r\n\t\t);\r\n\t}\r\n\tpublic inline function asFuture() return future;\r\n\t\r\n\tpublic inline function trigger(result:T):Bool\r\n\t\treturn\r\n\t\t\tif (list == null) false;\r\n\t\t\telse {\r\n\t\t\t\tvar list = this.list;\r\n\t\t\t\tthis.list = null;\r\n\t\t\t\tthis.result = result;\r\n\t\t\t\tlist.invoke(result);\r\n\t\t\t\tlist.clear();//free callback links\r\n\t\t\t\ttrue;\r\n\t\t\t}\r\n}\r\n\r\ntypedef Surprise<D, F> = Future<Outcome<D, F>>;","package tink.core;\r\n\r\nabstract Lazy<T>(Void->T) {\r\n\t\r\n\tinline function new(r) this = r;\r\n\t\r\n\t@:to public inline function get():T\r\n\t\treturn (this)();\r\n\t\t\t\r\n\t@:from static public function ofFunc<T>(f:Void->T) {\r\n\t\tvar result = null;\r\n\t\t#if debug var busy = false; #end\r\n\t\treturn new Lazy(function () {\r\n\t\t\t#if debug if (busy) throw new Error('circular lazyness');#end\r\n\t\t\tif (f != null) {\r\n\t\t\t\t#if debug busy = true;#end\r\n\t\t\t\tresult = f();\r\n\t\t\t\tf = null;\r\n\t\t\t\t#if debug busy = false;#end\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t});\r\n\t}\r\n\t\r\n\tpublic inline function map<A>(f:T->A):Lazy<A> \r\n\t\treturn Lazy.ofFunc(function () return f(get()));\r\n\t\t\r\n\tpublic inline function flatMap<A>(f:T->Lazy<A>):Lazy<A> \r\n\t\treturn Lazy.ofFunc(function () return f(get()).get());\r\n\t\r\n\t@:from static inline function ofConst<T>(c:T) \r\n\t\treturn new Lazy(function () return c);\r\n}\t","package tink.core;\r\n\r\nimport haxe.ds.Option;\r\nimport tink.core.Either;\r\n\r\nenum Outcome<Data, Failure> {//TODO: turn into abstract when this commit is released: https://github.com/HaxeFoundation/haxe/commit/e8715189fc055220f2f33a06c5e1331c96310a88\r\n\tSuccess(data:Data);\r\n\tFailure(failure:Failure);\r\n}\r\n\r\nclass OutcomeTools {\r\n\tstatic public function sure<D, F>(outcome:Outcome<D, F>):D \r\n\t\treturn\r\n\t\t\tswitch (outcome) {\r\n\t\t\t\tcase Success(data): \r\n\t\t\t\t\tdata;\r\n\t\t\t\tcase Failure(failure): \r\n\t\t\t\t\tif (Std.is(failure, Error)) \r\n\t\t\t\t\t\tuntyped failure.throwSelf();\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthrow failure;\r\n\t\t\t}\r\n\t\r\n\tstatic public function toOption<D, F>(outcome:Outcome<D, F>):Option<D>\r\n\t\treturn \r\n\t\t\tswitch (outcome) {\r\n\t\t\t\tcase Success(data): Option.Some(data);\r\n\t\t\t\tcase Failure(_): Option.None;\r\n\t\t\t}\r\n\t\r\n\tstatic public function toOutcome<D>(option:Option<D>, ?pos:haxe.PosInfos):Outcome<D, Error>\r\n\t\treturn\r\n\t\t\tswitch (option) {\r\n\t\t\t\tcase Some(value): \r\n\t\t\t\t\tSuccess(value);\r\n\t\t\t\tcase None: \r\n\t\t\t\t\tFailure(new Error(NotFound, 'Some value expected but none found in ' + pos.fileName + '@line ' + pos.lineNumber));\r\n\t\t\t}\r\n\t\r\n\tstatic public inline function orUse<D, F>(outcome: Outcome<D, F>, fallback: Lazy<D>):D \r\n\t\treturn\r\n\t\t\tswitch (outcome) {\r\n\t\t\t\tcase Success(data): data;\r\n\t\t\t\tcase Failure(_): fallback;\r\n\t\t\t}\t\t\r\n\t\t\t\r\n\tstatic public inline function orTry<D, F>(outcome: Outcome<D, F>, fallback: Lazy<Outcome<D, F>>):Outcome<D, F> \r\n\t\treturn\r\n\t\t\tswitch (outcome) {\r\n\t\t\t\tcase Success(_): outcome;\r\n\t\t\t\tcase Failure(_): fallback;\r\n\t\t\t}\r\n\t\r\n\tstatic public inline function equals<D, F>(outcome:Outcome<D, F>, to: D):Bool \r\n\t\treturn \r\n\t\t\tswitch (outcome) {\r\n\t\t\t\tcase Success(data): data == to;\r\n\t\t\t\tcase Failure(_): false;\r\n\t\t\t}\r\n\t\r\n\tstatic public inline function map<A, B, F>(outcome:Outcome<A, F>, transform: A->B) \r\n\t\treturn \r\n\t\t\tswitch (outcome) {\r\n\t\t\t\tcase Success(a): \r\n\t\t\t\t\tSuccess(transform(a));\r\n\t\t\t\tcase Failure(f): \r\n\t\t\t\t\tFailure(f);\r\n\t\t\t}\r\n\t\r\n\tstatic public inline function isSuccess<D, F>(outcome:Outcome<D, F>):Bool \r\n\t\treturn \r\n\t\t\tswitch outcome {\r\n\t\t\t\tcase Success(_): true;\r\n\t\t\t\tdefault: false;\r\n\t\t\t}\r\n\t\r\n\tstatic public function flatMap<DIn, FIn, DOut, FOut>(o:Outcome<DIn, FIn>, mapper:OutcomeMapper<DIn, FIn, DOut, FOut>):Outcome<DOut, FOut> {\r\n\t\treturn mapper.apply(o);\r\n\t}\r\n}\r\n\r\nprivate abstract OutcomeMapper<DIn, FIn, DOut, FOut>({ f: Outcome<DIn, FIn>->Outcome<DOut, FOut> }) {\r\n\tfunction new(f) this = { f: f };\r\n\tpublic function apply(o) \r\n\t\treturn this.f(o);\r\n\t\t\r\n\t@:from static function withSameError<In, Out, Error>(f:In->Outcome<Out, Error>):OutcomeMapper<In, Error, Out, Error> {\r\n\t\treturn new OutcomeMapper(function (o)\r\n\t\t\treturn switch o {\r\n\t\t\t\tcase Success(d): f(d);\r\n\t\t\t\tcase Failure(f): Failure(f);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\t\r\n\t@:from static function withEitherError<DIn, FIn, DOut, FOut>(f:DIn->Outcome<DOut, FOut>):OutcomeMapper<DIn, FIn, DOut, Either<FIn, FOut>> {\r\n\t\treturn new OutcomeMapper(function (o)\r\n\t\t\treturn switch o {\r\n\t\t\t\tcase Success(d): \r\n\t\t\t\t\tswitch f(d) {\r\n\t\t\t\t\t\tcase Success(d): Success(d);\r\n\t\t\t\t\t\tcase Failure(f): Failure(Right(f));\r\n\t\t\t\t\t}\r\n\t\t\t\tcase Failure(f): Failure(Left(f));\r\n\t\t\t}\r\n\t\t);\t\t\r\n\t}\r\n}","package tink.core;\r\n\r\nabstract Pair<A, B>(MPair<A, B>) {\r\n\t\r\n\tpublic var a(get, never):A;\r\n\tpublic var b(get, never):B;\r\n\t\r\n\tpublic inline function new(a:A, b:B) this = new MPair(a, b);\r\n\t\r\n\tinline function get_a():A return this.a;\r\n\tinline function get_b():B return this.b;\r\n\t\r\n\t@:to inline function toBool() \r\n\t\treturn this != null;\r\n\t\t\r\n\t@:op(!a) public function isNil() \r\n\t\treturn this == null;\r\n\t\r\n\tstatic public function nil<A, B>():Pair<A, B> \r\n\t\treturn null;\r\n}\r\n\r\n#if neko\r\n\tprivate typedef Data<A, B> = neko.NativeArray<Dynamic>;\r\n#elseif (js || java)\r\n\tprivate typedef Data<A, B> = { a: A, b: B } \r\n\t\t//this is possibly also the best choice for PHP\r\n\t\t//also for reasons yet unknown to me Java will be unable to deal with a class here\r\n#else\r\n\tprivate class Data<A, B> {\r\n\t\tpublic var a:A;\r\n\t\tpublic var b:B;\r\n\t\tpublic function new(a, b) {\r\n\t\t\tthis.a = a;\r\n\t\t\tthis.b = b;\r\n\t\t}\r\n\t}\r\n#end\r\n\r\nabstract MPair<A, B>(Data<A, B>) {\r\n\tpublic var a(get, set):A;\r\n\tpublic var b(get, set):B;\r\n\t\r\n\tpublic inline function new(a:A, b:B) this =\r\n\t\t#if neko\r\n\t\t\tuntyped $array(a, b);\r\n\t\t#elseif (js || java)\r\n\t\t\t{ a: a, b: b };\r\n\t\t#else\r\n\t\t\tnew Data(a, b);\r\n\t\t#end\r\n\t\r\n\tinline function get_a():A \r\n\t\treturn #if neko this[0] #else this.a #end;\r\n\t\t\r\n\tinline function get_b():B \r\n\t\treturn #if neko this[1] #else this.b #end;\r\n\t\t\r\n\tinline function set_a(v:A):A\r\n\t\treturn #if neko this[0] #else this.a #end = v;\r\n\t\t\r\n\tinline function set_b(v:B):B\r\n\t\treturn #if neko this[1] #else this.b #end = v;\r\n}\t","package tri;\r\n\r\n@shaders({vertex:\"tri/shaders/simple_texture.v.glsl\", fragment:\"tri/shaders/simple_texture.f.glsl\"})\r\nclass SimpleTexturedProgram implements glee.GPUProgram{}","package glee.macro;\r\n\r\nimport glee.GLSLShaderGroup;\r\nimport haxe.macro.Expr;\r\nimport haxe.macro.Context;\r\nimport tink.macro.ClassBuilder;\r\nimport tink.macro.Member;\r\n\r\nusing tink.MacroApi;\r\n\r\nusing belt.MacroUtils;\r\n\r\nclass GPUProgramMacro{\r\n\r\n\r\n\tmacro static public function apply() : Array<Field>{\r\n\t\t\r\n        return ClassBuilder.run([generateFieldsFromShaders], false); //true for debug\r\n\r\n    }\r\n\r\n    static private function generateFieldsFromShaders(classBuilder : ClassBuilder):Void{\r\n\r\n        var pos = Context.currentPos();\r\n\r\n        var target = classBuilder.target;\r\n        if (target.isInterface){\r\n            return;\r\n        }\r\n\r\n        \r\n\t\t\r\n\r\n        var targetPath = {pack:target.pack, name: target.name};\r\n\r\n\r\n        var metadata = target.meta.get();\r\n\r\n        var shaderGroup = getShaderGroupFromMetadata(metadata);\r\n\r\n        var glMember = {\r\n                        name: \"_gl\",\r\n                        pos: pos,\r\n                        access: [APrivate],\r\n                        kind: FVar(macro : loka.gl.GL,macro null),\r\n                        };\r\n        classBuilder.addMember(glMember);\r\n        \r\n        var nativeProgramMember = {\r\n                        name: \"_nativeProgram\",\r\n                        pos: pos,\r\n                        access: [APrivate],\r\n                        kind: FVar(macro : loka.gl.GL.GLProgram,macro null),\r\n                        };\r\n        classBuilder.addMember(nativeProgramMember);\r\n        \r\n\r\n        var constructor = classBuilder.getConstructor();\r\n        constructor.isPublic = false;\r\n        constructor.addArg(\"gl\",macro : loka.gl.GL);\r\n        constructor.addArg(\"nativeProgram\",macro : loka.gl.GL.GLProgram);\r\n        constructor.addStatement(macro _nativeProgram = nativeProgram);\r\n        constructor.addStatement(macro _gl = gl);\r\n        \r\n\r\n        var assignExpr : Expr = macro var program = glee.GPUPorgramUtil.GPUProgramUtil.upload(gpu.gl,$v{shaderGroup.vertexShaderSrc},$v{shaderGroup.fragmentShaderSrc});\r\n        var uploadBody : Expr = [\r\n            assignExpr,\r\n            {pos:pos, expr : EReturn({pos:pos,expr:ENew(targetPath,[\r\n                macro gpu.gl,\r\n                macro program\r\n                ])})}\r\n        ].toBlock();\r\n        \r\n        var arguments = [Functions.toArg(\"gpu\",macro : glee.GPU)];\r\n        var uploadMember = Member.method(\"upload\",Functions.func(\r\n            uploadBody, \r\n            arguments,\r\n            TPath(targetPath),\r\n            null,\r\n            false));\r\n        uploadMember.isStatic = true;\r\n        classBuilder.addMember(uploadMember);\r\n\r\n\r\n        \r\n\r\n\r\n        var numTexture = 0;\r\n        for (uniform in shaderGroup.uniforms){\r\n            var uniformName = uniform.name;\r\n            var uniformLocationVariableName = \"_\" + uniformName + \"_shaderLocation\";\r\n\r\n            classBuilder.addMember({\r\n                name: uniformLocationVariableName,\r\n                pos: pos,\r\n                access: [APrivate],\r\n                kind: FVar(macro : loka.gl.GL.GLUniformLocation,macro null), \r\n                });\r\n\r\n\r\n            constructor.addStatement(macro $i{uniformLocationVariableName} =  _gl.getUniformLocation(_nativeProgram,$v{uniformName}));\r\n\r\n            var arguments = [];\r\n\r\n            var body : Expr = macro _gl.useProgram(_nativeProgram); //TODO do it in draw and save the data to be uploaded\r\n            var attrTPath = switch(cast uniform.type){\r\n                case TPath(att): att;\r\n                default: Context.error(\"should be a TPath\", pos); null;\r\n            };\r\n            switch(attrTPath.name){\r\n                case \"Vec2\":\r\n                    arguments.push(Functions.toArg(\"x\", macro : Float));\r\n                    arguments.push(Functions.toArg(\"y\", macro : Float));\r\n                    body.append(macro _gl.uniform2f($i{uniformLocationVariableName}, x, y));\r\n                    //arguments.push(Functions.toArg(\"vec\", uniform.type));\r\n                    //body.append(macro _gl.uniform2f($i{uniformLocationVariableName}, vec.x, vec.y));\r\n                case \"Vec3\":\r\n                    arguments.push(Functions.toArg(\"x\", macro : Float));\r\n                    arguments.push(Functions.toArg(\"y\", macro : Float));\r\n                    arguments.push(Functions.toArg(\"z\", macro : Float));\r\n                    body.append(macro _gl.uniform3f($i{uniformLocationVariableName}, x, y, z));\r\n                    //arguments.push(Functions.toArg(\"vec\", uniform.type));\r\n                    //body.append(macro _gl.uniform3f($i{uniformLocationVariableName}, vec.x, vec.y, vec.z));\r\n                    \r\n                case \"Vec4\":\r\n                    arguments.push(Functions.toArg(\"x\", macro : Float));\r\n                    arguments.push(Functions.toArg(\"y\", macro : Float));\r\n                    arguments.push(Functions.toArg(\"z\", macro : Float));\r\n                    arguments.push(Functions.toArg(\"w\", macro : Float));\r\n                     body.append(macro _gl.uniform4f($i{uniformLocationVariableName}, x, y, z, w));\r\n                    //arguments.push(Functions.toArg(\"vec\", uniform.type));\r\n                    //body.append(macro _gl.uniform4f($i{uniformLocationVariableName}, vec.x, vec.y, vec.z, vec.w));\r\n                case \"Int\":\r\n                    arguments.push(Functions.toArg(\"x\", macro : Int));\r\n                    body.append(macro _gl.uniform1i($i{uniformLocationVariableName}, x));\r\n                case \"Float\":\r\n                    arguments.push(Functions.toArg(\"x\", macro : Float));\r\n                    body.append(macro _gl.uniform1f($i{uniformLocationVariableName}, x));\r\n                case \"Mat4\":\r\n                    //arguments.push(Functions.toArg(\"mat\", macro : loka.util.Float32Array));\r\n                    //body.append(macro _gl.uniformMatrix4fv($i{uniformLocationVariableName}, false, mat));\r\n                    arguments.push(Functions.toArg(\"mat\", uniform.type));\r\n                    body.append(macro _gl.uniformMatrix4fv($i{uniformLocationVariableName}, false, mat));\r\n                case \"GPUTexture\":\r\n                    //arguments.push(Functions.toArg(\"texture\", macro : glee.GPUTexture));\r\n                    //body.append(macro _gl.activeTexture (loka.gl.GL.TEXTURE0 + $v{numTexture})); //TODO store the texture Index                 \r\n                    //body.append(macro _gl.bindTexture (loka.gl.GL.TEXTURE_2D, texture.nativeTexture));\r\n                    //body.append(macro _gl.uniform1i($i{uniformLocationVariableName}, $v{numTexture}));\r\n                    //numTexture ++;\r\n                    arguments.push(Functions.toArg(\"texture\", uniform.type));\r\n                    body.append(macro _gl.activeTexture (loka.gl.GL.TEXTURE0 + $v{numTexture})); //TODO store the texture Index                   \r\n                    body.append(macro _gl.bindTexture (loka.gl.GL.TEXTURE_2D, texture.nativeTexture));\r\n                    body.append(macro _gl.uniform1i($i{uniformLocationVariableName}, $v{numTexture}));                    \r\n                    numTexture ++;\r\n                case \"GPUCubeTexture\":\r\n                    //arguments.push(Functions.toArg(\"texture\", macro : glee.GPUCubeTexture));\r\n                    //body.append(macro _gl.activeTexture (loka.gl.GL.TEXTURE0 + $v{numTexture})); //TODO store the texture Index\r\n                    //body.append(macro _gl.bindTexture (loka.gl.GL.TEXTURE_CUBE_MAP, texture.nativeTexture));\r\n                    //body.append(macro _gl.uniform1i($i{uniformLocationVariableName}, $v{numTexture}));/\r\n                    //numTexture ++;\r\n                    arguments.push(Functions.toArg(\"texture\", uniform.type));\r\n                    body.append(macro _gl.activeTexture (loka.gl.GL.TEXTURE0 + $v{numTexture})); \r\n                    body.append(macro _gl.bindTexture (loka.gl.GL.TEXTURE_CUBE_MAP, texture.nativeTexture));\r\n                    body.append(macro _gl.uniform1i($i{uniformLocationVariableName}, $v{numTexture}));//TODO store the texture Index\r\n                    numTexture ++;\r\n                //default :\r\n                //    throw \"\" + uniform.type + \" not supported yet\";\r\n            }\r\n            \r\n\r\n            var member = Member.method(\"set_\" + uniform.name,Functions.func(body, arguments,null,null,false));\r\n            classBuilder.addMember(member);\r\n            \r\n        }\r\n\r\n\r\n        var attributes = shaderGroup.attributes;\r\n\r\n        //TODO remove duplication (see GPUBufferMacro)\r\n\r\n        \r\n        var totalStride : Int = 0;\r\n        for (attribute in attributes){\r\n            var numValues = 1;\r\n            var attrTPath = switch(cast attribute.type){\r\n                case TPath(att): att;\r\n                default: Context.error(\"should be a TPath\", pos); null;\r\n            };\r\n            if(attrTPath.name == \"Vec4\"){\r\n                numValues = 4;\r\n            }else if(attrTPath.name == \"Vec3\"){\r\n                numValues = 3;\r\n            }else if(attrTPath.name == \"Vec2\"){\r\n                numValues = 2;\r\n            }\r\n            totalStride+= numValues; //work for samme types attributes //TODO make it work for mixed types Int/Float...\r\n        }         \r\n\r\n\r\n        var drawBody =  macro _gl.useProgram(_nativeProgram);\r\n        drawBody.append(macro _gl.bindBuffer(loka.gl.GL.ARRAY_BUFFER,buffer.nativeBuffer));\r\n\r\n        //TODO remove duplication (see GPUBufferMacro)\r\n        var stride = 0;   \r\n        for (attribute in attributes){\r\n            var attributeName = attribute.name;\r\n            var attributeLocationVariableName = \"_\" + attributeName + \"_shaderLocation\";\r\n\r\n\r\n            var numValues = 1;\r\n            var attrTPath = switch(cast attribute.type){\r\n                case TPath(att): att;\r\n                default: Context.error(\"should be a TPath\", pos); null;\r\n            };\r\n            if(attrTPath.name == \"Vec4\"){\r\n                numValues = 4;\r\n            }else if(attrTPath.name == \"Vec3\"){\r\n                numValues = 3;\r\n            }else if(attrTPath.name == \"Vec2\"){\r\n                numValues = 2;\r\n            }\r\n\r\n            classBuilder.addMember({\r\n                name: attributeLocationVariableName,\r\n                pos: pos,\r\n                access: [APrivate],\r\n                kind: FVar(macro : Int,macro 0), //TODO -1 or 0 ? \r\n                });\r\n\r\n            constructor.addStatement(macro $i{attributeLocationVariableName} = _gl.getAttribLocation(_nativeProgram,$v{attributeName}));\r\n            drawBody.append(macro _gl.enableVertexAttribArray($i{attributeLocationVariableName}));\r\n            drawBody.append(macro _gl.vertexAttribPointer ($i{attributeLocationVariableName}, $v{numValues}, loka.gl.GL.FLOAT, false, $v{totalStride} * 4, $v{stride} * 4)); //TODO only FLOAT need Int...\r\n\r\n            stride += numValues;\r\n        }\r\n\r\n        drawBody.append(macro if (!buffer.uploaded){buffer.upload();});\r\n        drawBody.append(macro _gl.bindBuffer (loka.gl.GL.ARRAY_BUFFER, buffer.nativeBuffer));\r\n        drawBody.append(macro _gl.drawArrays(loka.gl.GL.TRIANGLES, 0, buffer.getNumVerticesWritten()));//Std.int(buffer.numVertices/2))); // TODO use index, else have to specify number of triangles\r\n\r\n        drawBody.append(macro  _gl.useProgram(null));\r\n        //trace(\"--------------------DRAW BODY -----------------------\");\r\n        //trace(drawBody.toString());\r\n\r\n        var bufferClass = glee.macro.GPUBufferMacro.getBufferClassFromAttributes(shaderGroup.attributes);\r\n        var arguments = [Functions.toArg(\"buffer\",bufferClass)];\r\n        var drawMember = Member.method(\"draw\",Functions.func(\r\n            drawBody, \r\n            arguments,\r\n            null,\r\n            null,\r\n            false));\r\n        classBuilder.addMember(drawMember);\r\n\r\n\t}\r\n\r\n    static public function getShaderGroupFromMetadata(metadata : Metadata) : GLSLShaderGroup{\r\n        var pos = Context.currentPos();\r\n\r\n        var vertexShaderFilePath : String = null;\r\n        var fragmentShaderFilePath : String = null;\r\n\r\n        var metadataValues = metadata.getValues(\"shaders\");\r\n        if(metadataValues.length != 1){\r\n            Context.error(\"There should be exactly 1 shader pair\", pos); \r\n            return null;\r\n        }\r\n\r\n        var value = metadataValues[0][0];\r\n\r\n\r\n        switch(value.expr){\r\n            case EObjectDecl(values) :\r\n                for (value in values){\r\n                    switch (value.field){\r\n                        case \"vertex\" : \r\n                            vertexShaderFilePath = extractShaderMetdata(value.expr);\r\n                        case \"fragment\" : \r\n                            fragmentShaderFilePath = extractShaderMetdata(value.expr);\r\n                        default : \r\n                            Context.warning(\"field \" + value.field + \" not supported for @shaders metadata\", pos);\r\n                    }\r\n                }\r\n\r\n            default : Context.error(\"The metadata should be an object declaration\", pos); return null;\r\n        }\r\n\r\n        return GLSLShaderGroup.get(vertexShaderFilePath, fragmentShaderFilePath);\r\n    }\r\n\r\n\r\n\tstatic function extractShaderMetdata(expr : Expr) : String{\r\n\t\tvar pos = Context.currentPos();\r\n\t\treturn switch (expr.expr){\r\n    \t\tcase EConst(c) :\r\n                switch (c){\r\n                    case CString(s): s;\r\n                    default : Context.error(\"The shader value should be a String\", pos); null;\r\n                }\r\n            default: Context.error(\"The shader value should be a Constant\", pos); null;\r\n        }\r\n\t}\r\n}","/*\n * Copyright (C)2005-2012 Haxe Foundation\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nimport js.Boot;\n\n@:keepInit\n@:coreApi class Std {\n\n\tpublic static inline function is( v : Dynamic, t : Dynamic ) : Bool {\n\t\treturn untyped js.Boot.__instanceof(v,t);\n\t}\n\n\tpublic static inline function instance<T:{},S:T>( value : T, c : Class<S> ) : S {\n\t\treturn untyped __instanceof__(value, c) ? cast value : null;\n\t}\n\n\tpublic static function string( s : Dynamic ) : String {\n\t\treturn untyped js.Boot.__string_rec(s,\"\");\n\t}\n\n\tpublic static inline function int( x : Float ) : Int {\n\t\treturn (cast x) | 0;\n\t}\n\n\tpublic static function parseInt( x : String ) : Null<Int> {\n\t\tvar v = untyped __js__(\"parseInt\")(x, 10);\n\t\t// parse again if hexadecimal\n\t\tif( v == 0 && (x.charCodeAt(1) == 'x'.code || x.charCodeAt(1) == 'X'.code) )\n\t\t\tv = untyped __js__(\"parseInt\")(x);\n\t\tif( untyped __js__(\"isNaN\")(v) )\n\t\t\treturn null;\n\t\treturn cast v;\n\t}\n\n\tpublic static inline function parseFloat( x : String ) : Float {\n\t\treturn untyped __js__(\"parseFloat\")(x);\n\t}\n\n\tpublic static function random( x : Int ) : Int {\n\t\treturn untyped x <= 0 ? 0 : Math.floor(Math.random()*x);\n\t}\n\n\tstatic function __init__() : Void untyped {\n\t\t__feature__(\"js.Boot.getClass\",String.prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"String\"] = String,String));\n\t\t__feature__(\"js.Boot.isClass\",String.__name__ = __feature__(\"Type.getClassName\",[\"String\"],true));\n\t\t__feature__(\"Type.resolveClass\",$hxClasses[\"Array\"] = Array);\n\t\t__feature__(\"js.Boot.isClass\",Array.__name__ = __feature__(\"Type.getClassName\",[\"Array\"],true));\n\t\t__feature__(\"Date.*\", {\n\t\t\t__feature__(\"js.Boot.getClass\",__js__('Date').prototype.__class__ = __feature__(\"Type.resolveClass\",$hxClasses[\"Date\"] = __js__('Date'),__js__('Date')));\n\t\t\t__feature__(\"js.Boot.isClass\",__js__('Date').__name__ = [\"Date\"]);\n\t\t});\n\t\t__feature__(\"Int.*\",{\n\t\t\tvar Int = __feature__(\"Type.resolveClass\", $hxClasses[\"Int\"] = { __name__ : [\"Int\"] }, { __name__ : [\"Int\"] });\n\t\t});\n\t\t__feature__(\"Dynamic.*\",{\n\t\t\tvar Dynamic = __feature__(\"Type.resolveClass\", $hxClasses[\"Dynamic\"] = { __name__ : [\"Dynamic\"] }, { __name__ : [\"Dynamic\"] });\n\t\t});\n\t\t__feature__(\"Float.*\",{\n\t\t\tvar Float = __feature__(\"Type.resolveClass\", $hxClasses[\"Float\"] = __js__(\"Number\"), __js__(\"Number\"));\n\t\t\tFloat.__name__ = [\"Float\"];\n\t\t});\n\t\t__feature__(\"Bool.*\",{\n\t\t\tvar Bool = __feature__(\"Type.resolveEnum\",$hxClasses[\"Bool\"] = __js__(\"Boolean\"), __js__(\"Boolean\"));\n\t\t\tBool.__ename__ = [\"Bool\"];\n\t\t});\n\t\t__feature__(\"Class.*\",{\n\t\t\tvar Class = __feature__(\"Type.resolveClass\", $hxClasses[\"Class\"] = { __name__ : [\"Class\"] }, { __name__ : [\"Class\"] });\n\t\t});\n\t\t__feature__(\"Enum.*\",{\n\t\t\tvar Enum = {};\n\t\t});\n\t\t__feature__(\"Void.*\",{\n\t\t\tvar Void = __feature__(\"Type.resolveEnum\", $hxClasses[\"Void\"] = { __ename__ : [\"Void\"] }, { __ename__ : [\"Void\"] });\n\t\t});\n\n#if !js_es5\n\t\t__feature__(\"Array.map\",\n\t\t\tif( Array.prototype.map == null )\n\t\t\t\tArray.prototype.map = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length )\n\t\t\t\t\t\ta[i] = f(__this__[i]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n\t\t__feature__(\"Array.filter\",\n\t\t\tif( Array.prototype.filter == null )\n\t\t\t\tArray.prototype.filter = function(f) {\n\t\t\t\t\tvar a = [];\n\t\t\t\t\tfor( i in 0...__this__.length ) {\n\t\t\t\t\t\tvar e = __this__[i];\n\t\t\t\t\t\tif( f(e) ) a.push(e);\n\t\t\t\t\t}\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t);\n#end\n\t}\n\n}\n"],
"names":[],
"mappings":"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CA;4CACA;kCAOA;wCACA;4CACA;8CACA;uCAGA;+CACA;uCAGA;uCACA;yCACA;yCACA;wCACA;kDACA;wCACA;kDACA;qCACA;sCAGA;8CACA;8CACA;sDACA;qCAEA;qCACA;sCACA;qCAEA;sCACA;+CAEA;+BAGA;8BACA;wCACA;mCAcA;+BACA;gCACA;sCACA;oCACA;sCACA;6CACA;kDACA;yCACA;kCAGA;sCACA;uCACA;2CACA;uCACA;4BAGA;6BACA;oCAGA;kDACA;kDACA;wCACA;oCACA;qCACA;yCACA;2CACA;oCACA;6CACA;sCACA;sCACA;iDACA;iDACA;qCACA;4CACA;2CACA;2CACA;2CACA;sDACA;sDACA;0CACA;iDACA;gDACA;kCACA;sCACC;2CAED;yCACA;0CACA;wCACA;0CACA;2CACA;uCACA;kCACA;oCACA;mCACA;oCACA;oCACA;sCACA;8CACA;+CAEA;4CACA;wCACA;iCACA;+CACA;gDACA;oDAQA;mCAGA;iCACA;gCACA;8CAGC;8BAGD;uCACA;+BACA;wCACA;6BACA;sCACA;+BACA;yCAGA;+BACA;6BACA;8BACA;mCACA;yCACA;gDAIA;gDACA;8CACA;yCAGE;uCACA;4CACA;oDACA;6CACA;0DACA;wDACA;iDACA;sDACA;qCACA;uCACA;qCACA;yCACA;0CACA;yCACA;2CACA;kDACA;yCACA;+BAGF;8BACA;+BACA;gCACA;iCACA;kCACA;gCACA;gCACA;8BAIA;iCACA;8BACA;8BACA;gCACA;mCACA;mCACA;gCAGA;kCACA;iCACA;iCAGA;gCACA;gDAKA;+CACA;+CACA;8CACA;4CAGA;4CACA;wCACA;wCACA;oCAGA;iCACA;0CAEA;kDACA;qDACA;qDACA;qDACA;qDACA;qDACA;qDACA;mDACA;kCAGA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;mCACA;wCACA;gCAGA;uCACA;yCACA;oCAGA;oCACA;oCACA;kCACA;kCACA;kCACA;8BACA;mCACA;mCACA;mCACA;oCACA;oCACA;oCACA;oCACA;sCACA;qDAGI;kDACA;oDACA;kDACA;wDACA;qDACA;4DACA;mDAGH;sCACA;wCAGD;mCAGA;sCACA;oCACA;iCACA;oCACA;kCACA;qCAGA;sCACA;+BAEA;iCACA;gCACA;2CACA;uCACA;wCACA;uCACA;4CAEA;6CACA;sDACA;+CACA;iDACA;gDACA;iDACA;iDACA;mDACA;4DAEc;4DACA;8DACA;sEACA;2CAEd;0CACA;4CACA;kDACA;8BAEA;8CAEW;2DACA;mEACA;2DACA;iDACA;6CAEX;8CACA;+CACA;uDAEA;6CAGA;wDACA;4CACA;4DACI;+CACJ;gCE7YtB;qCMhDxC,3BADC,TAAQ,QAAQ,EAA8C;;;;"
}